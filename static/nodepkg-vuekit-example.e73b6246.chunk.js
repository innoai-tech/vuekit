import { z as n, c as a, r as e, j as s, b as c, k as t, g as l, s as o, A as p, B as i, x as r, y as u, F as d } from "./lib-nodepkg-vuekit.fdbc1ce2.chunk.js";
import { s as m, c as k } from "./lib-nodepkg-typedef.6b41fceb.chunk.js";
let h = n({ value: m().optional().default("1"), onValueChange: k() }, (n2, a2) => {
  var e2;
  let { emit: c2 } = a2, r2 = t(null !== (e2 = n2.value) && void 0 !== e2 ? e2 : "");
  return l(r2, p(300), o((n3) => c2("value-change", n3))), l(r2, i((n3) => s("input", { value: n3, onInput: (n4) => {
    r2.value = n4.target.value;
  } })));
}), N = a(() => {
  let n2 = e("default");
  return () => s("div", { children: c("div", { style: { display: "flex", gap: "1rem" }, children: [s(g, { value: n2.value, onValueChange: (a2) => {
    n2.value = a2;
  } }), c("div", { children: ["Inputted: ", n2.value] })] }) });
}), g = Object.assign(h, { displayName: "TextDebounceInput" }), v = Object.assign(N, { displayName: "RxInVueMdCodeBlockd4735E3ADefault" });
function y(n2) {
  let a2 = Object.assign({ p: "p", a: "a", div: "div", codeblockd4735e3a: "codeblockd4735e3a", pre: "pre", code: "code", span: "span" }, n2.components);
  return c(d, { children: [c(a2.p, { children: ["和 ", s(a2.a, { href: "https://rxjs.dev/", children: "rxjs" }), " 集成"] }), "\n", c(a2.div, { "data-example": "", children: [s(a2.div, { "data-example-container": "", children: s(a2.codeblockd4735e3a, {}) }), s(a2.pre, { className: "language-tsx", children: c(a2.code, { className: "language-tsx", children: [s(a2.span, { className: "token keyword module", children: "import" }), " ", c(a2.span, { className: "token imports", children: [s(a2.span, { className: "token punctuation", children: "{" }), "\n  component", s(a2.span, { className: "token punctuation", children: "," }), "\n  component$", s(a2.span, { className: "token punctuation", children: "," }), "\n  rx", s(a2.span, { className: "token punctuation", children: "," }), "\n  observableRef", s(a2.span, { className: "token punctuation", children: "," }), "\n  subscribeUntilUnmount", s(a2.span, { className: "token punctuation", children: "," }), "\n  t", s(a2.span, { className: "token punctuation", children: "," }), "\n  render\n", s(a2.span, { className: "token punctuation", children: "}" })] }), " ", s(a2.span, { className: "token keyword module", children: "from" }), " ", s(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token keyword module", children: "import" }), " ", c(a2.span, { className: "token imports", children: [s(a2.span, { className: "token punctuation", children: "{" }), " ref ", s(a2.span, { className: "token punctuation", children: "}" })] }), " ", s(a2.span, { className: "token keyword module", children: "from" }), " ", s(a2.span, { className: "token string", children: '"vue"' }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token keyword module", children: "import" }), " ", c(a2.span, { className: "token imports", children: [s(a2.span, { className: "token punctuation", children: "{" }), " debounceTime", s(a2.span, { className: "token punctuation", children: "," }), " subscribeOn ", s(a2.span, { className: "token punctuation", children: "}" })] }), " ", s(a2.span, { className: "token keyword module", children: "from" }), " ", s(a2.span, { className: "token string", children: '"rxjs"' }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n", s(a2.span, { className: "token keyword module", children: "export" }), " ", s(a2.span, { className: "token keyword", children: "const" }), " ", s(a2.span, { className: "token maybe-class-name", children: "TextDebounceInput" }), " ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token function", children: "component$" }), s(a2.span, { className: "token punctuation", children: "(" }), "\n  ", s(a2.span, { className: "token punctuation", children: "{" }), "\n    value", s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "string" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "optional" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token keyword module", children: "default" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token string", children: '"1"' }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "," }), "\n    onValueChange", s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "custom" }), s(a2.span, { className: "token operator", children: "<" }), s(a2.span, { className: "token punctuation", children: "(" }), "v", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token builtin", children: "string" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token keyword", children: "void" }), s(a2.span, { className: "token operator", children: ">" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), "\n  ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "," }), "\n  ", s(a2.span, { className: "token punctuation", children: "(" }), "props", s(a2.span, { className: "token punctuation", children: "," }), " ", s(a2.span, { className: "token punctuation", children: "{" }), " emit ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n    ", s(a2.span, { className: "token keyword", children: "const" }), " value$ ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token function", children: "observableRef" }), s(a2.span, { className: "token punctuation", children: "(" }), "props", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), " ", s(a2.span, { className: "token operator", children: "??" }), " ", s(a2.span, { className: "token string", children: '""' }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n    ", s(a2.span, { className: "token function", children: "rx" }), s(a2.span, { className: "token punctuation", children: "(" }), "\n      value$", s(a2.span, { className: "token punctuation", children: "," }), "\n      ", s(a2.span, { className: "token function", children: "debounceTime" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token number", children: "300" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "," }), "\n      ", s(a2.span, { className: "token function", children: "subscribeUntilUnmount" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "(" }), "v", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token function", children: "emit" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token string", children: '"value-change"' }), s(a2.span, { className: "token punctuation", children: "," }), " v", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ")" }), "\n    ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n    ", s(a2.span, { className: "token keyword control-flow", children: "return" }), " ", s(a2.span, { className: "token function", children: "rx" }), s(a2.span, { className: "token punctuation", children: "(" }), "\n      value$", s(a2.span, { className: "token punctuation", children: "," }), "\n      ", s(a2.span, { className: "token function", children: "render" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "(" }), "v", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "\n        ", c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n          ", s(a2.span, { className: "token attr-name", children: "value" }), c(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), "v", s(a2.span, { className: "token punctuation", children: "}" })] }), "\n          ", s(a2.span, { className: "token attr-name", children: "onInput" }), c(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "(" }), "e", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n            value$", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), " ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "e", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "target" }), " ", s(a2.span, { className: "token keyword module", children: "as" }), " ", s(a2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n          ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", s(a2.span, { className: "token punctuation", children: "/>" })] }), "\n      ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ")" }), "\n    ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n  ", s(a2.span, { className: "token punctuation", children: "}" }), "\n", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n", s(a2.span, { className: "token keyword module", children: "export" }), " ", s(a2.span, { className: "token keyword module", children: "default" }), " ", s(a2.span, { className: "token function", children: "component" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n  ", s(a2.span, { className: "token keyword", children: "const" }), " inputValue ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token function", children: "ref" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token string", children: '"default"' }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", s(a2.span, { className: "token keyword control-flow", children: "return" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "\n    ", c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n      " }), c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", s(a2.span, { className: "token attr-name", children: "style" }), c(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "{" }), " display", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"flex"' }), s(a2.span, { className: "token punctuation", children: "," }), " gap", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"1rem"' }), " ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "}" })] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n        " }), c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), s(a2.span, { className: "token class-name", children: "TextDebounceInput" })] }), "\n          ", s(a2.span, { className: "token attr-name", children: "value" }), c(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), "inputValue", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n          ", s(a2.span, { className: "token attr-name", children: "onValueChange" }), c(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "(" }), "value", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n            inputValue", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), " ", s(a2.span, { className: "token operator", children: "=" }), " value", s(a2.span, { className: "token punctuation", children: ";" }), "\n          ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", s(a2.span, { className: "token punctuation", children: "/>" })] }), s(a2.span, { className: "token plain-text", children: "\n        " }), c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "Inputted: " }), s(a2.span, { className: "token punctuation", children: "{" }), "inputValue", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token punctuation", children: "}" }), c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n      " }), c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n    " }), c(a2.span, { className: "token tag", children: [c(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function f() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: a2 } = n2.components || {};
  return a2 ? s(a2, Object.assign({}, n2, { children: s(y, n2) })) : y(n2);
}
let b = r(() => () => u(f, { components: { codeblockd4735e3a: v } })), w = Object.assign(b, { displayName: "RxInVueDefault" });
export {
  w as default
};
