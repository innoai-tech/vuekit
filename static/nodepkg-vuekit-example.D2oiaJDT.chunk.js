import { j as n, a } from "./lib--nodepkg-vue-jsx-runtime.BKjV4fr1.chunk.js";
import { l as e, c as s, r as t, m as c, g as l, s as o, n as p, p as i, q as r, h as u, F as d } from "./lib--nodepkg-vuekit.DLZfr_ED.chunk.js";
import { s as m, c as h, f as k } from "./lib--nodepkg-typedef.DdnEDJY6.chunk.js";
let N = e({ value: m().optional().default("1"), onValueChange: h() }, (a2, e2) => {
  var s2;
  let { emit: t2 } = e2, r2 = c(null !== (s2 = a2.value) && void 0 !== s2 ? s2 : "");
  return l(r2, p(300), o((n2) => t2("value-change", n2))), l(r2, i((a3) => n("input", { value: a3, onInput: (n2) => {
    r2.value = n2.target.value;
  } })));
}), g = s(() => {
  let e2 = t("default");
  return () => n("div", { children: a("div", { style: { display: "flex", gap: "1rem" }, children: [n(v, { value: e2.value, onValueChange: (n2) => {
    e2.value = n2;
  } }), a("div", { children: ["Inputted: ", e2.value] })] }) });
}), v = Object.assign(N, { displayName: "TextDebounceInput" }), y = Object.assign(g, { displayName: "RxInVueMdCodeBlockd4735E3ADefault" });
function f(e2) {
  let s2 = { a: "a", code: "code", codeblockd4735e3a: "codeblockd4735e3a", div: "div", p: "p", pre: "pre", span: "span", ...e2.components };
  return a(d, { children: [a(s2.p, { children: ["和 ", n(s2.a, { href: "https://rxjs.dev/", children: "rxjs" }), " 集成"] }), "\n", a(s2.div, { "data-example": "", children: [n(s2.div, { "data-example-container": "", children: n(s2.codeblockd4735e3a, {}) }), n(s2.pre, { className: "language-tsx", children: a(s2.code, { className: "language-tsx", children: [n(s2.span, { className: "token keyword module", children: "import" }), " ", a(s2.span, { className: "token imports", children: [n(s2.span, { className: "token punctuation", children: "{" }), "\n  component", n(s2.span, { className: "token punctuation", children: "," }), "\n  component$", n(s2.span, { className: "token punctuation", children: "," }), "\n  rx", n(s2.span, { className: "token punctuation", children: "," }), "\n  observableRef", n(s2.span, { className: "token punctuation", children: "," }), "\n  subscribeUntilUnmount", n(s2.span, { className: "token punctuation", children: "," }), "\n  t", n(s2.span, { className: "token punctuation", children: "," }), "\n  render", n(s2.span, { className: "token punctuation", children: "," }), "\n", n(s2.span, { className: "token punctuation", children: "}" })] }), " ", n(s2.span, { className: "token keyword module", children: "from" }), " ", n(s2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token keyword module", children: "import" }), " ", a(s2.span, { className: "token imports", children: [n(s2.span, { className: "token punctuation", children: "{" }), " ref ", n(s2.span, { className: "token punctuation", children: "}" })] }), " ", n(s2.span, { className: "token keyword module", children: "from" }), " ", n(s2.span, { className: "token string", children: '"vue"' }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token keyword module", children: "import" }), " ", a(s2.span, { className: "token imports", children: [n(s2.span, { className: "token punctuation", children: "{" }), " debounceTime", n(s2.span, { className: "token punctuation", children: "," }), " subscribeOn ", n(s2.span, { className: "token punctuation", children: "}" })] }), " ", n(s2.span, { className: "token keyword module", children: "from" }), " ", n(s2.span, { className: "token string", children: '"rxjs"' }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n", n(s2.span, { className: "token keyword module", children: "export" }), " ", n(s2.span, { className: "token keyword", children: "const" }), " ", n(s2.span, { className: "token maybe-class-name", children: "TextDebounceInput" }), " ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token function", children: "component$" }), n(s2.span, { className: "token punctuation", children: "(" }), "\n  ", n(s2.span, { className: "token punctuation", children: "{" }), "\n    value", n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "string" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "optional" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token keyword module", children: "default" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token string", children: '"1"' }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n    onValueChange", n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "custom" }), n(s2.span, { className: "token operator", children: "<" }), n(s2.span, { className: "token punctuation", children: "(" }), "v", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token builtin", children: "string" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token keyword", children: "void" }), n(s2.span, { className: "token operator", children: ">" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n  ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n  ", n(s2.span, { className: "token punctuation", children: "(" }), "props", n(s2.span, { className: "token punctuation", children: "," }), " ", n(s2.span, { className: "token punctuation", children: "{" }), " emit ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n    ", n(s2.span, { className: "token keyword", children: "const" }), " value$ ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token function", children: "observableRef" }), n(s2.span, { className: "token punctuation", children: "(" }), "props", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), " ", n(s2.span, { className: "token operator", children: "??" }), " ", n(s2.span, { className: "token string", children: '""' }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n    ", n(s2.span, { className: "token function", children: "rx" }), n(s2.span, { className: "token punctuation", children: "(" }), "\n      value$", n(s2.span, { className: "token punctuation", children: "," }), "\n      ", n(s2.span, { className: "token function", children: "debounceTime" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token number", children: "300" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n      ", n(s2.span, { className: "token function", children: "subscribeUntilUnmount" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "(" }), "v", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token function", children: "emit" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token string", children: '"value-change"' }), n(s2.span, { className: "token punctuation", children: "," }), " v", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n    ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n    ", n(s2.span, { className: "token keyword control-flow", children: "return" }), " ", n(s2.span, { className: "token function", children: "rx" }), n(s2.span, { className: "token punctuation", children: "(" }), "\n      value$", n(s2.span, { className: "token punctuation", children: "," }), "\n      ", n(s2.span, { className: "token function", children: "render" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "(" }), "v", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "\n        ", a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n          ", n(s2.span, { className: "token attr-name", children: "value" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), "v", n(s2.span, { className: "token punctuation", children: "}" })] }), "\n          ", n(s2.span, { className: "token attr-name", children: "onInput" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "(" }), "e", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n            value$", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), " ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "e", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "target" }), " ", n(s2.span, { className: "token keyword module", children: "as" }), " ", n(s2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n          ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(s2.span, { className: "token punctuation", children: "/>" })] }), "\n      ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n    ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n  ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n", n(s2.span, { className: "token keyword module", children: "export" }), " ", n(s2.span, { className: "token keyword module", children: "default" }), " ", n(s2.span, { className: "token function", children: "component" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n  ", n(s2.span, { className: "token keyword", children: "const" }), " inputValue ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token function", children: "ref" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token string", children: '"default"' }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n  ", n(s2.span, { className: "token keyword control-flow", children: "return" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "\n    ", a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n      " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", n(s2.span, { className: "token attr-name", children: "style" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "{" }), " display", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"flex"' }), n(s2.span, { className: "token punctuation", children: "," }), " gap", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"1rem"' }), " ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "}" })] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n        " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), n(s2.span, { className: "token class-name", children: "TextDebounceInput" })] }), "\n          ", n(s2.span, { className: "token attr-name", children: "value" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), "inputValue", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n          ", n(s2.span, { className: "token attr-name", children: "onValueChange" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "(" }), "value", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n            inputValue", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), " ", n(s2.span, { className: "token operator", children: "=" }), " value", n(s2.span, { className: "token punctuation", children: ";" }), "\n          ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(s2.span, { className: "token punctuation", children: "/>" })] }), n(s2.span, { className: "token plain-text", children: "\n        " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "Inputted: " }), n(s2.span, { className: "token punctuation", children: "{" }), "inputValue", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n      " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n    " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), "\n  ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function w() {
  let a2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = a2.components || {};
  return e2 ? n(e2, { ...a2, children: n(f, { ...a2 }) }) : f(a2);
}
let b = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(r(() => () => u(w, { components: { codeblockd4735e3a: y } })), { displayName: "RxInVueDefault" }) }, Symbol.toStringTag, { value: "Module" })), x = Object.assign(s(() => {
  let e2 = t(1);
  return () => a("div", { style: { display: "flex", gap: "1rem" }, children: [a("div", { children: ["Counts: ", e2.value] }), n("button", { onClick: () => e2.value++, children: "Click To Count" })] });
}), { displayName: "IndexMdCodeBlock4B227777Default" }), j = s({ value: m().optional().default("1"), type: k(["text", "number"]), onValueChange: h() }, (a2, e2) => {
  let { emit: s2 } = e2;
  return () => n("input", { value: a2.value, onInput: (n2) => {
    s2("value-change", n2.target.value);
  } });
}), V = s({ $title: h().optional(), $item: h().optional(), $default: h().optional() }, (e2, s2) => {
  let {} = e2, { slots: t2 } = s2;
  return () => {
    var e3, s3;
    return a("dl", { children: [n("dt", { children: "default" }), n("dd", { children: null === (e3 = t2.default) || void 0 === e3 ? void 0 : e3.call(t2) }), n("dt", { children: "title" }), n("dd", { children: null === (s3 = t2.title) || void 0 === s3 ? void 0 : s3.call(t2) }), n("dt", { children: "item" }), n("dd", { children: [{ label: "1", value: "1" }, { label: "2", value: "2" }].map((n2) => {
      var a2;
      return null === (a2 = t2.item) || void 0 === a2 ? void 0 : a2.call(t2, n2);
    }) })] });
  };
}), C = s(() => {
  let e2 = t("");
  return () => n($, { $title: a("div", { children: ["Inputted: ", e2.value] }), $item: (a2) => n("div", { children: a2.label }), children: n(I, { type: "text", onValueChange: (n2) => {
    e2.value = n2;
  } }) });
}), I = Object.assign(j, { displayName: "TextInput" }), $ = Object.assign(V, { displayName: "List" }), O = Object.assign(C, { displayName: "IndexMdCodeBlock4A44Dc15Default" });
function T(e2) {
  let s2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock4b227777: "codeblock4b227777", div: "div", li: "li", p: "p", pre: "pre", span: "span", ul: "ul", ...e2.components };
  return a(d, { children: [n(s2.p, { children: "为了更好的 TypeScript 和 JSX 的支持，重新抽象了定义组件的方式" }), "\n", n(s2.p, { children: "一般组件：" }), "\n", a(s2.div, { "data-example": "", children: [n(s2.div, { "data-example-container": "", children: n(s2.codeblock4b227777, {}) }), n(s2.pre, { className: "language-tsx", children: a(s2.code, { className: "language-tsx", children: [n(s2.span, { className: "token keyword module", children: "import" }), " ", a(s2.span, { className: "token imports", children: [n(s2.span, { className: "token punctuation", children: "{" }), " component ", n(s2.span, { className: "token punctuation", children: "}" })] }), " ", n(s2.span, { className: "token keyword module", children: "from" }), " ", n(s2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token keyword module", children: "import" }), " ", a(s2.span, { className: "token imports", children: [n(s2.span, { className: "token punctuation", children: "{" }), " ref ", n(s2.span, { className: "token punctuation", children: "}" })] }), " ", n(s2.span, { className: "token keyword module", children: "from" }), " ", n(s2.span, { className: "token string", children: '"vue"' }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n", n(s2.span, { className: "token keyword module", children: "export" }), " ", n(s2.span, { className: "token keyword module", children: "default" }), " ", n(s2.span, { className: "token function", children: "component" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n  ", n(s2.span, { className: "token keyword", children: "const" }), " count ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token function", children: "ref" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token number", children: "1" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n  ", n(s2.span, { className: "token keyword control-flow", children: "return" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "\n    ", a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", n(s2.span, { className: "token attr-name", children: "style" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "{" }), " display", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"flex"' }), n(s2.span, { className: "token punctuation", children: "," }), " gap", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"1rem"' }), " ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "}" })] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n      " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "Counts: " }), n(s2.span, { className: "token punctuation", children: "{" }), "count", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n      " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "button"] }), " ", n(s2.span, { className: "token attr-name", children: "onClick" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " count", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token operator", children: "++" }), n(s2.span, { className: "token punctuation", children: "}" })] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "Click To Count" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "button"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n    " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), "\n  ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", n(s2.p, { children: "可复用组件：" }), "\n", a(s2.ul, { children: ["\n", a(s2.li, { children: [n(s2.code, { children: "props" }), " 和 ", n(s2.code, { children: "emits" }), " 合并声明"] }), "\n"] }), "\n", a(s2.div, { "data-example": "", children: [n(s2.div, { "data-example-container": "", children: n(s2.codeblock4a44dc15, {}) }), n(s2.pre, { className: "language-tsx", children: a(s2.code, { className: "language-tsx", children: [n(s2.span, { className: "token keyword module", children: "import" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), " component", n(s2.span, { className: "token punctuation", children: "," }), " t", n(s2.span, { className: "token punctuation", children: "," }), " ", n(s2.span, { className: "token keyword", children: "type" }), " ", n(s2.span, { className: "token class-name", children: n(s2.span, { className: "token maybe-class-name", children: "VNode" }) }), n(s2.span, { className: "token punctuation", children: "," }), " ", n(s2.span, { className: "token keyword", children: "type" }), " ", n(s2.span, { className: "token class-name", children: n(s2.span, { className: "token maybe-class-name", children: "VNodeChild" }) }), " ", n(s2.span, { className: "token punctuation", children: "}" }), " ", n(s2.span, { className: "token keyword module", children: "from" }), " ", n(s2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token keyword module", children: "import" }), " ", a(s2.span, { className: "token imports", children: [n(s2.span, { className: "token punctuation", children: "{" }), " ref ", n(s2.span, { className: "token punctuation", children: "}" })] }), " ", n(s2.span, { className: "token keyword module", children: "from" }), " ", n(s2.span, { className: "token string", children: '"vue"' }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n", n(s2.span, { className: "token keyword module", children: "export" }), " ", n(s2.span, { className: "token keyword", children: "const" }), " ", n(s2.span, { className: "token maybe-class-name", children: "TextInput" }), " ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token function", children: "component" }), n(s2.span, { className: "token punctuation", children: "(" }), "\n  ", n(s2.span, { className: "token punctuation", children: "{" }), "\n    ", n(s2.span, { className: "token comment", children: "// VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）" }), "\n    ", n(s2.span, { className: "token comment", children: "// 必须声明，哪怕只是属性名称" }), "\n    ", n(s2.span, { className: "token comment", children: "//" }), "\n    ", n(s2.span, { className: "token comment", children: "// 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem" }), "\n    ", n(s2.span, { className: "token comment", children: "// 类型定义无法转为 Runtime 对象" }), "\n    ", n(s2.span, { className: "token comment", children: "// 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证" }), "\n    ", n(s2.span, { className: "token comment", children: "// 注意 default 需要在 最后，为了 内部推导" }), "\n    value", n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "string" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "optional" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token keyword module", children: "default" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token string", children: '"1"' }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n    type", n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "enums" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "[" }), n(s2.span, { className: "token string", children: '"text"' }), n(s2.span, { className: "token punctuation", children: "," }), " ", n(s2.span, { className: "token string", children: '"number"' }), n(s2.span, { className: "token punctuation", children: "]" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n\n    ", n(s2.span, { className: "token comment", children: "// on[A-Z] 前缀视为 emits" }), "\n    onValueChange", n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "custom" }), n(s2.span, { className: "token operator", children: "<" }), n(s2.span, { className: "token punctuation", children: "(" }), "v", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token builtin", children: "string" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token keyword", children: "void" }), n(s2.span, { className: "token operator", children: ">" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n  ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n  ", n(s2.span, { className: "token punctuation", children: "(" }), "props", n(s2.span, { className: "token punctuation", children: "," }), " ", n(s2.span, { className: "token punctuation", children: "{" }), " emit ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n    ", n(s2.span, { className: "token comment", children: "// setup" }), "\n\n    ", n(s2.span, { className: "token keyword control-flow", children: "return" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "\n      ", a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n        ", n(s2.span, { className: "token attr-name", children: "value" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), "props", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(s2.span, { className: "token attr-name", children: "onInput" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "(" }), "e", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n          ", n(s2.span, { className: "token function", children: "emit" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token string", children: '"value-change"' }), n(s2.span, { className: "token punctuation", children: "," }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "e", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "target" }), " ", n(s2.span, { className: "token keyword module", children: "as" }), " ", n(s2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n        ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(s2.span, { className: "token punctuation", children: "/>" })] }), "\n    ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n  ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n", n(s2.span, { className: "token keyword module", children: "export" }), " ", n(s2.span, { className: "token keyword", children: "interface" }), " ", n(s2.span, { className: "token class-name", children: n(s2.span, { className: "token maybe-class-name", children: "Option" }) }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n  label", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token builtin", children: "string" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n  value", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token builtin", children: "string" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token punctuation", children: "}" }), "\n\n", n(s2.span, { className: "token keyword module", children: "export" }), " ", n(s2.span, { className: "token keyword", children: "const" }), " ", n(s2.span, { className: "token maybe-class-name", children: "List" }), " ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token function", children: "component" }), n(s2.span, { className: "token punctuation", children: "(" }), "\n  ", n(s2.span, { className: "token punctuation", children: "{" }), "\n    ", n(s2.span, { className: "token comment", children: "// $ 前缀视为 slots" }), "\n    $title", n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "custom" }), n(s2.span, { className: "token operator", children: "<" }), n(s2.span, { className: "token maybe-class-name", children: "VNodeChild" }), n(s2.span, { className: "token operator", children: ">" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "optional" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n    ", n(s2.span, { className: "token comment", children: "// renderProp" }), "\n    $item", n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "custom" }), n(s2.span, { className: "token operator", children: "<" }), n(s2.span, { className: "token punctuation", children: "(" }), "option", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token maybe-class-name", children: "Option" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token maybe-class-name", children: "VNode" }), n(s2.span, { className: "token operator", children: ">" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "optional" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n\n    $", n(s2.span, { className: "token keyword module", children: "default" }), n(s2.span, { className: "token operator", children: ":" }), " t", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "custom" }), n(s2.span, { className: "token operator", children: "<" }), n(s2.span, { className: "token maybe-class-name", children: "VNodeChild" }), n(s2.span, { className: "token operator", children: ">" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "optional" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "," }), "\n\n    ", n(s2.span, { className: "token comment", children: "// 以此避免多插槽时 children slots object 的写法, 且无类型约束，" }), "\n    ", n(s2.span, { className: "token comment", children: "// {{ default: () => VNode, title: () => VNode, item: (option: Option) => VNode }}" }), "\n  ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n  ", n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), " ", n(s2.span, { className: "token punctuation", children: "{" }), " slots ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), "\n    ", n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n      ", n(s2.span, { className: "token keyword", children: "const" }), " options ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token punctuation", children: "[" }), "\n        ", n(s2.span, { className: "token punctuation", children: "{" }), "\n          label", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"1"' }), n(s2.span, { className: "token punctuation", children: "," }), "\n          value", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"1"' }), n(s2.span, { className: "token punctuation", children: "," }), "\n        ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n        ", n(s2.span, { className: "token punctuation", children: "{" }), "\n          label", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"2"' }), n(s2.span, { className: "token punctuation", children: "," }), "\n          value", n(s2.span, { className: "token operator", children: ":" }), " ", n(s2.span, { className: "token string", children: '"2"' }), n(s2.span, { className: "token punctuation", children: "," }), "\n        ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n      ", n(s2.span, { className: "token punctuation", children: "]" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n      ", n(s2.span, { className: "token keyword control-flow", children: "return" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "\n        ", a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "dl"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n          " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "dt"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "default" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "dt"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n          " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "dd"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token punctuation", children: "{" }), "slots", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token keyword module", children: "default" }), n(s2.span, { className: "token operator", children: "?." }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "dd"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n          " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "dt"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "title" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "dt"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n          " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "dd"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token punctuation", children: "{" }), "slots", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "title" }), n(s2.span, { className: "token operator", children: "?." }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "dd"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n          " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "dt"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "item" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "dt"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n          " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "dd"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token punctuation", children: "{" }), "options", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token method function property-access", children: "map" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "(" }), "option", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " slots", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "item" }), n(s2.span, { className: "token operator", children: "?." }), n(s2.span, { className: "token punctuation", children: "(" }), "option", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "dd"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n        " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "dl"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), "\n      ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n    ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "," }), "\n", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n", n(s2.span, { className: "token keyword module", children: "export" }), " ", n(s2.span, { className: "token keyword module", children: "default" }), " ", n(s2.span, { className: "token function", children: "component" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n  ", n(s2.span, { className: "token keyword", children: "const" }), " inputValue ", n(s2.span, { className: "token operator", children: "=" }), " ", n(s2.span, { className: "token function", children: "ref" }), n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token string", children: '""' }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n\n  ", n(s2.span, { className: "token keyword control-flow", children: "return" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "(" }), "\n    ", a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), n(s2.span, { className: "token class-name", children: "List" })] }), "\n      ", n(s2.span, { className: "token attr-name", children: "$title" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "Inputted: " }), n(s2.span, { className: "token punctuation", children: "{" }), "inputValue", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), n(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(s2.span, { className: "token attr-name", children: "$item" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "(" }), "o", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token punctuation", children: "{" }), "o", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "label" }), n(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), "div"] }), n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n    ", n(s2.span, { className: "token punctuation", children: ">" })] }), n(s2.span, { className: "token plain-text", children: "\n      " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "<" }), n(s2.span, { className: "token class-name", children: "TextInput" })] }), "\n        ", n(s2.span, { className: "token attr-name", children: "type" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token string", children: '"text"' }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(s2.span, { className: "token attr-name", children: "onValueChange" }), a(s2.span, { className: "token script language-javascript", children: [n(s2.span, { className: "token script-punctuation punctuation", children: "=" }), n(s2.span, { className: "token punctuation", children: "{" }), n(s2.span, { className: "token punctuation", children: "(" }), "value", n(s2.span, { className: "token punctuation", children: ")" }), " ", n(s2.span, { className: "token arrow operator", children: "=>" }), " ", n(s2.span, { className: "token punctuation", children: "{" }), "\n          inputValue", n(s2.span, { className: "token punctuation", children: "." }), n(s2.span, { className: "token property-access", children: "value" }), " ", n(s2.span, { className: "token operator", children: "=" }), " value", n(s2.span, { className: "token punctuation", children: ";" }), "\n        ", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(s2.span, { className: "token punctuation", children: "/>" })] }), n(s2.span, { className: "token plain-text", children: "\n    " }), a(s2.span, { className: "token tag", children: [a(s2.span, { className: "token tag", children: [n(s2.span, { className: "token punctuation", children: "</" }), n(s2.span, { className: "token class-name", children: "List" })] }), n(s2.span, { className: "token punctuation", children: ">" })] }), "\n  ", n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n", n(s2.span, { className: "token punctuation", children: "}" }), n(s2.span, { className: "token punctuation", children: ")" }), n(s2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function D() {
  let a2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = a2.components || {};
  return e2 ? n(e2, { ...a2, children: n(T, { ...a2 }) }) : T(a2);
}
let _ = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(r(() => () => u(D, { components: { codeblock4b227777: x, codeblock4a44dc15: O } })), { displayName: "IndexDefault" }) }, Symbol.toStringTag, { value: "Module" }));
export {
  _ as i,
  b as r
};
