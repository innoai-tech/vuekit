import { c as n, n as e, j as a, r as s, b as t, w as c, R as l, p as o, _ as i, q as r, v as p, x as d, F as u, y as m, z as h, A as k, B as N, e as g, C as y, D as f, k as v, s as x, E as b } from "./lib-nodepkg-vuekit.D2tnZfRF.chunk.js";
import { c as w, b as _, s as S, e as C } from "./lib-nodepkg-typedef.Czd731t_.chunk.js";
import { I as j, a as O, T as I, b as E, D as T, c as D, M as P, L as $, d as R, F as V, E as z, e as B, O as M } from "./lib-nodepkg-vuematerial.BK9v3CYH.chunk.js";
import { m as A, a as L, C as F, D as U, b as H, c as W, d as q, e as J, f as X } from "./webapp-vuekit-layout.7yfmFGp9.chunk.js";
import { B as G, C as Y, b as Z, G as K, T as Q, c as nn, e as ne, f as na, g as ns, P as nt, d as nc, t as nl, s as no, v as ni, a as nr } from "./lib-nodepkg-vueuikit.Kl_nbZMv.chunk.js";
import { v as np, w as nd, p as nu, l as nm, x as nh } from "./vendor-innoai-tech-lodash.BQbaWOEd.chunk.js";
import { I as nk, _ as nN } from "./webapp-vuekit-page.DMSHYb69.chunk.js";
import { d as ng } from "./vendor-rxjs.NbiRBTYy.chunk.js";
let ny = n(() => {
  let n10 = np(e().options.routes.filter((n11) => "/" !== n11.path), (n11) => n11.path.split("/")[1]);
  return () => a(G, { sx: { py: 16, px: 0, textTransform: "capitalize" }, children: nd(n10, (n11, e2) => {
    var s2;
    let [c2, l2] = nu(n11, (n12) => n12.path === `/${e2}`);
    return t(G, { sx: { px: 8 }, children: [c2[0] ? a(E, { component: o, sx: { width: "100%", justifyContent: "flex-start" }, activeClass: "active", to: null === (s2 = c2[0]) || void 0 === s2 ? void 0 : s2.path, children: e2 }) : a(E, { sx: { width: "100%", justifyContent: "flex-start" }, children: e2 }), a(G, { sx: { pl: 16 }, children: nd(l2, (n12) => {
      var e3;
      return a(E, { component: o, activeClass: "active", to: n12.path, sx: { width: "100%", justifyContent: "flex-start" }, children: null === (e3 = nm(n12.path.split("/"))) || void 0 === e3 ? void 0 : e3.replaceAll("-", " ") }, n12.name);
    }) })] }, e2);
  }) });
}, { displayName: "Nav" }), nf = n({ $default: w().optional() }, (n10, e2) => {
  let { slots: c2 } = e2, l2 = s("light");
  return () => {
    var n11;
    return t(G, { "data-theme": l2.value, sx: { display: "flex", height: "100vh", width: "100vw", containerStyle: "sys.surface" }, children: [t(G, { sx: { display: "flex", flexDirection: "column", width: "280px", height: "100vh", borderRightRadius: "lg", overflowY: "auto", containerStyle: "sys.surface-container-low", elevation: "0", _hover: { elevation: "2" } }, children: [a(G, { sx: { flex: 1 }, children: a(ny, {}) }), t(G, { sx: { p: 16, display: "flex", justifyContent: "flex-end" }, children: [a(j, { component: "a", target: "_blank", sx: { color: "sys.on-surface-variant" }, href: "//github.com/innoai-tech/vuekit", children: a(O, { path: H }) }), a(I, { title: `切换到${"light" === l2.value ? "深色模式" : "浅色模式"}`, children: a(G, { component: j, "data-test": true, sx: { color: "sys.on-surface-variant" }, onClick: () => {
      l2.value = "light" === l2.value ? "dark" : "light";
    }, children: a(O, { path: "light" === l2.value ? A : L }) }) })] })] }), a(G, { sx: { flex: 1, overflow: "auto" }, children: a(F, { children: null === (n11 = c2.default) || void 0 === n11 ? void 0 : n11.call(c2) }) })] });
  };
}, { displayName: "Scaffold" }), nv = n(() => {
  let n10 = U.use(), e2 = Y.use();
  return c([() => n10.value.seed, () => n10.value.rules], (e3) => {
    let [a2, s2] = e3;
    n10.next((n11) => {
      n11.theming = nn.create({ ...ne, ...na.fromColors(a2).toDesignTokens(s2) }, { varPrefix: "vk" });
    });
  }), () => {
    let s2 = n10.value.theming, c2 = s2.unstable_css(e2, { ":root": s2.rootCSSVars });
    return a(U, { value: n10, children: t(Q, { value: s2, children: [a(Z, {}), a(K, { styles: '/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n' }), a(nf, { children: a(l, {}) })] }, c2.name) });
  };
}, { displayName: "App" }), nx = [{ name: "vuematerial-overlays", path: "/vuematerial/overlays", component: () => i(() => Promise.resolve().then(() => nw), true ? void 0 : void 0), props: true }, { name: "vuematerial-textfields", path: "/vuematerial/textfields", component: () => i(() => Promise.resolve().then(() => n_), true ? void 0 : void 0), props: true }, { name: "vuematerial-icons", path: "/vuematerial/icons", component: () => i(() => Promise.resolve().then(() => nI), true ? void 0 : void 0), props: true }, { name: "vuematerial-buttons", path: "/vuematerial/buttons", component: () => i(() => Promise.resolve().then(() => nE), true ? void 0 : void 0), props: true }, { name: "vuematerial", path: "/vuematerial", component: () => i(() => Promise.resolve().then(() => nP), true ? void 0 : void 0), props: true }, { name: "vueuikit-elevation", path: "/vueuikit/elevation", component: () => i(() => Promise.resolve().then(() => n$), true ? void 0 : void 0), props: true }, { name: "vueuikit-color-palette", path: "/vueuikit/color-palette", component: () => i(() => Promise.resolve().then(() => nA), true ? void 0 : void 0), props: true }, { name: "vueuikit-color-scheme", path: "/vueuikit/color-scheme", component: () => i(() => Promise.resolve().then(() => nF), true ? void 0 : void 0), props: true }, { name: "vueuikit-typography", path: "/vueuikit/typography", component: () => i(() => Promise.resolve().then(() => nU), true ? void 0 : void 0), props: true }, { name: "vueuikit-figma-tokens", path: "/vueuikit/figma-tokens", component: () => i(() => Promise.resolve().then(() => nH), true ? void 0 : void 0), props: true }, { name: "vueuikit-popper", path: "/vueuikit/popper", component: () => i(() => Promise.resolve().then(() => nZ), true ? void 0 : void 0), props: true }, { name: "vueuikit", path: "/vueuikit", component: () => i(() => Promise.resolve().then(() => n2), true ? void 0 : void 0), props: true }, { name: "vuekit-rx-in-vue", path: "/vuekit/rx-in-vue", component: () => i(() => Promise.resolve().then(() => n8), true ? void 0 : void 0), props: true }, { name: "vuekit", path: "/vuekit", component: () => i(() => Promise.resolve().then(() => ec), true ? void 0 : void 0), props: true }, { name: "index", path: "/", component: Object.assign(nk, nN), props: true }];
console.log(nx);
let nb = r({ history: p(new URL(null !== (nV = null === (nR = document.querySelector("base")) || void 0 === nR ? void 0 : nR.href) && void 0 !== nV ? nV : "/").pathname), routes: nx });
d(nv).use(nb).mount("#root");
let nw = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => {
  let n10 = s(false), e2 = s(false), c2 = s(false);
  return () => a(F, { children: t(G, { sx: { display: "flex", flexDirection: "column", gap: 8 }, children: [a(E, { onClick: () => {
    e2.value = true;
  }, children: "Open Dialog" }), a(T, { isOpen: e2.value, onClose: () => {
    e2.value = false;
  }, children: t(D, { sx: { minH: "40vh" }, children: [t(G, { sx: { display: "flex", alignItems: "center", px: 16, textStyle: "sys.title-large" }, children: [a(G, { sx: { flex: 1 }, children: "我是对话框" }), a(j, { onClick: () => {
    e2.value = false;
  }, children: a(O, { path: W }) })] }), a(E, { onClick: () => {
    c2.value = true;
  }, children: "Open Dialog In Dialog" }), a(T, { isOpen: c2.value, onClose: () => {
    c2.value = false;
  }, children: a(D, { sx: { minH: "40vh" }, children: t(G, { sx: { display: "flex", alignItems: "center", px: 16, textStyle: "sys.title-large" }, children: [a(G, { sx: { flex: 1 }, children: "我是对话框 2" }), a(j, { onClick: () => {
    c2.value = false;
  }, children: a(O, { path: W }) })] }) }) })] }) }), a(I, { title: "Tooltip", children: a(E, { children: "Hover me" }) }), a(I, { title: "Menu", children: a(P, { $menu: t(u, { children: [a($, { children: "选项一" }), a($, { onClick: () => {
    n10.value = true;
  }, children: "选项二" }), a(T, { isOpen: n10.value, onClose: () => {
    n10.value = false;
  }, children: a(D, { sx: { minH: "40vh" }, children: "我是对话框" }) }), a(P, { placement: "right-start", $menu: t(u, { children: [a($, { children: "选项三.1" }), a($, { children: "选项三.2" })] }), children: a($, { children: "选项三" }) })] }), children: a(E, { children: "Menu" }) }) })] }) });
}) }, Symbol.toStringTag, { value: "Module" })), n_ = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => {
  let n10 = { Enabled: {}, Focused: { focus: true }, Invalid: { invalid: true }, Disabled: { disabled: true } }, e2 = { TextField: R };
  return () => a(F, { children: a(G, { sx: { display: "flex", flexDirection: "column", gap: 48 }, children: nd(e2, (e3, s2) => a(G, { sx: { display: "flex", flexDirection: "column", gap: 16 }, children: [(n11) => a(e3, { ...n11, children: a("input", { "data-input": "", type: "text", placeholder: "Type" }) }), (n11) => a(e3, { ...n11, valued: true, children: a("input", { "data-input": "", type: "text", value: "Username" }) }), (n11) => a(e3, { ...n11, $leading: a(O, { path: q }), children: a("input", { "data-input": "", type: "text" }) }), (n11) => a(e3, { ...n11, $trailing: a(O, { path: J }), children: a("input", { "data-input": "", type: "text" }) })].map((e4, s3) => a(m, { children: a(G, { sx: { display: "flex", gap: 16 }, children: nd(n10, (n11) => e4({ ...n11, $label: "Name", $supporting: "Desc" })) }) }, `${s3}`)) }, s2)) }) });
}) }, Symbol.toStringTag, { value: "Module" })), nS = n(() => () => a(O, { path: X })), nC = n(() => () => t(G, { sx: { display: "flex", gap: 8 }, children: [a(j, { active: true, onClick: () => console.log(1), children: a(O, { path: X }) }), t(V, { active: false, children: ["Send", a(O, { path: X, placement: "end" })] })] }));
function nj(n10) {
  let e2 = { a: "a", code: "code", codeblockd4735e3a: "codeblockd4735e3a", codeblocke7f6c011: "codeblocke7f6c011", div: "div", h3: "h3", p: "p", pre: "pre", span: "span", ...n10.components };
  return t(u, { children: [t(e2.p, { children: ["直接使用沿用 ", a(e2.a, { href: "https://pictogrammers.com/library/mdi/", children: "mid" })] }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblockd4735e3a, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " mdiSend ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@mdi/js"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Icon" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuematerial"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Icon" })] }), " ", a(e2.span, { className: "token attr-name", children: "path" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "mdiSend", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token punctuation", children: "/>" })] }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(e2.h3, { children: "和 Button 一起使用" }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblocke7f6c011, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " mdiSend ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@mdi/js"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Icon" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuematerial"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "IconButton" }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token maybe-class-name", children: "FilledButton" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuematerial"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " display", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"flex"' }), a(e2.span, { className: "token punctuation", children: "," }), " gap", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "8" }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "IconButton" })] }), " ", a(e2.span, { className: "token attr-name", children: "active" }), " ", a(e2.span, { className: "token attr-name", children: "onClick" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token console class-name", children: "console" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "log" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "1" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n        " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Icon" })] }), " ", a(e2.span, { className: "token attr-name", children: "path" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "mdiSend", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token punctuation", children: "/>" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "IconButton" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "FilledButton" })] }), " ", a(e2.span, { className: "token attr-name", children: "active" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token boolean", children: "false" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n        Send\n        " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Icon" })] }), " ", a(e2.span, { className: "token attr-name", children: "path" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "mdiSend", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token attr-name", children: "placement" }), t(e2.span, { className: "token attr-value", children: [a(e2.span, { className: "token punctuation attr-equals", children: "=" }), a(e2.span, { className: "token punctuation", children: '"' }), "end", a(e2.span, { className: "token punctuation", children: '"' })] }), " ", a(e2.span, { className: "token punctuation", children: "/>" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "FilledButton" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function nO() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? a(e2, { ...n10, children: a(nj, { ...n10 }) }) : nj(n10);
}
let nI = Object.freeze(Object.defineProperty({ __proto__: null, default: h(() => () => k(nO, { components: { codeblockd4735e3a: nS, codeblocke7f6c011: nC } })) }, Symbol.toStringTag, { value: "Module" })), nE = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => {
  let n10 = { Enabled: {}, Disabled: { disabled: true }, Hovered: { hover: true }, Focused: { focus: true }, Pressed: { active: true } }, e2 = { ElevatedButton: z, FilledButton: V, TonalButton: B, OutlinedButton: M, TextButton: E };
  return () => a(F, { children: a(G, { sx: { display: "flex", flexDirection: "column", gap: 48 }, children: nd(e2, (e3, s2) => a(G, { sx: { display: "flex", flexDirection: "column", gap: 16 }, children: [(n11) => n11, (n11) => t(u, { children: [a(O, { path: J, placement: "start" }), n11] }), (n11) => t(u, { children: [n11, a(O, { path: X, placement: "end" })] })].map((s3, t2) => a(m, { children: a(G, { sx: { display: "flex", gap: 16 }, children: nd(n10, (n11, t3) => a(e3, { ...n11, children: s3(t3) })) }) }, `${t2}`)) }, s2)) }) });
}) }, Symbol.toStringTag, { value: "Module" }));
function nT(n10) {
  return a({ p: "p", ...n10.components }.p, { children: "这不是一个完整的组件库，只是一个示例，作为 vueuikit 的参考" });
}
function nD() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? a(e2, { ...n10, children: a(nT, { ...n10 }) }) : nT(n10);
}
let nP = Object.freeze(Object.defineProperty({ __proto__: null, default: h(() => () => k(nD, { components: {} })) }, Symbol.toStringTag, { value: "Module" })), n$ = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => {
  let n10 = Q.use();
  return () => a(u, { children: Object.keys(n10.token.elevation.tokens).map((n11) => a(G, { sx: { mt: 16, p: 16, rounded: "lg", transitionDuration: "md4", transitionTimingFunction: "standard", shadow: n11, _hover: { shadow: `${1 + parseInt(n11)}` } }, children: t("div", { children: ["Elevation ", n11] }) }, n11)) });
}) }, Symbol.toStringTag, { value: "Module" }));
var nR, nV, nz = function() {
  var n10 = document.getSelection();
  if (!n10.rangeCount) return function() {
  };
  for (var e2 = document.activeElement, a2 = [], s2 = 0; s2 < n10.rangeCount; s2++) a2.push(n10.getRangeAt(s2));
  switch (e2.tagName.toUpperCase()) {
    case "INPUT":
    case "TEXTAREA":
      e2.blur();
      break;
    default:
      e2 = null;
  }
  return n10.removeAllRanges(), function() {
    "Caret" === n10.type && n10.removeAllRanges(), n10.rangeCount || a2.forEach(function(e3) {
      n10.addRange(e3);
    }), e2 && e2.focus();
  };
}, nB = { "text/plain": "Text", "text/html": "Url", default: "Text" };
let nM = N(function(n10, e2) {
  var a2, s2, t2, c2, l2, o2, i2, r2, p2 = false;
  e2 || (e2 = {}), t2 = e2.debug || false;
  try {
    if (l2 = nz(), o2 = document.createRange(), i2 = document.getSelection(), (r2 = document.createElement("span")).textContent = n10, r2.ariaHidden = "true", r2.style.all = "unset", r2.style.position = "fixed", r2.style.top = 0, r2.style.clip = "rect(0, 0, 0, 0)", r2.style.whiteSpace = "pre", r2.style.webkitUserSelect = "text", r2.style.MozUserSelect = "text", r2.style.msUserSelect = "text", r2.style.userSelect = "text", r2.addEventListener("copy", function(a3) {
      if (a3.stopPropagation(), e2.format) {
        if (a3.preventDefault(), void 0 === a3.clipboardData) {
          t2 && console.warn("unable to use e.clipboardData"), t2 && console.warn("trying IE specific stuff"), window.clipboardData.clearData();
          var s3 = nB[e2.format] || nB.default;
          window.clipboardData.setData(s3, n10);
        } else a3.clipboardData.clearData(), a3.clipboardData.setData(e2.format, n10);
      }
      e2.onCopy && (a3.preventDefault(), e2.onCopy(a3.clipboardData));
    }), document.body.appendChild(r2), o2.selectNodeContents(r2), i2.addRange(o2), !document.execCommand("copy")) throw Error("copy command was unsuccessful");
    p2 = true;
  } catch (l3) {
    t2 && console.error("unable to copy using execCommand: ", l3), t2 && console.warn("trying IE specific stuff");
    try {
      window.clipboardData.setData(e2.format || "text", n10), e2.onCopy && e2.onCopy(window.clipboardData), p2 = true;
    } catch (l4) {
      t2 && console.error("unable to copy using clipboardData: ", l4), t2 && console.error("falling back to prompt"), a2 = "message" in e2 ? e2.message : "Copy to clipboard: #{key}, Enter", s2 = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C", c2 = a2.replace(/#{\s*key\s*}/g, s2), window.prompt(c2, n10);
    }
  } finally {
    i2 && ("function" == typeof i2.removeRange ? i2.removeRange(o2) : i2.removeAllRanges()), r2 && document.body.removeChild(r2), l2();
  }
  return p2;
}), nA = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => {
  let n10 = U.use(), e2 = g();
  return () => {
    let s2 = na.fromColors(n10.value.seed);
    return t(G, { ref: e2, sx: { display: "flex", flexDirection: "column", gap: 24 }, children: [t(G, { sx: { display: "flex", gap: 56 }, children: [a(G, { sx: { display: "flex", flexDirection: "column" }, children: nd(n10.value.seed, (e3, s3) => t(G, { sx: { flex: 1, display: "flex", alignItems: "center", gap: 16 }, children: [a(G, { sx: { flex: 1 }, children: s3 }), a("input", { type: "color", value: e3, onChange: (e4) => {
      n10.next((n11) => {
        n11.seed[s3] = e4.target.value;
      });
    } })] })) }), a(G, { sx: { display: "flex", flexWrap: "wrap", gap: 16 }, children: nd(n10.value.rules, (e3, c2) => {
      let [l2, o2] = e3;
      return t(G, { sx: { display: "flex", alignItems: "center", width: "30%" }, children: [a(G, { sx: { flex: 1 }, children: c2 }), a(G, { sx: { flex: 1, display: "flex", gap: 4, "& input": { width: "40%", border: "1px solid", borderColor: "sys.outline" } }, children: a("input", { type: "number", value: o2, max: 100, min: 0, style: { backgroundColor: na.toHEX(s2.seeds[l2].tone(o2)), color: o2 > 50 ? "black" : "white" }, "data-color": na.toHEX(s2.seeds[l2].tone(o2)), "data-theme": "dark", onChange: (e4) => {
        try {
          let a2 = parseInt(e4.target.value);
          n10.next((n11) => {
            n11.rules[c2] = [l2, a2, o2];
          });
        } catch (n11) {
        }
      } }) })] });
    }) })] }), a(G, { sx: { display: "flex", gap: 16, "& > *": { flex: 1 } }, children: a("pre", { onClick: () => nM(JSON.stringify(n10.value)), children: a("code", { children: JSON.stringify(n10.value, null, 2) }) }) })] });
  };
}) }, Symbol.toStringTag, { value: "Module" })), nL = { 0: true, 10: true, 20: true, 30: true, 40: true, 50: true, 60: true, 70: true, 80: true, 90: true, 95: true, 100: true }, nF = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => () => a(u, { children: ["light", "dark"].map((n10) => t("div", { "data-theme": n10, children: [t(G, { component: "h1", sx: { textStyle: "sys.headline-medium", pb: 8, mt: 16 }, children: [nh(n10), " Scheme"] }), t(G, { sx: { display: "flex", flexDirection: "column", gap: 16 }, children: [a(G, { sx: { display: "flex", flexWrap: "wrap", gap: 16 }, children: ["primary", "secondary", "tertiary", "error", "warning", "success"].map((n11) => t(G, { sx: { flex: 1, minW: 1 / 4, display: "flex", alignItems: "stretch" }, children: [a(G, { sx: { flex: 1, display: "flex", flexDirection: "column" }, children: ["", "-container"].map((e2) => t(m, { children: [a(G, { sx: { bgColor: `sys.${n11}${e2}`, color: `sys.on-${n11}${e2}`, p: 8, flex: 3 }, children: `${n11}${e2}` }), a(G, { sx: { color: `sys.${n11}${e2}`, bgColor: `sys.on-${n11}${e2}`, p: 8, flex: 1 }, children: `on-${n11}${e2}` })] }, e2)) }), a(G, { sx: { display: "flex", flexDirection: "column" }, children: nd(nL, (e2, a2) => t(G, { sx: { color: `${n11}.${parseInt(a2) > 50 ? 0 : 100}`, bgColor: `${n11}.${a2}`, w: 60, p: 8, textAlign: "right" }, children: [".", a2] })) })] }, n11)) }), t("div", { children: [a(G, { sx: { display: "flex", "& > *": { width: 1 / 3 } }, children: ["-dim", "", "-bright"].map((n11) => a(G, { sx: { color: "sys.on-surface", bgColor: `sys.surface${n11}`, height: 80, p: 8 }, children: `surface${n11}` })) }), a(G, { sx: { display: "flex", "& > *": { width: 1 / 4 } }, children: ["-lowest", "-low", "", "-high", "-highest"].map((n11) => a(G, { sx: { color: "sys.on-surface", bgColor: `sys.surface-container${n11}`, height: 80, p: 8 }, children: `surface-container${n11}` })) }), a(G, { sx: { display: "flex", "& > *": { width: 1 / 4 } }, children: ["on-surface", "on-surface-variant", "outline", "outline-variant"].map((n11) => a(G, { sx: { color: n11.includes("outline-variant") ? "sys.inverse-surface" : "sys.inverse-on-surface", bgColor: `sys.${n11}`, height: 80, p: 8 }, children: n11 })) }), a(G, { sx: { display: "flex" }, children: nd(nL, (n11, e2) => t(G, { sx: { color: `neutral.${parseInt(e2) > 50 ? 0 : 100}`, bgColor: `neutral.${e2}`, flex: 1, p: 8, textAlign: "right" }, children: [".", e2] })) })] })] })] }, n10)) })) }, Symbol.toStringTag, { value: "Module" })), nU = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => {
  let n10 = Q.use();
  return () => a(u, { children: a(G, { sx: { height: "40vh", display: "flex", flexDirection: "column", flexWrap: "wrap", justifyContent: "space-between", gap: 8 }, children: n10.token.textStyle.tokens.map((n11) => t(G, { sx: { flex: 1, rounded: "md", textStyle: n11, p: 16, border: "2px solid", borderColor: "sys.outline-variant", bgColor: "sys.surface-container", color: "sys.primary", minW: "10vw", whiteSpace: "nowrap", display: "flex", flexDirection: "column", justifyContent: "space-between" }, children: [a(G, { sx: { textStyle: "sys.label-small" }, children: n11 }), a(G, { sx: { flex: 1 } }), a(G, { sx: { py: 16 }, children: "中文测试" })] }, n11)) }) });
}) }, Symbol.toStringTag, { value: "Module" })), nH = Object.freeze(Object.defineProperty({ __proto__: null, default: n(() => {
  let n10 = Q.use();
  return () => t(G, { sx: { display: "flex", gap: 16, flexDirection: "column" }, children: [a("div", { children: "点击下载，通过 Figma Tokens 全量导入文件" }), a("pre", { onClick: () => {
    !function(n11, e2) {
      let a2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "application/json", s2 = document.createElement("a"), t2 = new Blob([n11], { type: a2 }), c2 = URL.createObjectURL(t2);
      s2.href = c2, s2.download = e2, document.body.appendChild(s2), s2.click(), setTimeout(() => {
        document.body.removeChild(s2), window.URL.revokeObjectURL(c2);
      }, 0);
    }(JSON.stringify(n10.toFigmaTokens(), null, 2), `tokens.${(/* @__PURE__ */ new Date()).getTime()}.json`);
  }, children: a("code", { children: JSON.stringify(n10.toFigmaTokens(), null, 2) }) })] });
}) }, Symbol.toStringTag, { value: "Module" })), nW = n(() => {
  let n10 = s(false), e2 = ns((n11) => {
    let { state: e3 } = n11;
    e3.styles.popper.width = `${e3.rects.reference.width}px`;
  }, { name: "sameWidth", phase: "beforeWrite", requires: ["computeStyles"] });
  return () => a(nt, { isOpen: n10.value, onClickOutside: () => n10.value = false, placement: "bottom-start", modifiers: [e2], $content: t(G, { sx: { containerStyle: "sys.on-surface" }, children: ["Popper ", `${n10.value}`, "!"] }), children: a(G, { sx: { p: 4 }, component: "button", onClick: () => n10.value = !n10.value, children: "Click Trigger Popper" }) });
}), nq = n(() => {
  let n10 = s(false);
  return () => a(nt, { isOpen: n10.value, $content: a(G, { sx: { containerStyle: "sys.on-surface" }, children: "Popper Content!" }), children: a(G, { component: "button", sx: { p: 4 }, onMouseover: () => n10.value = true, onMouseout: () => n10.value = false, children: "Popper Trigger" }) });
}), nJ = nc({ from: { opacity: 0 }, to: { opacity: 1 }, duration: nl.duration.md1, easing: nl.easing.standard.accelerate }, { from: { opacity: 1 }, to: { opacity: 0 }, duration: nl.duration.sm4, easing: nl.easing.standard.decelerate }), nX = n(() => {
  let n10 = s(true);
  return () => a(nt, { isOpen: n10.value, $transition: (n11) => {
    let { content: e2 } = n11;
    return a(nJ, { children: e2 });
  }, $content: t(G, { sx: { containerStyle: "sys.on-surface", shadow: "2", py: 2, px: 4, rounded: "sm" }, children: ["Popper ", `${n10.value}`, "!"] }), children: a(G, { sx: { p: 4 }, component: "button", onMouseover: () => n10.value = true, onMouseout: () => n10.value = false, children: "Animated Popper" }) });
});
function nG(n10) {
  let e2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblockd4735e3a: "codeblockd4735e3a", codeblocke7f6c011: "codeblocke7f6c011", div: "div", h2: "h2", pre: "pre", span: "span", ...n10.components };
  return t(u, { children: [a(e2.h2, { children: "Normal Popper" }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblockd4735e3a, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token maybe-class-name", children: "Popper" }), a(e2.span, { className: "token punctuation", children: "," }), " createPopperModifier ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ref ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"vue"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "const" }), " isOpen ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "ref" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token boolean", children: "false" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(e2.span, { className: "token keyword", children: "const" }), " modifier ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "createPopperModifier" }), a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), " state ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n      state", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "styles" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "popper" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "width" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", t(e2.span, { className: "token template-string", children: [a(e2.span, { className: "token template-punctuation string", children: "`" }), t(e2.span, { className: "token interpolation", children: [a(e2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "state", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "rects" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "reference" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "width" }), a(e2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), a(e2.span, { className: "token string", children: "px" }), a(e2.span, { className: "token template-punctuation string", children: "`" })] }), a(e2.span, { className: "token punctuation", children: ";" }), "\n    ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: "{" }), "\n      name", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sameWidth"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n      phase", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"beforeWrite"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n      requires", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "[" }), a(e2.span, { className: "token string", children: '"computeStyles"' }), a(e2.span, { className: "token punctuation", children: "]" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "isOpen" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "onClickOutside" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token boolean", children: "false" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "placement" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token string", children: '"bottom-start"' }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "modifiers" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "[" }), "modifier", a(e2.span, { className: "token punctuation", children: "]" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "$content" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n        ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " containerStyle", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.on-surface"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          Popper " }), a(e2.span, { className: "token punctuation", children: "{" }), t(e2.span, { className: "token template-string", children: [a(e2.span, { className: "token template-punctuation string", children: "`" }), t(e2.span, { className: "token interpolation", children: [a(e2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), a(e2.span, { className: "token template-punctuation string", children: "`" })] }), a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token plain-text", children: "!\n        " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " p", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "4" }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "component" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "onClick" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token operator", children: "!" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n        Click Trigger Popper\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Popper" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(e2.h2, { children: "Hovered Popper" }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblocke7f6c011, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ref ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"vue"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token maybe-class-name", children: "Popper" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "const" }), " isOpen ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "ref" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token boolean", children: "false" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "isOpen" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "$content" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n        ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " containerStyle", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.on-surface"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "Popper Content!" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "component" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " p", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "4" }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "onMouseover" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token boolean", children: "true" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "onMouseout" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token boolean", children: "false" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n        Popper Trigger\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Popper" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(e2.h2, { children: "Animated" }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblock4a44dc15, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ref ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"vue"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  defineTransition", a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token maybe-class-name", children: "Popper" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  transition", a(e2.span, { className: "token punctuation", children: "," }), "\n  triangle", a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "FadeInOutTransition" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "defineTransition" }), a(e2.span, { className: "token punctuation", children: "(" }), "\n  ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    ", a(e2.span, { className: "token keyword module", children: "from" }), a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "0" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    to", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "1" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    duration", a(e2.span, { className: "token operator", children: ":" }), " transition", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "duration" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "md1" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    easing", a(e2.span, { className: "token operator", children: ":" }), " transition", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "easing" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "standard" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "accelerate" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    ", a(e2.span, { className: "token keyword module", children: "from" }), a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "1" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    to", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "0" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    duration", a(e2.span, { className: "token operator", children: ":" }), " transition", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "duration" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "sm4" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    easing", a(e2.span, { className: "token operator", children: ":" }), " transition", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "easing" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "standard" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "decelerate" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "const" }), " isOpen ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "ref" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token boolean", children: "true" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "isOpen" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "$transition" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), " content ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n        ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "FadeInOutTransition" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token punctuation", children: "{" }), "content", a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "FadeInOutTransition" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "$content" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n        ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), "\n          ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n            containerStyle", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.on-surface"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n            shadow", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"2"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n            py", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "2" }), a(e2.span, { className: "token punctuation", children: "," }), "\n            px", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "4" }), a(e2.span, { className: "token punctuation", children: "," }), "\n            rounded", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sm"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n          ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          Popper " }), a(e2.span, { className: "token punctuation", children: "{" }), t(e2.span, { className: "token template-string", children: [a(e2.span, { className: "token template-punctuation string", children: "`" }), t(e2.span, { className: "token interpolation", children: [a(e2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), a(e2.span, { className: "token template-punctuation string", children: "`" })] }), a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token plain-text", children: "!\n        " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " p", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "4" }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "component" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "onMouseover" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token boolean", children: "true" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "onMouseout" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "isOpen", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token boolean", children: "false" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n        Animated Popper\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Popper" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function nY() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? a(e2, { ...n10, children: a(nG, { ...n10 }) }) : nG(n10);
}
let nZ = Object.freeze(Object.defineProperty({ __proto__: null, default: h(() => () => k(nY, { components: { codeblockd4735e3a: nW, codeblocke7f6c011: nq, codeblock4a44dc15: nX } })) }, Symbol.toStringTag, { value: "Module" })), nK = no("button", { disabled: _().optional() }, { displayName: "Button" })({ bg: "none", outline: "none", border: "none", px: 16, h: 40, rounded: "md", color: "sys.primary", bgColor: ni("sys.primary", nr(0.08)), _disabled: { color: ni("sys.on-surface", nr(0.12)), bgColor: ni("sys.on-surface", nr(0.08)) } }), nQ = () => t(G, { sx: { display: "flex", gap: 8 }, children: [a(nK, { children: "按钮" }), a(nK, { disabled: true, children: "按钮" })] }), n0 = n(() => () => a(G, { sx: { display: "flex", padding: 10, containerStyle: "sys.primary" }, children: a(G, { sx: { containerStyle: "sys.surface-container" }, component: "button", children: "Hi 111" }) }));
function n1(n10) {
  let e2 = { a: "a", code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock785f3ec7: "codeblock785f3ec7", div: "div", em: "em", h2: "h2", h3: "h3", li: "li", p: "p", pre: "pre", span: "span", strong: "strong", ul: "ul", ...n10.components };
  return t(u, { children: [t(e2.p, { children: ["设计理念沿用 ", a(e2.a, { href: "https://m3.material.io/", children: "Material 3" })] }), "\n", a(e2.p, { children: "这里仅为适配该设计理念，抽象 Design System, 方便开发：" }), "\n", t(e2.p, { children: ["所有的 Design Token 将声明为 ", a(e2.code, { children: "css var" }), " (", a(e2.a, { href: "https://developer.mozilla.org/en-US/docs/Web/CSS/--*", children: "Custom properties" }), "),\n可同时支持在 ", a(e2.code, { children: "css-in-js" }), " 和 ", a(e2.code, { children: "raw css" }), " 中使用。"] }), "\n", a(e2.h2, { children: a(e2.code, { children: "css-in-js" }) }), "\n", a(e2.p, { children: "TypeScript 的帮助下，还会提供准确的 Design Token 值. 如：" }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblock4a44dc15, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), a(e2.span, { className: "token punctuation", children: "," }), " alpha", a(e2.span, { className: "token punctuation", children: "," }), " styled", a(e2.span, { className: "token punctuation", children: "," }), " variant ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " t ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Button" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "styled" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  disabled", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "boolean" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n  bg", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"none"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  outline", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"none"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  border", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"none"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  px", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "16" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  h", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "40" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  rounded", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"md"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", a(e2.span, { className: "token comment", children: "// 利用 TypeScript 的推导而来，且非 color 属性无该值" }), "\n  ", a(e2.span, { className: "token comment", children: "// 实际将转换为 var(--vk-color-sys-primary)" }), "\n  ", a(e2.span, { className: "token comment", children: "// sys-* 的 color 还会随暗黑/普通主题进行切换" }), "\n  color", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.primary"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", a(e2.span, { className: "token comment", children: "// color 变种" }), "\n  ", a(e2.span, { className: "token comment", children: "// 实际将转换为 rbga(var(--vk-color-sys-primary-rgb) / 0.08)" }), "\n  bgColor", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token function", children: "variant" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"sys.primary"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token function", children: "alpha" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "0.08" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", a(e2.span, { className: "token comment", children: "// 通常情况下，组件 props 将转换成 data-<prop> 作为 attr" }), "\n  ", a(e2.span, { className: "token comment", children: "// 即： <Button disabled/>  =>  <button data-disabled=true />" }), "\n  ", a(e2.span, { className: "token comment", children: "// 同理，在自定义转换规则中，也建议如下做类似的转换，避免动态创建 CSSObject" }), "\n  _disabled", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    color", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token function", children: "variant" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"sys.on-surface"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token function", children: "alpha" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "0.12" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    bgColor", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token function", children: "variant" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"sys.on-surface"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token function", children: "alpha" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "0.08" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " display", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"flex"' }), a(e2.span, { className: "token punctuation", children: "," }), " gap", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "8" }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Button" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "按钮" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Button" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Button" })] }), " ", a(e2.span, { className: "token attr-name", children: "disabled" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token boolean", children: "true" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "按钮" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Button" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", t(e2.p, { children: ["不同于其他框架中的 theme 定义，为了更准确的类型推导，需要由 DesignToken 进行创建\n详细请", a(e2.a, { href: "https://github.com/innoai-tech/vuekit/blob/main/nodepkg/vueuikit/src/theming/m3", children: "参考源码" })] }), "\n", t(e2.p, { children: ["虽然底层使用的是 ", a(e2.code, { children: "@emotion/*" }), "，但屏蔽掉了 ", a(e2.code, { children: "array" }), " 等非 CSSObject 值的使用, 初衷是为了更稳定的类型推导。\n另外样式扩展有两种方式"] }), "\n", a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " t ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " styled", a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword", children: "const" }), " shared", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  color", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.primary"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token comment", children: "// ..." }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token comment", children: "// 直接通过 extends 复用样式" }), "\n", a(e2.span, { className: "token comment", children: "//" }), "\n", a(e2.span, { className: "token comment", children: "// 组件 props 定义需要重新声明" }), "\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "ButtonBase" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "styled" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  disabled", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "boolean" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "extends" }), a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "[" }), "shared", a(e2.span, { className: "token punctuation", children: "]" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token comment", children: "// ..." }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token comment", children: "// 通过 styled 覆写样式" }), "\n", a(e2.span, { className: "token comment", children: "// 可以完全继承 BaseButton 的 props 定义" }), "\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Button" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "styled" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token maybe-class-name", children: "ButtonBase" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token comment", children: "// ..." }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) }), "\n", t(e2.p, { children: ["除 ", a(e2.code, { children: "styled" }), " 外，我们还可以使用 ", a(e2.code, { children: "Box" }), " 进行快速样式定义, 通过 ", a(e2.code, { children: "sx" }), " prop。 并且 ", a(e2.code, { children: "component" }), " prop 支持我们随时切换 tag 或者\n组件，并且其他 props 会随着不同的 component 切换对应 props 类型约束与提示。"] }), "\n", a(e2.p, { children: "同样的，通过 styled 创建的组件也有一样的特性。" }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblock785f3ec7, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n  ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " display", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"flex"' }), a(e2.span, { className: "token punctuation", children: "," }), " padding", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "10" }), a(e2.span, { className: "token punctuation", children: "," }), " containerStyle", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.primary"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " containerStyle", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.surface-container"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token attr-name", children: "component" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      Hi 111\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n  " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(e2.h3, { children: "CSS Selector 简写规则" }), "\n", t(e2.p, { children: ["另外，为了简化 ", a(e2.code, { children: '"&:hover"' }), " ", a(e2.code, { children: "&[aria-current='page']" }), " 等选择器声明，\n提供的如下的简化规则："] }), "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: ["所有名称支持 ", a(e2.em, { children: "下划线命名" }), " 或者 ", a(e2.em, { children: "驼峰命名" }), "，最终都将转换为 ", a(e2.em, { children: "短横小写命名" }), ", ", a(e2.code, { children: "=" }), " 用 ", a(e2.code, { children: "__" }), " 替代"] }), "\n", t(e2.li, { children: [a(e2.code, { children: "_*" }), " 一般表示", a(e2.strong, { children: "状态" }), "，可用值", "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: [a(e2.code, { children: "data-*" }), " 和 ", a(e2.code, { children: "aria-*" }), ", `", "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: ["如 ", a(e2.code, { children: "_aria_current__page" }), "： 等效为 ", a(e2.code, { children: "&[aria-current='page']" }), ","] }), "\n"] }), "\n"] }), "\n", t(e2.li, { children: [a(e2.code, { children: "before" }), "，", a(e2.code, { children: "after" }), " 等", a(e2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements", children: "伪元素" }), ', 需要声明 "$" 表示为元素', "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: ["如 ", a(e2.code, { children: "_$before" }), "： 等效为 ", a(e2.code, { children: "&::before" })] }), "\n"] }), "\n"] }), "\n", t(e2.li, { children: [a(e2.code, { children: "hover" }), ", ", a(e2.code, { children: "focus" }), ", ", a(e2.code, { children: "active" }), ", ", a(e2.code, { children: "disabled" }), " 等", a(e2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes", children: "伪类" }), "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: ["如 ", a(e2.code, { children: "_hover" }), "： 等效为 ", a(e2.code, { children: "&:hover, &.hover, &[data-hover]:not([data-hover='false'])" }), ","] }), "\n"] }), "\n"] }), "\n", t(e2.li, { children: ["以及其他自定义状态", "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: ["如 ", a(e2.code, { children: "_has_icon" }), "： 等效为 ", a(e2.code, { children: "&[data-has-icon]:not([data-has-icon='false'])" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n", t(e2.li, { children: [a(e2.code, { children: "$*" }), " 或 ", a(e2.code, { children: "*$" }), "，一般指代", a(e2.strong, { children: "元素节点" }), ", 可用值为", "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: [a(e2.code, { children: "data-*" }), " 和 ", a(e2.code, { children: "aria-*" }), ", `", "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: ["如 ", a(e2.code, { children: "$data_icon" }), "： 等效为 ", a(e2.code, { children: "&[data-icon]" })] }), "\n", t(e2.li, { children: ["如 ", a(e2.code, { children: "$data_popper_arrow" }), "： 等效为 ", a(e2.code, { children: "&[data-popper-arrow]" })] }), "\n", t(e2.li, { children: ["如 ", a(e2.code, { children: "data_popper_placement__right$" }), "： 等效为 ", a(e2.code, { children: "[data-popper-placement=right] &" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n"] })] });
}
function n4() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? a(e2, { ...n10, children: a(n1, { ...n10 }) }) : n1(n10);
}
let n2 = Object.freeze(Object.defineProperty({ __proto__: null, default: h(() => () => k(n4, { components: { codeblock4a44dc15: nQ, codeblock785f3ec7: n0 } })) }, Symbol.toStringTag, { value: "Module" })), n7 = y({ value: S().optional().default("1"), onValueChange: w() }, (n10, e2) => {
  var s2;
  let { emit: t2 } = e2, c2 = f(null !== (s2 = n10.value) && void 0 !== s2 ? s2 : "");
  return v(c2, ng(300), x((n11) => t2("value-change", n11))), v(c2, b((n11) => a("input", { value: n11, onInput: (n12) => {
    c2.value = n12.target.value;
  } })));
}, { displayName: "TextDebounceInput" }), n3 = n(() => {
  let n10 = s("default");
  return () => a("div", { children: t("div", { style: { display: "flex", gap: "1rem" }, children: [a(n7, { value: n10.value, onValueChange: (e2) => {
    n10.value = e2;
  } }), t("div", { children: ["Inputted: ", n10.value] })] }) });
});
function n5(n10) {
  let e2 = { a: "a", code: "code", codeblockd4735e3a: "codeblockd4735e3a", div: "div", p: "p", pre: "pre", span: "span", ...n10.components };
  return t(u, { children: [t(e2.p, { children: ["和 ", a(e2.a, { href: "https://rxjs.dev/", children: "rxjs" }), " 集成"] }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblockd4735e3a, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), "\n  component", a(e2.span, { className: "token punctuation", children: "," }), "\n  component$", a(e2.span, { className: "token punctuation", children: "," }), "\n  rx", a(e2.span, { className: "token punctuation", children: "," }), "\n  observableRef", a(e2.span, { className: "token punctuation", children: "," }), "\n  subscribeUntilUnmount", a(e2.span, { className: "token punctuation", children: "," }), "\n  t", a(e2.span, { className: "token punctuation", children: "," }), "\n  render", a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ref ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"vue"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " debounceTime", a(e2.span, { className: "token punctuation", children: "," }), " subscribeOn ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"rxjs"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "TextDebounceInput" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "component$" }), a(e2.span, { className: "token punctuation", children: "(" }), "\n  ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    value", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "string" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token keyword module", children: "default" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"1"' }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    onValueChange", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "custom" }), a(e2.span, { className: "token operator", children: "<" }), a(e2.span, { className: "token punctuation", children: "(" }), "v", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token builtin", children: "string" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token keyword", children: "void" }), a(e2.span, { className: "token operator", children: ">" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "(" }), "props", a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "{" }), " emit ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    ", a(e2.span, { className: "token keyword", children: "const" }), " value$ ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "observableRef" }), a(e2.span, { className: "token punctuation", children: "(" }), "props", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "??" }), " ", a(e2.span, { className: "token string", children: '""' }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n    ", a(e2.span, { className: "token function", children: "rx" }), a(e2.span, { className: "token punctuation", children: "(" }), "\n      value$", a(e2.span, { className: "token punctuation", children: "," }), "\n      ", a(e2.span, { className: "token function", children: "debounceTime" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "300" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n      ", a(e2.span, { className: "token function", children: "subscribeUntilUnmount" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), "v", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token function", children: "emit" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"value-change"' }), a(e2.span, { className: "token punctuation", children: "," }), " v", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n    ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token function", children: "rx" }), a(e2.span, { className: "token punctuation", children: "(" }), "\n      value$", a(e2.span, { className: "token punctuation", children: "," }), "\n      ", a(e2.span, { className: "token function", children: "render" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), "v", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n        ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n          ", a(e2.span, { className: "token attr-name", children: "value" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "v", a(e2.span, { className: "token punctuation", children: "}" })] }), "\n          ", a(e2.span, { className: "token attr-name", children: "onInput" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), "e", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n            value$", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "e", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "target" }), " ", a(e2.span, { className: "token keyword module", children: "as" }), " ", a(e2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n          ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token punctuation", children: "/>" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "const" }), " inputValue ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "ref" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"default"' }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", a(e2.span, { className: "token attr-name", children: "style" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " display", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"flex"' }), a(e2.span, { className: "token punctuation", children: "," }), " gap", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"1rem"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n        " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "TextDebounceInput" })] }), "\n          ", a(e2.span, { className: "token attr-name", children: "value" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "inputValue", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n          ", a(e2.span, { className: "token attr-name", children: "onValueChange" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), "value", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n            inputValue", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " value", a(e2.span, { className: "token punctuation", children: ";" }), "\n          ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token punctuation", children: "/>" })] }), a(e2.span, { className: "token plain-text", children: "\n        " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "Inputted: " }), a(e2.span, { className: "token punctuation", children: "{" }), "inputValue", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function n6() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? a(e2, { ...n10, children: a(n5, { ...n10 }) }) : n5(n10);
}
let n8 = Object.freeze(Object.defineProperty({ __proto__: null, default: h(() => () => k(n6, { components: { codeblockd4735e3a: n3 } })) }, Symbol.toStringTag, { value: "Module" })), n9 = n(() => {
  let n10 = s(1);
  return () => t("div", { style: { display: "flex", gap: "1rem" }, children: [t("div", { children: ["Counts: ", n10.value] }), a("button", { onClick: () => n10.value++, children: "Click To Count" })] });
}), en = n({ value: S().optional().default("1"), type: C(["text", "number"]), onValueChange: w() }, (n10, e2) => {
  let { emit: s2 } = e2;
  return () => a("input", { value: n10.value, onInput: (n11) => {
    s2("value-change", n11.target.value);
  } });
}, { displayName: "TextInput" }), ee = n({ $title: w().optional(), $item: w().optional(), $default: w().optional() }, (n10, e2) => {
  let {} = n10, { slots: s2 } = e2;
  return () => {
    var n11, e3;
    return t("dl", { children: [a("dt", { children: "default" }), a("dd", { children: null === (n11 = s2.default) || void 0 === n11 ? void 0 : n11.call(s2) }), a("dt", { children: "title" }), a("dd", { children: null === (e3 = s2.title) || void 0 === e3 ? void 0 : e3.call(s2) }), a("dt", { children: "item" }), a("dd", { children: [{ label: "1", value: "1" }, { label: "2", value: "2" }].map((n12) => {
      var e4;
      return null === (e4 = s2.item) || void 0 === e4 ? void 0 : e4.call(s2, n12);
    }) })] });
  };
}, { displayName: "List" }), ea = n(() => {
  let n10 = s("");
  return () => a(ee, { $title: t("div", { children: ["Inputted: ", n10.value] }), $item: (n11) => a("div", { children: n11.label }), children: a(en, { type: "text", onValueChange: (e2) => {
    n10.value = e2;
  } }) });
});
function es(n10) {
  let e2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock4b227777: "codeblock4b227777", div: "div", li: "li", p: "p", pre: "pre", span: "span", ul: "ul", ...n10.components };
  return t(u, { children: [a(e2.p, { children: "为了更好的 TypeScript 和 JSX 的支持，重新抽象了定义组件的方式" }), "\n", a(e2.p, { children: "一般组件：" }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblock4b227777, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ref ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"vue"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "const" }), " count ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "ref" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "1" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", a(e2.span, { className: "token attr-name", children: "style" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " display", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"flex"' }), a(e2.span, { className: "token punctuation", children: "," }), " gap", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"1rem"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "Counts: " }), a(e2.span, { className: "token punctuation", children: "{" }), "count", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "button"] }), " ", a(e2.span, { className: "token attr-name", children: "onClick" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " count", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token operator", children: "++" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "Click To Count" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "button"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(e2.p, { children: "可复用组件：" }), "\n", t(e2.ul, { children: ["\n", t(e2.li, { children: [a(e2.code, { children: "props" }), " 和 ", a(e2.code, { children: "emits" }), " 合并声明"] }), "\n"] }), "\n", t(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblock4a44dc15, {}) }), a(e2.pre, { className: "language-tsx", children: t(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), " component", a(e2.span, { className: "token punctuation", children: "," }), " t", a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token keyword", children: "type" }), " ", a(e2.span, { className: "token class-name", children: a(e2.span, { className: "token maybe-class-name", children: "VNode" }) }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token keyword", children: "type" }), " ", a(e2.span, { className: "token class-name", children: a(e2.span, { className: "token maybe-class-name", children: "VNodeChild" }) }), " ", a(e2.span, { className: "token punctuation", children: "}" }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", t(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ref ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"vue"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "TextInput" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), "\n  ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    ", a(e2.span, { className: "token comment", children: "// VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）" }), "\n    ", a(e2.span, { className: "token comment", children: "// 必须声明，哪怕只是属性名称" }), "\n    ", a(e2.span, { className: "token comment", children: "//" }), "\n    ", a(e2.span, { className: "token comment", children: "// 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem" }), "\n    ", a(e2.span, { className: "token comment", children: "// 类型定义无法转为 Runtime 对象" }), "\n    ", a(e2.span, { className: "token comment", children: "// 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证" }), "\n    ", a(e2.span, { className: "token comment", children: "// 注意 default 需要在 最后，为了 内部推导" }), "\n    value", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "string" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token keyword module", children: "default" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"1"' }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    type", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "enums" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "[" }), a(e2.span, { className: "token string", children: '"text"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token string", children: '"number"' }), a(e2.span, { className: "token punctuation", children: "]" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n    ", a(e2.span, { className: "token comment", children: "// on[A-Z] 前缀视为 emits" }), "\n    onValueChange", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "custom" }), a(e2.span, { className: "token operator", children: "<" }), a(e2.span, { className: "token punctuation", children: "(" }), "v", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token builtin", children: "string" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token keyword", children: "void" }), a(e2.span, { className: "token operator", children: ">" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "(" }), "props", a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "{" }), " emit ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    ", a(e2.span, { className: "token comment", children: "// setup" }), "\n\n    ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n      ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n        ", a(e2.span, { className: "token attr-name", children: "value" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), "props", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "onInput" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), "e", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n          ", a(e2.span, { className: "token function", children: "emit" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"value-change"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "e", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "target" }), " ", a(e2.span, { className: "token keyword module", children: "as" }), " ", a(e2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n        ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: "/>" })] }), "\n    ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "interface" }), " ", a(e2.span, { className: "token class-name", children: a(e2.span, { className: "token maybe-class-name", children: "Option" }) }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  label", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token builtin", children: "string" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n  value", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token builtin", children: "string" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "List" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), "\n  ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    ", a(e2.span, { className: "token comment", children: "// $ 前缀视为 slots" }), "\n    $title", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "custom" }), a(e2.span, { className: "token operator", children: "<" }), a(e2.span, { className: "token maybe-class-name", children: "VNodeChild" }), a(e2.span, { className: "token operator", children: ">" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    ", a(e2.span, { className: "token comment", children: "// renderProp" }), "\n    $item", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "custom" }), a(e2.span, { className: "token operator", children: "<" }), a(e2.span, { className: "token punctuation", children: "(" }), "option", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Option" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token maybe-class-name", children: "VNode" }), a(e2.span, { className: "token operator", children: ">" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n    $", a(e2.span, { className: "token keyword module", children: "default" }), a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "custom" }), a(e2.span, { className: "token operator", children: "<" }), a(e2.span, { className: "token maybe-class-name", children: "VNodeChild" }), a(e2.span, { className: "token operator", children: ">" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n    ", a(e2.span, { className: "token comment", children: "// 以此避免多插槽时 children slots object 的写法, 且无类型约束，" }), "\n    ", a(e2.span, { className: "token comment", children: "// {{ default: () => VNode, title: () => VNode, item: (option: Option) => VNode }}" }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "{" }), " slots ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), "\n    ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n      ", a(e2.span, { className: "token keyword", children: "const" }), " options ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token punctuation", children: "[" }), "\n        ", a(e2.span, { className: "token punctuation", children: "{" }), "\n          label", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"1"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n          value", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"1"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n        ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n        ", a(e2.span, { className: "token punctuation", children: "{" }), "\n          label", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"2"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n          value", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"2"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n        ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n      ", a(e2.span, { className: "token punctuation", children: "]" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n      ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n        ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "dl"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "dt"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "default" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "dt"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "dd"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token punctuation", children: "{" }), "slots", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token keyword module", children: "default" }), a(e2.span, { className: "token operator", children: "?." }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "dd"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "dt"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "title" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "dt"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "dd"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token punctuation", children: "{" }), "slots", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "title" }), a(e2.span, { className: "token operator", children: "?." }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "dd"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "dt"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "item" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "dt"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n          " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "dd"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token punctuation", children: "{" }), "options", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "map" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), "option", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " slots", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "item" }), a(e2.span, { className: "token operator", children: "?." }), a(e2.span, { className: "token punctuation", children: "(" }), "option", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "dd"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n        " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "dl"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n    ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "const" }), " inputValue ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "ref" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '""' }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "List" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "$title" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "Inputted: " }), a(e2.span, { className: "token punctuation", children: "{" }), "inputValue", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token attr-name", children: "$item" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), "o", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token punctuation", children: "{" }), "o", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "label" }), a(e2.span, { className: "token punctuation", children: "}" }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), "div"] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "TextInput" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "type" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token string", children: '"text"' }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(e2.span, { className: "token attr-name", children: "onValueChange" }), t(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "(" }), "value", a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n          inputValue", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token property-access", children: "value" }), " ", a(e2.span, { className: "token operator", children: "=" }), " value", a(e2.span, { className: "token punctuation", children: ";" }), "\n        ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(e2.span, { className: "token punctuation", children: "/>" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), t(e2.span, { className: "token tag", children: [t(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "List" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function et() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? a(e2, { ...n10, children: a(es, { ...n10 }) }) : es(n10);
}
let ec = Object.freeze(Object.defineProperty({ __proto__: null, default: h(() => () => k(et, { components: { codeblock4b227777: n9, codeblock4a44dc15: ea } })) }, Symbol.toStringTag, { value: "Module" }));
