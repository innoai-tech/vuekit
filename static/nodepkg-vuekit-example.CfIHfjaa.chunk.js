import { C as n } from "./nodepkg-vuekit-example.DOhCVHeQ.chunk.js";
import { C as a } from "./nodepkg-vuekit-example.CwZuA1yN.chunk.js";
import { j as e, a as s } from "./lib--nodepkg-vue-jsx-runtime.DL8fEjf_.chunk.js";
import { l as c, h as t, F as l } from "./lib--nodepkg-vuekit.C4CbSFwU.chunk.js";
function o(n2) {
  let a2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock4b227777: "codeblock4b227777", div: "div", li: "li", p: "p", pre: "pre", span: "span", ul: "ul", ...n2.components };
  return s(l, { children: [e(a2.p, { children: "为了更好的 TypeScript 和 JSX 的支持，重新抽象了定义组件的方式" }), "\n", e(a2.p, { children: "一般组件：" }), "\n", s(a2.div, { "data-example": "", children: [e(a2.div, { "data-example-container": "", children: e(a2.codeblock4b227777, {}) }), e(a2.pre, { className: "language-tsx", children: s(a2.code, { className: "language-tsx", children: [e(a2.span, { className: "token keyword module", children: "import" }), " ", s(a2.span, { className: "token imports", children: [e(a2.span, { className: "token punctuation", children: "{" }), " component ", e(a2.span, { className: "token punctuation", children: "}" })] }), " ", e(a2.span, { className: "token keyword module", children: "from" }), " ", e(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), e(a2.span, { className: "token punctuation", children: ";" }), "\n", e(a2.span, { className: "token keyword module", children: "import" }), " ", s(a2.span, { className: "token imports", children: [e(a2.span, { className: "token punctuation", children: "{" }), " ref ", e(a2.span, { className: "token punctuation", children: "}" })] }), " ", e(a2.span, { className: "token keyword module", children: "from" }), " ", e(a2.span, { className: "token string", children: '"vue"' }), e(a2.span, { className: "token punctuation", children: ";" }), "\n\n", e(a2.span, { className: "token keyword module", children: "export" }), " ", e(a2.span, { className: "token keyword module", children: "default" }), " ", e(a2.span, { className: "token function", children: "component" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "{" }), "\n  ", e(a2.span, { className: "token keyword", children: "const" }), " count ", e(a2.span, { className: "token operator", children: "=" }), " ", e(a2.span, { className: "token function", children: "ref" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token number", children: "1" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", e(a2.span, { className: "token keyword control-flow", children: "return" }), " ", e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "(" }), "\n    ", s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", e(a2.span, { className: "token attr-name", children: "style" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token punctuation", children: "{" }), " display", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token string", children: '"flex"' }), e(a2.span, { className: "token punctuation", children: "," }), " gap", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token string", children: '"1rem"' }), " ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "}" })] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n      " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "div"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "Counts: " }), e(a2.span, { className: "token punctuation", children: "{" }), "count", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "value" }), e(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "div"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n      " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "button"] }), " ", e(a2.span, { className: "token attr-name", children: "onClick" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " count", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "value" }), e(a2.span, { className: "token operator", children: "++" }), e(a2.span, { className: "token punctuation", children: "}" })] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "Click To Count" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "button"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n    " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "div"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", e(a2.p, { children: "可复用组件：" }), "\n", s(a2.ul, { children: ["\n", s(a2.li, { children: [e(a2.code, { children: "props" }), " 和 ", e(a2.code, { children: "emits" }), " 合并声明"] }), "\n"] }), "\n", s(a2.div, { "data-example": "", children: [e(a2.div, { "data-example-container": "", children: e(a2.codeblock4a44dc15, {}) }), e(a2.pre, { className: "language-tsx", children: s(a2.code, { className: "language-tsx", children: [e(a2.span, { className: "token keyword module", children: "import" }), " ", e(a2.span, { className: "token punctuation", children: "{" }), " component", e(a2.span, { className: "token punctuation", children: "," }), " t", e(a2.span, { className: "token punctuation", children: "," }), " ", e(a2.span, { className: "token keyword", children: "type" }), " ", e(a2.span, { className: "token class-name", children: e(a2.span, { className: "token maybe-class-name", children: "VNode" }) }), e(a2.span, { className: "token punctuation", children: "," }), " ", e(a2.span, { className: "token keyword", children: "type" }), " ", e(a2.span, { className: "token class-name", children: e(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }) }), " ", e(a2.span, { className: "token punctuation", children: "}" }), " ", e(a2.span, { className: "token keyword module", children: "from" }), " ", e(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), e(a2.span, { className: "token punctuation", children: ";" }), "\n", e(a2.span, { className: "token keyword module", children: "import" }), " ", s(a2.span, { className: "token imports", children: [e(a2.span, { className: "token punctuation", children: "{" }), " ref ", e(a2.span, { className: "token punctuation", children: "}" })] }), " ", e(a2.span, { className: "token keyword module", children: "from" }), " ", e(a2.span, { className: "token string", children: '"vue"' }), e(a2.span, { className: "token punctuation", children: ";" }), "\n\n", e(a2.span, { className: "token keyword module", children: "export" }), " ", e(a2.span, { className: "token keyword", children: "const" }), " ", e(a2.span, { className: "token maybe-class-name", children: "TextInput" }), " ", e(a2.span, { className: "token operator", children: "=" }), " ", e(a2.span, { className: "token function", children: "component" }), e(a2.span, { className: "token punctuation", children: "(" }), "\n  ", e(a2.span, { className: "token punctuation", children: "{" }), "\n    ", e(a2.span, { className: "token comment", children: "// VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）" }), "\n    ", e(a2.span, { className: "token comment", children: "// 必须声明，哪怕只是属性名称" }), "\n    ", e(a2.span, { className: "token comment", children: "//" }), "\n    ", e(a2.span, { className: "token comment", children: "// 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem" }), "\n    ", e(a2.span, { className: "token comment", children: "// 类型定义无法转为 Runtime 对象" }), "\n    ", e(a2.span, { className: "token comment", children: "// 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证" }), "\n    ", e(a2.span, { className: "token comment", children: "// 注意 default 需要在 最后，为了 内部推导" }), "\n    value", e(a2.span, { className: "token operator", children: ":" }), " t", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token method function property-access", children: "string" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token method function property-access", children: "optional" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token keyword module", children: "default" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token string", children: '"1"' }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "," }), "\n    type", e(a2.span, { className: "token operator", children: ":" }), " t", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token method function property-access", children: "enums" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: "[" }), e(a2.span, { className: "token string", children: '"text"' }), e(a2.span, { className: "token punctuation", children: "," }), " ", e(a2.span, { className: "token string", children: '"number"' }), e(a2.span, { className: "token punctuation", children: "]" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "," }), "\n\n    ", e(a2.span, { className: "token comment", children: "// on[A-Z] 前缀视为 emits" }), "\n    onValueChange", e(a2.span, { className: "token operator", children: ":" }), " t", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "custom" }), e(a2.span, { className: "token operator", children: "<" }), e(a2.span, { className: "token punctuation", children: "(" }), "v", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token builtin", children: "string" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token keyword", children: "void" }), e(a2.span, { className: "token operator", children: ">" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "," }), "\n  ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "," }), "\n  ", e(a2.span, { className: "token punctuation", children: "(" }), "props", e(a2.span, { className: "token punctuation", children: "," }), " ", e(a2.span, { className: "token punctuation", children: "{" }), " emit ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "{" }), "\n    ", e(a2.span, { className: "token comment", children: "// setup" }), "\n\n    ", e(a2.span, { className: "token keyword control-flow", children: "return" }), " ", e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "(" }), "\n      ", s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n        ", e(a2.span, { className: "token attr-name", children: "value" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), "props", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "value" }), e(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", e(a2.span, { className: "token attr-name", children: "onInput" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token punctuation", children: "(" }), "e", e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "{" }), "\n          ", e(a2.span, { className: "token function", children: "emit" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token string", children: '"value-change"' }), e(a2.span, { className: "token punctuation", children: "," }), " ", e(a2.span, { className: "token punctuation", children: "(" }), "e", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "target" }), " ", e(a2.span, { className: "token keyword module", children: "as" }), " ", e(a2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "value" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n        ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", e(a2.span, { className: "token punctuation", children: "/>" })] }), "\n    ", e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n  ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "," }), "\n", e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n\n", e(a2.span, { className: "token keyword module", children: "export" }), " ", e(a2.span, { className: "token keyword", children: "interface" }), " ", e(a2.span, { className: "token class-name", children: e(a2.span, { className: "token maybe-class-name", children: "Option" }) }), " ", e(a2.span, { className: "token punctuation", children: "{" }), "\n  label", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token builtin", children: "string" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n  value", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token builtin", children: "string" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n", e(a2.span, { className: "token punctuation", children: "}" }), "\n\n", e(a2.span, { className: "token keyword module", children: "export" }), " ", e(a2.span, { className: "token keyword", children: "const" }), " ", e(a2.span, { className: "token maybe-class-name", children: "List" }), " ", e(a2.span, { className: "token operator", children: "=" }), " ", e(a2.span, { className: "token function", children: "component" }), e(a2.span, { className: "token punctuation", children: "(" }), "\n  ", e(a2.span, { className: "token punctuation", children: "{" }), "\n    ", e(a2.span, { className: "token comment", children: "// $ 前缀视为 slots" }), "\n    $title", e(a2.span, { className: "token operator", children: ":" }), " t", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "custom" }), e(a2.span, { className: "token operator", children: "<" }), e(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), e(a2.span, { className: "token operator", children: ">" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token method function property-access", children: "optional" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "," }), "\n    ", e(a2.span, { className: "token comment", children: "// renderProp" }), "\n    $item", e(a2.span, { className: "token operator", children: ":" }), " t", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "custom" }), e(a2.span, { className: "token operator", children: "<" }), e(a2.span, { className: "token punctuation", children: "(" }), "option", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token maybe-class-name", children: "Option" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token maybe-class-name", children: "VNode" }), e(a2.span, { className: "token operator", children: ">" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token method function property-access", children: "optional" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "," }), "\n\n    $", e(a2.span, { className: "token keyword module", children: "default" }), e(a2.span, { className: "token operator", children: ":" }), " t", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "custom" }), e(a2.span, { className: "token operator", children: "<" }), e(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), e(a2.span, { className: "token operator", children: ">" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token method function property-access", children: "optional" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "," }), "\n\n    ", e(a2.span, { className: "token comment", children: "// 以此避免多插槽时 children slots object 的写法, 且无类型约束，" }), "\n    ", e(a2.span, { className: "token comment", children: "// {{ default: () => VNode, title: () => VNode, item: (option: Option) => VNode }}" }), "\n  ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "," }), "\n  ", e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "," }), " ", e(a2.span, { className: "token punctuation", children: "{" }), " slots ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), "\n    ", e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "{" }), "\n      ", e(a2.span, { className: "token keyword", children: "const" }), " options ", e(a2.span, { className: "token operator", children: "=" }), " ", e(a2.span, { className: "token punctuation", children: "[" }), "\n        ", e(a2.span, { className: "token punctuation", children: "{" }), "\n          label", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token string", children: '"1"' }), e(a2.span, { className: "token punctuation", children: "," }), "\n          value", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token string", children: '"1"' }), e(a2.span, { className: "token punctuation", children: "," }), "\n        ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "," }), "\n        ", e(a2.span, { className: "token punctuation", children: "{" }), "\n          label", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token string", children: '"2"' }), e(a2.span, { className: "token punctuation", children: "," }), "\n          value", e(a2.span, { className: "token operator", children: ":" }), " ", e(a2.span, { className: "token string", children: '"2"' }), e(a2.span, { className: "token punctuation", children: "," }), "\n        ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "," }), "\n      ", e(a2.span, { className: "token punctuation", children: "]" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n\n      ", e(a2.span, { className: "token keyword control-flow", children: "return" }), " ", e(a2.span, { className: "token punctuation", children: "(" }), "\n        ", s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "dl"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n          " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "default" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n          " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token punctuation", children: "{" }), "slots", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token keyword module", children: "default" }), e(a2.span, { className: "token operator", children: "?." }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n          " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "title" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n          " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token punctuation", children: "{" }), "slots", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "title" }), e(a2.span, { className: "token operator", children: "?." }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n          " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "item" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n          " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token punctuation", children: "{" }), "options", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token method function property-access", children: "map" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: "(" }), "option", e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " slots", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "item" }), e(a2.span, { className: "token operator", children: "?." }), e(a2.span, { className: "token punctuation", children: "(" }), "option", e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n        " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "dl"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), "\n      ", e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n    ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "," }), "\n", e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n\n", e(a2.span, { className: "token keyword module", children: "export" }), " ", e(a2.span, { className: "token keyword module", children: "default" }), " ", e(a2.span, { className: "token function", children: "component" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "{" }), "\n  ", e(a2.span, { className: "token keyword", children: "const" }), " inputValue ", e(a2.span, { className: "token operator", children: "=" }), " ", e(a2.span, { className: "token function", children: "ref" }), e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token string", children: '""' }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", e(a2.span, { className: "token keyword control-flow", children: "return" }), " ", e(a2.span, { className: "token punctuation", children: "(" }), e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "(" }), "\n    ", s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), e(a2.span, { className: "token class-name", children: "List" })] }), "\n      ", e(a2.span, { className: "token attr-name", children: "$title" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "div"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "Inputted: " }), e(a2.span, { className: "token punctuation", children: "{" }), "inputValue", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "value" }), e(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "div"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", e(a2.span, { className: "token attr-name", children: "$item" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token punctuation", children: "(" }), "o", e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), "div"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token punctuation", children: "{" }), "o", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "label" }), e(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), "div"] }), e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token punctuation", children: "}" })] }), "\n    ", e(a2.span, { className: "token punctuation", children: ">" })] }), e(a2.span, { className: "token plain-text", children: "\n      " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "<" }), e(a2.span, { className: "token class-name", children: "TextInput" })] }), "\n        ", e(a2.span, { className: "token attr-name", children: "type" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token string", children: '"text"' }), e(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", e(a2.span, { className: "token attr-name", children: "onValueChange" }), s(a2.span, { className: "token script language-javascript", children: [e(a2.span, { className: "token script-punctuation punctuation", children: "=" }), e(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token punctuation", children: "(" }), "value", e(a2.span, { className: "token punctuation", children: ")" }), " ", e(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token punctuation", children: "{" }), "\n          inputValue", e(a2.span, { className: "token punctuation", children: "." }), e(a2.span, { className: "token property-access", children: "value" }), " ", e(a2.span, { className: "token operator", children: "=" }), " value", e(a2.span, { className: "token punctuation", children: ";" }), "\n        ", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", e(a2.span, { className: "token punctuation", children: "/>" })] }), e(a2.span, { className: "token plain-text", children: "\n    " }), s(a2.span, { className: "token tag", children: [s(a2.span, { className: "token tag", children: [e(a2.span, { className: "token punctuation", children: "</" }), e(a2.span, { className: "token class-name", children: "List" })] }), e(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n", e(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token punctuation", children: ")" }), e(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function p() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: a2 } = n2.components || {};
  return a2 ? e(a2, { ...n2, children: e(o, { ...n2 }) }) : o(n2);
}
let i = Object.assign(c(() => () => t(p, { components: { codeblock4b227777: n, codeblock4a44dc15: a } })), { displayName: "IndexDefault" });
export {
  i as default
};
