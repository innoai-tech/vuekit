import { _ as n, S as a, U as e, V as s, W as t, X as c, Y as l, c as o, Z as i, $ as r, a0 as p, G as u, J as d, r as h, j as m, i as k, a1 as N, a2 as v, a3 as f, d as g, h as y, k as w } from "./index.CxFCMZJ4.entry.js";
var b = function() {
  return Date.now();
}, x = function(a2) {
  function e2(n2, e3) {
    return a2.call(this) || this;
  }
  return n(e2, a2), e2.prototype.schedule = function(n2, a3) {
    return this;
  }, e2;
}(a), I = { setInterval: function(n2, a2) {
  for (var t2 = [], c2 = 2; c2 < arguments.length; c2++)
    t2[c2 - 2] = arguments[c2];
  return setInterval.apply(void 0, e([n2, a2], s(t2)));
}, clearInterval: function(n2) {
  var a2 = I.delegate;
  return ((null == a2 ? void 0 : a2.clearInterval) || clearInterval)(n2);
}, delegate: void 0 }, j = function(a2) {
  function e2(n2, e3) {
    var s2 = a2.call(this, n2, e3) || this;
    return s2.scheduler = n2, s2.work = e3, s2.pending = false, s2;
  }
  return n(e2, a2), e2.prototype.schedule = function(n2, a3) {
    if (void 0 === a3 && (a3 = 0), this.closed)
      return this;
    this.state = n2;
    var e3, s2 = this.id, t2 = this.scheduler;
    return null != s2 && (this.id = this.recycleAsyncId(t2, s2, a3)), this.pending = true, this.delay = a3, this.id = null !== (e3 = this.id) && void 0 !== e3 ? e3 : this.requestAsyncId(t2, this.id, a3), this;
  }, e2.prototype.requestAsyncId = function(n2, a3, e3) {
    return void 0 === e3 && (e3 = 0), I.setInterval(n2.flush.bind(n2, this), e3);
  }, e2.prototype.recycleAsyncId = function(n2, a3, e3) {
    if (void 0 === e3 && (e3 = 0), null != e3 && this.delay === e3 && false === this.pending)
      return a3;
    null != a3 && I.clearInterval(a3);
  }, e2.prototype.execute = function(n2, a3) {
    if (this.closed)
      return Error("executing a cancelled action");
    this.pending = false;
    var e3 = this._execute(n2, a3);
    if (e3)
      return e3;
    false === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
  }, e2.prototype._execute = function(n2, a3) {
    var e3, s2 = false;
    try {
      this.work(n2);
    } catch (n3) {
      s2 = true, e3 = n3 || Error("Scheduled action threw falsy error");
    }
    if (s2)
      return this.unsubscribe(), e3;
  }, e2.prototype.unsubscribe = function() {
    if (!this.closed) {
      var n2 = this.id, e3 = this.scheduler, s2 = e3.actions;
      this.work = this.state = this.scheduler = null, this.pending = false, t(s2, this), null != n2 && (this.id = this.recycleAsyncId(e3, n2, null)), this.delay = null, a2.prototype.unsubscribe.call(this);
    }
  }, e2;
}(x), V = function() {
  function n2(a2, e2) {
    void 0 === e2 && (e2 = n2.now), this.schedulerActionCtor = a2, this.now = e2;
  }
  return n2.prototype.schedule = function(n3, a2, e2) {
    return void 0 === a2 && (a2 = 0), new this.schedulerActionCtor(this, n3).schedule(e2, a2);
  }, n2.now = b, n2;
}(), A = new (function(a2) {
  function e2(n2, e3) {
    void 0 === e3 && (e3 = V.now);
    var s2 = a2.call(this, n2, e3) || this;
    return s2.actions = [], s2._active = false, s2;
  }
  return n(e2, a2), e2.prototype.flush = function(n2) {
    var a3, e3 = this.actions;
    if (this._active) {
      e3.push(n2);
      return;
    }
    this._active = true;
    do
      if (a3 = n2.execute(n2.state, n2.delay))
        break;
    while (n2 = e3.shift());
    if (this._active = false, a3) {
      for (; n2 = e3.shift(); )
        n2.unsubscribe();
      throw a3;
    }
  }, e2;
}(V))(j);
let C = function(n2, a2) {
  let e2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, s2 = null != a2 ? a2 : n2;
  return o(null != n2 ? n2 : {}, (n3, a3) => {
    let e3 = i(n3), t2 = s2(new Proxy({}, { get(a4, s3) {
      var t3;
      return null !== (t3 = n3[s3]) && void 0 !== t3 ? t3 : e3[s3];
    } }), new Proxy({}, { get: (n4, e4) => "render" === e4 ? r : a3[e4] }));
    return p(t2) ? t2 : () => t2;
  }, null != e2 ? e2 : a2);
}({ value: u().optional().default("1"), onValueChange: d() }, (n2, a2) => {
  var e2, s2;
  let { emit: t2 } = a2, o2 = N(null !== (e2 = n2.value) && void 0 !== e2 ? e2 : "");
  return v(o2, (void 0 === s2 && (s2 = A), c(function(n3, a3) {
    var e3 = null, t3 = null, c2 = null, o3 = function() {
      if (e3) {
        e3.unsubscribe(), e3 = null;
        var n4 = t3;
        t3 = null, a3.next(n4);
      }
    };
    function i2() {
      var n4 = c2 + 300, t4 = s2.now();
      if (t4 < n4) {
        e3 = this.schedule(void 0, n4 - t4), a3.add(e3);
        return;
      }
      o3();
    }
    n3.subscribe(l(a3, function(n4) {
      t3 = n4, c2 = s2.now(), e3 || (e3 = s2.schedule(i2, 300), a3.add(e3));
    }, function() {
      o3(), a3.complete();
    }, void 0, function() {
      t3 = e3 = null;
    }));
  })), f((n3) => t2("value-change", n3))), v(o2, r((n3) => m("input", { value: n3, onInput: (n4) => {
    o2.value = n4.target.value;
  } })));
}), $ = o(() => {
  let n2 = h("default");
  return () => m("div", { children: k("div", { style: { display: "flex", gap: "1rem" }, children: [m(_, { value: n2.value, onValueChange: (a2) => {
    n2.value = a2;
  } }), k("div", { children: ["Inputted: ", n2.value] })] }) });
}), _ = Object.assign(C, { displayName: "TextDebounceInput" }), D = Object.assign($, { displayName: "RxInVueMdCodeBlockd4735E3ADefault" });
function T(n2) {
  let a2 = { a: "a", code: "code", codeblockd4735e3a: "codeblockd4735e3a", div: "div", p: "p", pre: "pre", span: "span", ...n2.components };
  return k(w, { children: [k(a2.p, { children: ["和 ", m(a2.a, { href: "https://rxjs.dev/", children: "rxjs" }), " 集成"] }), "\n", k(a2.div, { "data-example": "", children: [m(a2.div, { "data-example-container": "", children: m(a2.codeblockd4735e3a, {}) }), m(a2.pre, { className: "language-tsx", children: k(a2.code, { className: "language-tsx", children: [m(a2.span, { className: "token keyword module", children: "import" }), " ", k(a2.span, { className: "token imports", children: [m(a2.span, { className: "token punctuation", children: "{" }), "\n  component", m(a2.span, { className: "token punctuation", children: "," }), "\n  component$", m(a2.span, { className: "token punctuation", children: "," }), "\n  rx", m(a2.span, { className: "token punctuation", children: "," }), "\n  observableRef", m(a2.span, { className: "token punctuation", children: "," }), "\n  subscribeUntilUnmount", m(a2.span, { className: "token punctuation", children: "," }), "\n  t", m(a2.span, { className: "token punctuation", children: "," }), "\n  render", m(a2.span, { className: "token punctuation", children: "," }), "\n", m(a2.span, { className: "token punctuation", children: "}" })] }), " ", m(a2.span, { className: "token keyword module", children: "from" }), " ", m(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), m(a2.span, { className: "token punctuation", children: ";" }), "\n", m(a2.span, { className: "token keyword module", children: "import" }), " ", k(a2.span, { className: "token imports", children: [m(a2.span, { className: "token punctuation", children: "{" }), " ref ", m(a2.span, { className: "token punctuation", children: "}" })] }), " ", m(a2.span, { className: "token keyword module", children: "from" }), " ", m(a2.span, { className: "token string", children: '"vue"' }), m(a2.span, { className: "token punctuation", children: ";" }), "\n", m(a2.span, { className: "token keyword module", children: "import" }), " ", k(a2.span, { className: "token imports", children: [m(a2.span, { className: "token punctuation", children: "{" }), " debounceTime", m(a2.span, { className: "token punctuation", children: "," }), " subscribeOn ", m(a2.span, { className: "token punctuation", children: "}" })] }), " ", m(a2.span, { className: "token keyword module", children: "from" }), " ", m(a2.span, { className: "token string", children: '"rxjs"' }), m(a2.span, { className: "token punctuation", children: ";" }), "\n\n", m(a2.span, { className: "token keyword module", children: "export" }), " ", m(a2.span, { className: "token keyword", children: "const" }), " ", m(a2.span, { className: "token maybe-class-name", children: "TextDebounceInput" }), " ", m(a2.span, { className: "token operator", children: "=" }), " ", m(a2.span, { className: "token function", children: "component$" }), m(a2.span, { className: "token punctuation", children: "(" }), "\n  ", m(a2.span, { className: "token punctuation", children: "{" }), "\n    value", m(a2.span, { className: "token operator", children: ":" }), " t", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token method function property-access", children: "string" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token method function property-access", children: "optional" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token keyword module", children: "default" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token string", children: '"1"' }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "," }), "\n    onValueChange", m(a2.span, { className: "token operator", children: ":" }), " t", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "custom" }), m(a2.span, { className: "token operator", children: "<" }), m(a2.span, { className: "token punctuation", children: "(" }), "v", m(a2.span, { className: "token operator", children: ":" }), " ", m(a2.span, { className: "token builtin", children: "string" }), m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token keyword", children: "void" }), m(a2.span, { className: "token operator", children: ">" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "," }), "\n  ", m(a2.span, { className: "token punctuation", children: "}" }), m(a2.span, { className: "token punctuation", children: "," }), "\n  ", m(a2.span, { className: "token punctuation", children: "(" }), "props", m(a2.span, { className: "token punctuation", children: "," }), " ", m(a2.span, { className: "token punctuation", children: "{" }), " emit ", m(a2.span, { className: "token punctuation", children: "}" }), m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token punctuation", children: "{" }), "\n    ", m(a2.span, { className: "token keyword", children: "const" }), " value$ ", m(a2.span, { className: "token operator", children: "=" }), " ", m(a2.span, { className: "token function", children: "observableRef" }), m(a2.span, { className: "token punctuation", children: "(" }), "props", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "value" }), " ", m(a2.span, { className: "token operator", children: "??" }), " ", m(a2.span, { className: "token string", children: '""' }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n\n    ", m(a2.span, { className: "token function", children: "rx" }), m(a2.span, { className: "token punctuation", children: "(" }), "\n      value$", m(a2.span, { className: "token punctuation", children: "," }), "\n      ", m(a2.span, { className: "token function", children: "debounceTime" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token number", children: "300" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "," }), "\n      ", m(a2.span, { className: "token function", children: "subscribeUntilUnmount" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: "(" }), "v", m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token function", children: "emit" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token string", children: '"value-change"' }), m(a2.span, { className: "token punctuation", children: "," }), " v", m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "," }), "\n    ", m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n\n    ", m(a2.span, { className: "token keyword control-flow", children: "return" }), " ", m(a2.span, { className: "token function", children: "rx" }), m(a2.span, { className: "token punctuation", children: "(" }), "\n      value$", m(a2.span, { className: "token punctuation", children: "," }), "\n      ", m(a2.span, { className: "token function", children: "render" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: "(" }), "v", m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token punctuation", children: "(" }), "\n        ", k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n          ", m(a2.span, { className: "token attr-name", children: "value" }), k(a2.span, { className: "token script language-javascript", children: [m(a2.span, { className: "token script-punctuation punctuation", children: "=" }), m(a2.span, { className: "token punctuation", children: "{" }), "v", m(a2.span, { className: "token punctuation", children: "}" })] }), "\n          ", m(a2.span, { className: "token attr-name", children: "onInput" }), k(a2.span, { className: "token script language-javascript", children: [m(a2.span, { className: "token script-punctuation punctuation", children: "=" }), m(a2.span, { className: "token punctuation", children: "{" }), m(a2.span, { className: "token punctuation", children: "(" }), "e", m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token punctuation", children: "{" }), "\n            value$", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "value" }), " ", m(a2.span, { className: "token operator", children: "=" }), " ", m(a2.span, { className: "token punctuation", children: "(" }), "e", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "target" }), " ", m(a2.span, { className: "token keyword module", children: "as" }), " ", m(a2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "value" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n          ", m(a2.span, { className: "token punctuation", children: "}" }), m(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", m(a2.span, { className: "token punctuation", children: "/>" })] }), "\n      ", m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: "," }), "\n    ", m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n  ", m(a2.span, { className: "token punctuation", children: "}" }), m(a2.span, { className: "token punctuation", children: "," }), "\n", m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n\n", m(a2.span, { className: "token keyword module", children: "export" }), " ", m(a2.span, { className: "token keyword module", children: "default" }), " ", m(a2.span, { className: "token function", children: "component" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token punctuation", children: "{" }), "\n  ", m(a2.span, { className: "token keyword", children: "const" }), " inputValue ", m(a2.span, { className: "token operator", children: "=" }), " ", m(a2.span, { className: "token function", children: "ref" }), m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token string", children: '"default"' }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", m(a2.span, { className: "token keyword control-flow", children: "return" }), " ", m(a2.span, { className: "token punctuation", children: "(" }), m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token punctuation", children: "(" }), "\n    ", k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "<" }), "div"] }), m(a2.span, { className: "token punctuation", children: ">" })] }), m(a2.span, { className: "token plain-text", children: "\n      " }), k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", m(a2.span, { className: "token attr-name", children: "style" }), k(a2.span, { className: "token script language-javascript", children: [m(a2.span, { className: "token script-punctuation punctuation", children: "=" }), m(a2.span, { className: "token punctuation", children: "{" }), m(a2.span, { className: "token punctuation", children: "{" }), " display", m(a2.span, { className: "token operator", children: ":" }), " ", m(a2.span, { className: "token string", children: '"flex"' }), m(a2.span, { className: "token punctuation", children: "," }), " gap", m(a2.span, { className: "token operator", children: ":" }), " ", m(a2.span, { className: "token string", children: '"1rem"' }), " ", m(a2.span, { className: "token punctuation", children: "}" }), m(a2.span, { className: "token punctuation", children: "}" })] }), m(a2.span, { className: "token punctuation", children: ">" })] }), m(a2.span, { className: "token plain-text", children: "\n        " }), k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "<" }), m(a2.span, { className: "token class-name", children: "TextDebounceInput" })] }), "\n          ", m(a2.span, { className: "token attr-name", children: "value" }), k(a2.span, { className: "token script language-javascript", children: [m(a2.span, { className: "token script-punctuation punctuation", children: "=" }), m(a2.span, { className: "token punctuation", children: "{" }), "inputValue", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "value" }), m(a2.span, { className: "token punctuation", children: "}" })] }), "\n          ", m(a2.span, { className: "token attr-name", children: "onValueChange" }), k(a2.span, { className: "token script language-javascript", children: [m(a2.span, { className: "token script-punctuation punctuation", children: "=" }), m(a2.span, { className: "token punctuation", children: "{" }), m(a2.span, { className: "token punctuation", children: "(" }), "value", m(a2.span, { className: "token punctuation", children: ")" }), " ", m(a2.span, { className: "token arrow operator", children: "=>" }), " ", m(a2.span, { className: "token punctuation", children: "{" }), "\n            inputValue", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "value" }), " ", m(a2.span, { className: "token operator", children: "=" }), " value", m(a2.span, { className: "token punctuation", children: ";" }), "\n          ", m(a2.span, { className: "token punctuation", children: "}" }), m(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", m(a2.span, { className: "token punctuation", children: "/>" })] }), m(a2.span, { className: "token plain-text", children: "\n        " }), k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "<" }), "div"] }), m(a2.span, { className: "token punctuation", children: ">" })] }), m(a2.span, { className: "token plain-text", children: "Inputted: " }), m(a2.span, { className: "token punctuation", children: "{" }), "inputValue", m(a2.span, { className: "token punctuation", children: "." }), m(a2.span, { className: "token property-access", children: "value" }), m(a2.span, { className: "token punctuation", children: "}" }), k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "</" }), "div"] }), m(a2.span, { className: "token punctuation", children: ">" })] }), m(a2.span, { className: "token plain-text", children: "\n      " }), k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "</" }), "div"] }), m(a2.span, { className: "token punctuation", children: ">" })] }), m(a2.span, { className: "token plain-text", children: "\n    " }), k(a2.span, { className: "token tag", children: [k(a2.span, { className: "token tag", children: [m(a2.span, { className: "token punctuation", children: "</" }), "div"] }), m(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n", m(a2.span, { className: "token punctuation", children: "}" }), m(a2.span, { className: "token punctuation", children: ")" }), m(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function U() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: a2 } = n2.components || {};
  return a2 ? m(a2, { ...n2, children: m(T, { ...n2 }) }) : T(n2);
}
let E = Object.assign(g(() => () => y(U, { components: { codeblockd4735e3a: D } })), { displayName: "RxInVueDefault" });
export {
  E as default
};
