import { j as n, g as a, F as e, b as s, d as c, h as t } from "./lib--nodepkg-vue-jsx-runtime.CEFt0iM_.chunk.js";
import { c as l, F as o, r as i } from "./lib--nodepkg-vuekit.DB5BTWky.chunk.js";
import { T as r, B as p, b as d, c as u, P as m, d as h, t as k, s as N, v as g, a as y } from "./lib--nodepkg-vueuikit.UEJ3QS1S.chunk.js";
import { B as f, A as x, e as b } from "./lib--nodepkg-typedef.DdnEDJY6.chunk.js";
import { D as v } from "./webapp-vuekit-layout.BowFt-km.chunk.js";
import { c as w } from "./vendor--copy-to-clipboard.0-XIsMJU.chunk.js";
let j = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(l(() => {
  let s2 = r.use();
  return () => n(e, { children: Object.keys(s2.token.elevation.tokens).map((e2) => n(p, { sx: { mt: 16, p: 16, rounded: "lg", transitionDuration: "md4", transitionTimingFunction: "standard", shadow: e2, _hover: { shadow: `${1 + parseInt(e2)}` } }, children: a("div", { children: ["Elevation ", e2] }) }, e2)) });
}), { displayName: "ElevationDefault" }) }, Symbol.toStringTag, { value: "Module" })), O = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(l(() => {
  let e2 = r.use();
  return () => a(p, { sx: { display: "flex", gap: 16, flexDirection: "column" }, children: [n("div", { children: "点击下载，通过 Figma Tokens 全量导入文件" }), n("pre", { onClick: () => {
    !function(n2, a2) {
      let e3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "application/json", s2 = document.createElement("a"), c2 = new Blob([n2], { type: e3 }), t2 = URL.createObjectURL(c2);
      s2.href = t2, s2.download = a2, document.body.appendChild(s2), s2.click(), setTimeout(() => {
        document.body.removeChild(s2), window.URL.revokeObjectURL(t2);
      }, 0);
    }(JSON.stringify(e2.toFigmaTokens(), null, 2), `tokens.${(/* @__PURE__ */ new Date()).getTime()}.json`);
  }, children: n("code", { children: JSON.stringify(e2.toFigmaTokens(), null, 2) }) })] });
}), { displayName: "FigmaTokensDefault" }) }, Symbol.toStringTag, { value: "Module" })), S = { 0: true, 10: true, 20: true, 30: true, 40: true, 50: true, 60: true, 70: true, 80: true, 90: true, 95: true, 100: true }, $ = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(l(() => () => n(e, { children: ["light", "dark"].map((e2) => a("div", { "data-theme": e2, children: [a(p, { component: "h1", sx: { textStyle: "sys.headline-medium", pb: 8, mt: 16 }, children: [f(e2), " Scheme"] }), a(p, { sx: { display: "flex", flexDirection: "column", gap: 16 }, children: [n(p, { sx: { display: "flex", flexWrap: "wrap", gap: 16 }, children: ["primary", "secondary", "tertiary", "error", "warning", "success"].map((e3) => a(p, { sx: { flex: 1, minW: 1 / 4, display: "flex", alignItems: "stretch" }, children: [n(p, { sx: { flex: 1, display: "flex", flexDirection: "column" }, children: ["", "-container"].map((s2) => a(o, { children: [n(p, { sx: { bgColor: `sys.${e3}${s2}`, color: `sys.on-${e3}${s2}`, p: 8, flex: 3 }, children: `${e3}${s2}` }), n(p, { sx: { color: `sys.${e3}${s2}`, bgColor: `sys.on-${e3}${s2}`, p: 8, flex: 1 }, children: `on-${e3}${s2}` })] }, s2)) }), n(p, { sx: { display: "flex", flexDirection: "column" }, children: x(S, (n2, s2) => a(p, { sx: { color: `${e3}.${parseInt(s2) > 50 ? 0 : 100}`, bgColor: `${e3}.${s2}`, w: 60, p: 8, textAlign: "right" }, children: [".", s2] })) })] }, e3)) }), a("div", { children: [n(p, { sx: { display: "flex", "& > *": { width: 1 / 3 } }, children: ["-dim", "", "-bright"].map((a2) => n(p, { sx: { color: "sys.on-surface", bgColor: `sys.surface${a2}`, height: 80, p: 8 }, children: `surface${a2}` })) }), n(p, { sx: { display: "flex", "& > *": { width: 1 / 4 } }, children: ["-lowest", "-low", "", "-high", "-highest"].map((a2) => n(p, { sx: { color: "sys.on-surface", bgColor: `sys.surface-container${a2}`, height: 80, p: 8 }, children: `surface-container${a2}` })) }), n(p, { sx: { display: "flex", "& > *": { width: 1 / 4 } }, children: ["on-surface", "on-surface-variant", "outline", "outline-variant"].map((a2) => n(p, { sx: { color: a2.includes("outline-variant") ? "sys.inverse-surface" : "sys.inverse-on-surface", bgColor: `sys.${a2}`, height: 80, p: 8 }, children: a2 })) }), n(p, { sx: { display: "flex" }, children: x(S, (n2, e3) => a(p, { sx: { color: `neutral.${parseInt(e3) > 50 ? 0 : 100}`, bgColor: `neutral.${e3}`, flex: 1, p: 8, textAlign: "right" }, children: [".", e3] })) })] })] })] }, e2)) })), { displayName: "ColorSchemeDefault" }) }, Symbol.toStringTag, { value: "Module" })), C = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(l(() => {
  let e2 = v.use(), s2 = i();
  return () => {
    let c2 = d.fromColors(e2.value.seed);
    return a(p, { ref: s2, sx: { display: "flex", flexDirection: "column", gap: 24 }, children: [a(p, { sx: { display: "flex", gap: 56 }, children: [n(p, { sx: { display: "flex", flexDirection: "column" }, children: x(e2.value.seed, (s3, c3) => a(p, { sx: { flex: 1, display: "flex", alignItems: "center", gap: 16 }, children: [n(p, { sx: { flex: 1 }, children: c3 }), n("input", { type: "color", value: s3, onChange: (n2) => {
      e2.next((a2) => {
        a2.seed[c3] = n2.target.value;
      });
    } })] })) }), n(p, { sx: { display: "flex", flexWrap: "wrap", gap: 16 }, children: x(e2.value.rules, (s3, t2) => {
      let [l2, o2, i2] = s3;
      return a(p, { sx: { display: "flex", alignItems: "center", width: "30%" }, children: [n(p, { sx: { flex: 1 }, children: t2 }), a(p, { sx: { flex: 1, display: "flex", gap: 4, "& input": { width: "40%", border: "1px solid", borderColor: "sys.outline" } }, children: [n("input", { type: "number", value: o2, max: 100, min: 0, style: { backgroundColor: d.toHEX(c2.seeds[l2].tone(o2)), color: o2 > 50 ? "black" : "white" }, "data-color": d.toHEX(c2.seeds[l2].tone(o2)), "data-theme": "dark", onChange: (n2) => {
        try {
          let a2 = parseInt(n2.target.value);
          e2.next((n3) => {
            n3.rules[t2] = [l2, a2, i2];
          });
        } catch (n3) {
        }
      } }), n("input", { type: "number", max: 100, min: 0, value: i2, style: { backgroundColor: d.toHEX(c2.seeds[l2].tone(i2)), color: i2 > 50 ? "black" : "white" }, "data-color": d.toHEX(c2.seeds[l2].tone(i2)), "data-theme": "light", onChange: (n2) => {
        try {
          let a2 = parseInt(n2.target.value);
          e2.next((n3) => {
            n3.rules[t2] = [l2, o2, a2];
          });
        } catch (n3) {
        }
      } })] })] });
    }) })] }), n(p, { sx: { display: "flex", gap: 16, "& > *": { flex: 1 } }, children: n("pre", { onClick: () => w(JSON.stringify(e2.value)), children: n("code", { children: JSON.stringify(e2.value, null, 2) }) }) })] });
  };
}), { displayName: "ColorPaletteDefault" }) }, Symbol.toStringTag, { value: "Module" })), _ = Object.assign(l(() => {
  let e2 = s(false), c2 = u((n2) => {
    let { state: a2 } = n2;
    a2.styles.popper.width = `${a2.rects.reference.width}px`;
  }, { name: "sameWidth", phase: "beforeWrite", requires: ["computeStyles"] });
  return () => n(m, { isOpen: e2.value, onClickOutside: () => e2.value = false, placement: "bottom-start", modifiers: [c2], $content: a(p, { sx: { containerStyle: "sys.on-surface" }, children: ["Popper ", `${e2.value}`, "!"] }), children: n(p, { sx: { p: 4 }, component: "button", onClick: () => e2.value = !e2.value, children: "Click Trigger Popper" }) });
}), { displayName: "PopperMdCodeBlockd4735E3ADefault" }), B = Object.assign(l(() => {
  let a2 = s(false);
  return () => n(m, { isOpen: a2.value, $content: n(p, { sx: { containerStyle: "sys.on-surface" }, children: "Popper Content!" }), children: n(p, { component: "button", sx: { p: 4 }, onMouseover: () => a2.value = true, onMouseout: () => a2.value = false, children: "Popper Trigger" }) });
}), { displayName: "PopperMdCodeBlocke7F6C011Default" }), P = h({ from: { opacity: 0 }, to: { opacity: 1 }, duration: k.duration.md1, easing: k.easing.standard.accelerate }, { from: { opacity: 1 }, to: { opacity: 0 }, duration: k.duration.sm4, easing: k.easing.standard.decelerate }), T = l(() => {
  let e2 = s(true);
  return () => n(m, { isOpen: e2.value, $transition: (a2) => {
    let { content: e3 } = a2;
    return n(D, { children: e3 });
  }, $content: a(p, { sx: { containerStyle: "sys.on-surface", shadow: "2", py: 2, px: 4, rounded: "sm" }, children: ["Popper ", `${e2.value}`, "!"] }), children: n(p, { sx: { p: 4 }, component: "button", onMouseover: () => e2.value = true, onMouseout: () => e2.value = false, children: "Animated Popper" }) });
}), D = Object.assign(P, { displayName: "FadeInOutTransition" }), M = Object.assign(T, { displayName: "PopperMdCodeBlock4A44Dc15Default" });
function I(s2) {
  let c2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblockd4735e3a: "codeblockd4735e3a", codeblocke7f6c011: "codeblocke7f6c011", div: "div", h2: "h2", pre: "pre", span: "span", ...s2.components };
  return a(e, { children: [n(c2.h2, { children: "Normal Popper" }), "\n", a(c2.div, { "data-example": "", children: [n(c2.div, { "data-example-container": "", children: n(c2.codeblockd4735e3a, {}) }), n(c2.pre, { className: "language-tsx", children: a(c2.code, { className: "language-tsx", children: [n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " component ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " ", n(c2.span, { className: "token maybe-class-name", children: "Box" }), n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token maybe-class-name", children: "Popper" }), n(c2.span, { className: "token punctuation", children: "," }), " createPopperModifier ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " ref ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"vue"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword module", children: "default" }), " ", n(c2.span, { className: "token function", children: "component" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n  ", n(c2.span, { className: "token keyword", children: "const" }), " isOpen ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "ref" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token boolean", children: "false" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n  ", n(c2.span, { className: "token keyword", children: "const" }), " modifier ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "createPopperModifier" }), n(c2.span, { className: "token punctuation", children: "(" }), "\n    ", n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "{" }), " state ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n      state", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "styles" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "popper" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "width" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", a(c2.span, { className: "token template-string", children: [n(c2.span, { className: "token template-punctuation string", children: "`" }), a(c2.span, { className: "token interpolation", children: [n(c2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "state", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "rects" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "reference" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "width" }), n(c2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), n(c2.span, { className: "token string", children: "px" }), n(c2.span, { className: "token template-punctuation string", children: "`" })] }), n(c2.span, { className: "token punctuation", children: ";" }), "\n    ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    ", n(c2.span, { className: "token punctuation", children: "{" }), "\n      name", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sameWidth"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n      phase", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"beforeWrite"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n      requires", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token punctuation", children: "[" }), n(c2.span, { className: "token string", children: '"computeStyles"' }), n(c2.span, { className: "token punctuation", children: "]" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n  ", n(c2.span, { className: "token keyword control-flow", children: "return" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "\n    ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "isOpen" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "onClickOutside" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token boolean", children: "false" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "placement" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token string", children: '"bottom-start"' }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "modifiers" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "[" }), "modifier", n(c2.span, { className: "token punctuation", children: "]" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "$content" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), "\n        ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), " ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " containerStyle", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sys.on-surface"' }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n          Popper " }), n(c2.span, { className: "token punctuation", children: "{" }), a(c2.span, { className: "token template-string", children: [n(c2.span, { className: "token template-punctuation string", children: "`" }), a(c2.span, { className: "token interpolation", children: [n(c2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), n(c2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), n(c2.span, { className: "token template-punctuation string", children: "`" })] }), n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token plain-text", children: "!\n        " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n      ", n(c2.span, { className: "token punctuation", children: "}" })] }), "\n    ", n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " p", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "4" }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "component" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token string", children: '"button"' }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "onClick" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token operator", children: "!" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n        Click Trigger Popper\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n    " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Popper" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n  ", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", n(c2.h2, { children: "Hovered Popper" }), "\n", a(c2.div, { "data-example": "", children: [n(c2.div, { "data-example-container": "", children: n(c2.codeblocke7f6c011, {}) }), n(c2.pre, { className: "language-tsx", children: a(c2.code, { className: "language-tsx", children: [n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " ref ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"vue"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " component ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " ", n(c2.span, { className: "token maybe-class-name", children: "Box" }), n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token maybe-class-name", children: "Popper" }), " ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword module", children: "default" }), " ", n(c2.span, { className: "token function", children: "component" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n  ", n(c2.span, { className: "token keyword", children: "const" }), " isOpen ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "ref" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token boolean", children: "false" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n  ", n(c2.span, { className: "token keyword control-flow", children: "return" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "\n    ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "isOpen" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "$content" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), "\n        ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), " ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " containerStyle", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sys.on-surface"' }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "Popper Content!" }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n      ", n(c2.span, { className: "token punctuation", children: "}" })] }), "\n    ", n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "component" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token string", children: '"button"' }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " p", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "4" }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "onMouseover" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token boolean", children: "true" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "onMouseout" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token boolean", children: "false" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n        Popper Trigger\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n    " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Popper" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n  ", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", n(c2.h2, { children: "Animated" }), "\n", a(c2.div, { "data-example": "", children: [n(c2.div, { "data-example-container": "", children: n(c2.codeblock4a44dc15, {}) }), n(c2.pre, { className: "language-tsx", children: a(c2.code, { className: "language-tsx", children: [n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " ref ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"vue"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " component ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), "\n  ", n(c2.span, { className: "token maybe-class-name", children: "Box" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  defineTransition", n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token maybe-class-name", children: "Popper" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  transition", n(c2.span, { className: "token punctuation", children: "," }), "\n  triangle", n(c2.span, { className: "token punctuation", children: "," }), "\n", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword", children: "const" }), " ", n(c2.span, { className: "token maybe-class-name", children: "FadeInOutTransition" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "defineTransition" }), n(c2.span, { className: "token punctuation", children: "(" }), "\n  ", n(c2.span, { className: "token punctuation", children: "{" }), "\n    ", n(c2.span, { className: "token keyword module", children: "from" }), n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n      opacity", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "0" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    to", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n      opacity", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "1" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    duration", n(c2.span, { className: "token operator", children: ":" }), " transition", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "duration" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "md1" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    easing", n(c2.span, { className: "token operator", children: ":" }), " transition", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "easing" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "standard" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "accelerate" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token punctuation", children: "{" }), "\n    ", n(c2.span, { className: "token keyword module", children: "from" }), n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n      opacity", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "1" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    to", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n      opacity", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "0" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    duration", n(c2.span, { className: "token operator", children: ":" }), " transition", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "duration" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "sm4" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    easing", n(c2.span, { className: "token operator", children: ":" }), " transition", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "easing" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "standard" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "decelerate" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword module", children: "default" }), " ", n(c2.span, { className: "token function", children: "component" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n  ", n(c2.span, { className: "token keyword", children: "const" }), " isOpen ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "ref" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token boolean", children: "true" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n  ", n(c2.span, { className: "token keyword control-flow", children: "return" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "\n    ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "isOpen" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "$transition" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "{" }), " content ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "\n        ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "FadeInOutTransition" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token punctuation", children: "{" }), "content", n(c2.span, { className: "token punctuation", children: "}" }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "FadeInOutTransition" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n      ", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token attr-name", children: "$content" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), "\n        ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), "\n          ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), "\n            containerStyle", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sys.on-surface"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n            shadow", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"2"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n            py", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "2" }), n(c2.span, { className: "token punctuation", children: "," }), "\n            px", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "4" }), n(c2.span, { className: "token punctuation", children: "," }), "\n            rounded", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sm"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n          ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n          Popper " }), n(c2.span, { className: "token punctuation", children: "{" }), a(c2.span, { className: "token template-string", children: [n(c2.span, { className: "token template-punctuation string", children: "`" }), a(c2.span, { className: "token interpolation", children: [n(c2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), n(c2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), n(c2.span, { className: "token template-punctuation string", children: "`" })] }), n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token plain-text", children: "!\n        " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n      ", n(c2.span, { className: "token punctuation", children: "}" })] }), "\n    ", n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " p", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "4" }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "component" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token string", children: '"button"' }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "onMouseover" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token boolean", children: "true" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n        ", n(c2.span, { className: "token attr-name", children: "onMouseout" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "isOpen", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token property-access", children: "value" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token boolean", children: "false" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "}" })] }), "\n      ", n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n        Animated Popper\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n    " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Popper" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n  ", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function F() {
  let a2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = a2.components || {};
  return e2 ? n(e2, { ...a2, children: n(I, { ...a2 }) }) : I(a2);
}
let z = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(c(() => () => t(F, { components: { codeblockd4735e3a: _, codeblocke7f6c011: B, codeblock4a44dc15: M } })), { displayName: "PopperDefault" }) }, Symbol.toStringTag, { value: "Module" })), W = N("button", { disabled: b().optional() })({ bg: "none", outline: "none", border: "none", px: 16, h: 40, rounded: "md", color: "sys.primary", bgColor: g("sys.primary", y(0.08)), _disabled: { color: g("sys.on-surface", y(0.12)), bgColor: g("sys.on-surface", y(0.08)) } }), E = () => a(p, { sx: { display: "flex", gap: 8 }, children: [n(A, { children: "按钮" }), n(A, { disabled: true, children: "按钮" })] }), A = Object.assign(W, { displayName: "Button" }), H = Object.assign(l(() => () => n(p, { sx: { display: "flex", padding: 10, containerStyle: "sys.primary" }, children: n(p, { sx: { containerStyle: "sys.surface-container" }, component: "button", children: "Hi 111" }) })), { displayName: "IndexMdCodeBlock785F3Ec7Default" });
function U(s2) {
  let c2 = { a: "a", code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock785f3ec7: "codeblock785f3ec7", div: "div", em: "em", h2: "h2", h3: "h3", li: "li", p: "p", pre: "pre", span: "span", strong: "strong", ul: "ul", ...s2.components };
  return a(e, { children: [a(c2.p, { children: ["设计理念沿用 ", n(c2.a, { href: "https://m3.material.io/", children: "Material 3" })] }), "\n", n(c2.p, { children: "这里仅为适配该设计理念，抽象 Design System, 方便开发：" }), "\n", a(c2.p, { children: ["所有的 Design Token 将声明为 ", n(c2.code, { children: "css var" }), " (", n(c2.a, { href: "https://developer.mozilla.org/en-US/docs/Web/CSS/--*", children: "Custom properties" }), "),\n可同时支持在 ", n(c2.code, { children: "css-in-js" }), " 和 ", n(c2.code, { children: "raw css" }), " 中使用。"] }), "\n", n(c2.h2, { children: n(c2.code, { children: "css-in-js" }) }), "\n", n(c2.p, { children: "TypeScript 的帮助下，还会提供准确的 Design Token 值. 如：" }), "\n", a(c2.div, { "data-example": "", children: [n(c2.div, { "data-example-container": "", children: n(c2.codeblock4a44dc15, {}) }), n(c2.pre, { className: "language-tsx", children: a(c2.code, { className: "language-tsx", children: [n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " ", n(c2.span, { className: "token maybe-class-name", children: "Box" }), n(c2.span, { className: "token punctuation", children: "," }), " alpha", n(c2.span, { className: "token punctuation", children: "," }), " styled", n(c2.span, { className: "token punctuation", children: "," }), " variant ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " t ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword", children: "const" }), " ", n(c2.span, { className: "token maybe-class-name", children: "Button" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "styled" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token string", children: '"button"' }), n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n  disabled", n(c2.span, { className: "token operator", children: ":" }), " t", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token method function property-access", children: "boolean" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token method function property-access", children: "optional" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "," }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "{" }), "\n  bg", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"none"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n  outline", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"none"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n  border", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"none"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n  px", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "16" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  h", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "40" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  rounded", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"md"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n\n  ", n(c2.span, { className: "token comment", children: "// 利用 TypeScript 的推导而来，且非 color 属性无该值" }), "\n  ", n(c2.span, { className: "token comment", children: "// 实际将转换为 var(--vk-color-sys-primary)" }), "\n  ", n(c2.span, { className: "token comment", children: "// sys-* 的 color 还会随暗黑/普通主题进行切换" }), "\n  color", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sys.primary"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n\n  ", n(c2.span, { className: "token comment", children: "// color 变种" }), "\n  ", n(c2.span, { className: "token comment", children: "// 实际将转换为 rbga(var(--vk-color-sys-primary-rgb) / 0.08)" }), "\n  bgColor", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token function", children: "variant" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token string", children: '"sys.primary"' }), n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token function", children: "alpha" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token number", children: "0.08" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "," }), "\n\n  ", n(c2.span, { className: "token comment", children: "// 通常情况下，组件 props 将转换成 data-<prop> 作为 attr" }), "\n  ", n(c2.span, { className: "token comment", children: "// 即： <Button disabled/>  =>  <button data-disabled=true />" }), "\n  ", n(c2.span, { className: "token comment", children: "// 同理，在自定义转换规则中，也建议如下做类似的转换，避免动态创建 CSSObject" }), "\n  _disabled", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n    color", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token function", children: "variant" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token string", children: '"sys.on-surface"' }), n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token function", children: "alpha" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token number", children: "0.12" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "," }), "\n    bgColor", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token function", children: "variant" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token string", children: '"sys.on-surface"' }), n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token function", children: "alpha" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token number", children: "0.08" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "," }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword module", children: "default" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n  ", n(c2.span, { className: "token keyword control-flow", children: "return" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "\n    ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), " ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " display", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"flex"' }), n(c2.span, { className: "token punctuation", children: "," }), " gap", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "8" }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Button" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "按钮" }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Button" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n      " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Button" })] }), " ", n(c2.span, { className: "token attr-name", children: "disabled" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token boolean", children: "true" }), n(c2.span, { className: "token punctuation", children: "}" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "按钮" }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Button" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n    " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n  ", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(c2.p, { children: ["不同于其他框架中的 theme 定义，为了更准确的类型推导，需要由 DesignToken 进行创建\n详细请", n(c2.a, { href: "https://github.com/innoai-tech/vuekit/blob/main/nodepkg/vueuikit/src/theming/m3", children: "参考源码" })] }), "\n", a(c2.p, { children: ["虽然底层使用的是 ", n(c2.code, { children: "@emotion/*" }), "，但屏蔽掉了 ", n(c2.code, { children: "array" }), " 等非 CSSObject 值的使用, 初衷是为了更稳定的类型推导。\n另外样式扩展有两种方式"] }), "\n", n(c2.pre, { className: "language-tsx", children: a(c2.code, { className: "language-tsx", children: [n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " t ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " styled", n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword", children: "const" }), " shared", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n  color", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sys.primary"' }), n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token comment", children: "// ..." }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token comment", children: "// 直接通过 extends 复用样式" }), "\n", n(c2.span, { className: "token comment", children: "//" }), "\n", n(c2.span, { className: "token comment", children: "// 组件 props 定义需要重新声明" }), "\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword", children: "const" }), " ", n(c2.span, { className: "token maybe-class-name", children: "ButtonBase" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "styled" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token string", children: '"button"' }), n(c2.span, { className: "token punctuation", children: "," }), " ", n(c2.span, { className: "token punctuation", children: "{" }), "\n  disabled", n(c2.span, { className: "token operator", children: ":" }), " t", n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token method function property-access", children: "boolean" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "." }), n(c2.span, { className: "token method function property-access", children: "optional" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "," }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "{" }), "\n  ", n(c2.span, { className: "token keyword", children: "extends" }), n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token punctuation", children: "[" }), "shared", n(c2.span, { className: "token punctuation", children: "]" }), n(c2.span, { className: "token punctuation", children: "," }), "\n  ", n(c2.span, { className: "token comment", children: "// ..." }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token comment", children: "// 通过 styled 覆写样式" }), "\n", n(c2.span, { className: "token comment", children: "// 可以完全继承 BaseButton 的 props 定义" }), "\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword", children: "const" }), " ", n(c2.span, { className: "token maybe-class-name", children: "Button" }), " ", n(c2.span, { className: "token operator", children: "=" }), " ", n(c2.span, { className: "token function", children: "styled" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token maybe-class-name", children: "ButtonBase" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "{" }), "\n  ", n(c2.span, { className: "token comment", children: "// ..." }), "\n", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n"] }) }), "\n", a(c2.p, { children: ["除 ", n(c2.code, { children: "styled" }), " 外，我们还可以使用 ", n(c2.code, { children: "Box" }), " 进行快速样式定义, 通过 ", n(c2.code, { children: "sx" }), " prop。 并且 ", n(c2.code, { children: "component" }), " prop 支持我们随时切换 tag 或者\n组件，并且其他 props 会随着不同的 component 切换对应 props 类型约束与提示。"] }), "\n", n(c2.p, { children: "同样的，通过 styled 创建的组件也有一样的特性。" }), "\n", a(c2.div, { "data-example": "", children: [n(c2.div, { "data-example-container": "", children: n(c2.codeblock785f3ec7, {}) }), n(c2.pre, { className: "language-tsx", children: a(c2.code, { className: "language-tsx", children: [n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " component ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n", n(c2.span, { className: "token keyword module", children: "import" }), " ", a(c2.span, { className: "token imports", children: [n(c2.span, { className: "token punctuation", children: "{" }), " ", n(c2.span, { className: "token maybe-class-name", children: "Box" }), " ", n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token keyword module", children: "from" }), " ", n(c2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), n(c2.span, { className: "token punctuation", children: ";" }), "\n\n", n(c2.span, { className: "token keyword module", children: "export" }), " ", n(c2.span, { className: "token keyword module", children: "default" }), " ", n(c2.span, { className: "token function", children: "component" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), n(c2.span, { className: "token punctuation", children: ")" }), " ", n(c2.span, { className: "token arrow operator", children: "=>" }), " ", n(c2.span, { className: "token punctuation", children: "(" }), "\n  ", a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), " ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " display", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"flex"' }), n(c2.span, { className: "token punctuation", children: "," }), " padding", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token number", children: "10" }), n(c2.span, { className: "token punctuation", children: "," }), " containerStyle", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sys.primary"' }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n    " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "<" }), n(c2.span, { className: "token class-name", children: "Box" })] }), " ", n(c2.span, { className: "token attr-name", children: "sx" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token punctuation", children: "{" }), " containerStyle", n(c2.span, { className: "token operator", children: ":" }), " ", n(c2.span, { className: "token string", children: '"sys.surface-container"' }), " ", n(c2.span, { className: "token punctuation", children: "}" }), n(c2.span, { className: "token punctuation", children: "}" })] }), " ", n(c2.span, { className: "token attr-name", children: "component" }), a(c2.span, { className: "token script language-javascript", children: [n(c2.span, { className: "token script-punctuation punctuation", children: "=" }), n(c2.span, { className: "token punctuation", children: "{" }), n(c2.span, { className: "token string", children: '"button"' }), n(c2.span, { className: "token punctuation", children: "}" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n      Hi 111\n    " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), n(c2.span, { className: "token plain-text", children: "\n  " }), a(c2.span, { className: "token tag", children: [a(c2.span, { className: "token tag", children: [n(c2.span, { className: "token punctuation", children: "</" }), n(c2.span, { className: "token class-name", children: "Box" })] }), n(c2.span, { className: "token punctuation", children: ">" })] }), "\n", n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ")" }), n(c2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", n(c2.h3, { children: "CSS Selector 简写规则" }), "\n", a(c2.p, { children: ["另外，为了简化 ", n(c2.code, { children: '"&:hover"' }), " ", n(c2.code, { children: "&[aria-current='page']" }), " 等选择器声明，\n提供的如下的简化规则："] }), "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: ["所有名称支持 ", n(c2.em, { children: "下划线命名" }), " 或者 ", n(c2.em, { children: "驼峰命名" }), "，最终都将转换为 ", n(c2.em, { children: "短横小写命名" }), ", ", n(c2.code, { children: "=" }), " 用 ", n(c2.code, { children: "__" }), " 替代"] }), "\n", a(c2.li, { children: [n(c2.code, { children: "_*" }), " 一般表示", n(c2.strong, { children: "状态" }), "，可用值", "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: [n(c2.code, { children: "data-*" }), " 和 ", n(c2.code, { children: "aria-*" }), ", `", "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: ["如 ", n(c2.code, { children: "_aria_current__page" }), "： 等效为 ", n(c2.code, { children: "&[aria-current='page']" }), ","] }), "\n"] }), "\n"] }), "\n", a(c2.li, { children: [n(c2.code, { children: "before" }), "，", n(c2.code, { children: "after" }), " 等", n(c2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements", children: "伪元素" }), ', 需要声明 "$" 表示为元素', "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: ["如 ", n(c2.code, { children: "_$before" }), "： 等效为 ", n(c2.code, { children: "&::before" })] }), "\n"] }), "\n"] }), "\n", a(c2.li, { children: [n(c2.code, { children: "hover" }), ", ", n(c2.code, { children: "focus" }), ", ", n(c2.code, { children: "active" }), ", ", n(c2.code, { children: "disabled" }), " 等", n(c2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes", children: "伪类" }), "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: ["如 ", n(c2.code, { children: "_hover" }), "： 等效为 ", n(c2.code, { children: "&:hover, &.hover, &[data-hover]:not([data-hover='false'])" }), ","] }), "\n"] }), "\n"] }), "\n", a(c2.li, { children: ["以及其他自定义状态", "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: ["如 ", n(c2.code, { children: "_has_icon" }), "： 等效为 ", n(c2.code, { children: "&[data-has-icon]:not([data-has-icon='false'])" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n", a(c2.li, { children: [n(c2.code, { children: "$*" }), " 或 ", n(c2.code, { children: "*$" }), "，一般指代", n(c2.strong, { children: "元素节点" }), ", 可用值为", "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: [n(c2.code, { children: "data-*" }), " 和 ", n(c2.code, { children: "aria-*" }), ", `", "\n", a(c2.ul, { children: ["\n", a(c2.li, { children: ["如 ", n(c2.code, { children: "$data_icon" }), "： 等效为 ", n(c2.code, { children: "&[data-icon]" })] }), "\n", a(c2.li, { children: ["如 ", n(c2.code, { children: "$data_popper_arrow" }), "： 等效为 ", n(c2.code, { children: "&[data-popper-arrow]" })] }), "\n", a(c2.li, { children: ["如 ", n(c2.code, { children: "data_popper_placement__right$" }), "： 等效为 ", n(c2.code, { children: "[data-popper-placement=right] &" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n"] })] });
}
function J() {
  let a2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = a2.components || {};
  return e2 ? n(e2, { ...a2, children: n(U, { ...a2 }) }) : U(a2);
}
let L = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(c(() => () => t(J, { components: { codeblock4a44dc15: E, codeblock785f3ec7: H } })), { displayName: "IndexDefault" }) }, Symbol.toStringTag, { value: "Module" })), R = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(l(() => {
  let s2 = r.use();
  return () => n(e, { children: n(p, { sx: { height: "40vh", display: "flex", flexDirection: "column", flexWrap: "wrap", justifyContent: "space-between", gap: 8 }, children: s2.token.textStyle.tokens.map((e2) => a(p, { sx: { flex: 1, rounded: "md", textStyle: e2, p: 16, border: "2px solid", borderColor: "sys.outline-variant", bgColor: "sys.surface-container", color: "sys.primary", minW: "10vw", whiteSpace: "nowrap", display: "flex", flexDirection: "column", justifyContent: "space-between" }, children: [n(p, { sx: { textStyle: "sys.label-small" }, children: e2 }), n(p, { sx: { flex: 1 } }), n(p, { sx: { py: 16 }, children: "中文测试" })] }, e2)) }) });
}), { displayName: "TypographyDefault" }) }, Symbol.toStringTag, { value: "Module" }));
export {
  C as a,
  $ as c,
  j as e,
  O as f,
  L as i,
  z as p,
  R as t
};
