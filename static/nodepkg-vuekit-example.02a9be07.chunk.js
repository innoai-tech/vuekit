import { c as n, r as a, j as e, q as s, v as t, x as c, z as l, F as o } from "./lib-nodepkg-vuekit.07a3eb77.chunk.js";
import { s as i, f as p, c as r } from "./lib-nodepkg-typedef.cf41082d.chunk.js";
let u = /* @__PURE__ */ n(() => {
  let n2 = /* @__PURE__ */ a(1);
  return () => /* @__PURE__ */ e("div", { style: { display: "flex", gap: "1rem" }, children: [/* @__PURE__ */ e("div", { children: ["Counts: ", n2.value] }, void 0, true, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4b227777.tsx", lineNumber: 9, columnNumber: 7 }, globalThis), /* @__PURE__ */ e("button", { onClick: () => n2.value++, children: "Click To Count" }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4b227777.tsx", lineNumber: 10, columnNumber: 7 }, globalThis)] }, void 0);
}), d = /* @__PURE__ */ Object.assign(u, { displayName: "IndexMdCodeBlock4B227777Default" }), m = /* @__PURE__ */ n({
  // VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）
  // 必须声明，哪怕只是属性名称
  //
  // 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem
  // 类型定义无法转为 Runtime 对象
  // 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证
  // 注意 default 需要在 最后，为了 内部推导
  value: /* @__PURE__ */ i().optional().default("1"),
  type: /* @__PURE__ */ p(["text", "number"]),
  // on[A-Z] 前缀视为 emits
  onValueChange: /* @__PURE__ */ r()
}, (n2, a2) => {
  let { emit: s2 } = a2;
  return () => /* @__PURE__ */ e("input", { value: n2.value, onInput: (n3) => {
    s2("value-change", n3.target.value);
  } }, void 0);
}), k = /* @__PURE__ */ n({
  // $ 前缀视为 slots
  $title: /* @__PURE__ */ r().optional(),
  // renderProp
  $item: /* @__PURE__ */ r().optional(),
  $default: /* @__PURE__ */ r().optional()
}, (n2, a2) => {
  let {} = n2, { slots: s2 } = a2;
  return () => {
    var n3, a3;
    return /* @__PURE__ */ e("dl", { children: [/* @__PURE__ */ e("dt", { children: "default" }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 65, columnNumber: 11 }, globalThis), /* @__PURE__ */ e("dd", { children: null === (n3 = s2.default) || void 0 === n3 ? void 0 : n3.call(s2) }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 66, columnNumber: 11 }, globalThis), /* @__PURE__ */ e("dt", { children: "title" }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 67, columnNumber: 11 }, globalThis), /* @__PURE__ */ e("dd", { children: null === (a3 = s2.title) || void 0 === a3 ? void 0 : a3.call(s2) }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 68, columnNumber: 11 }, globalThis), /* @__PURE__ */ e("dt", { children: "item" }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 69, columnNumber: 11 }, globalThis), /* @__PURE__ */ e("dd", { children: /* @__PURE__ */ [{ label: "1", value: "1" }, { label: "2", value: "2" }].map((n4) => {
      var a4;
      return null === (a4 = s2.item) || void 0 === a4 ? void 0 : a4.call(s2, n4);
    }) }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 70, columnNumber: 11 }, globalThis)] }, void 0);
  };
}), h = /* @__PURE__ */ n(() => {
  let n2 = /* @__PURE__ */ a("");
  return () => /* @__PURE__ */ e(g, { $title: /* @__PURE__ */ e("div", { children: ["Inputted: ", n2.value] }, void 0, true, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 81, columnNumber: 15 }, globalThis), $item: (n3) => /* @__PURE__ */ e("div", { children: n3.label }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 82, columnNumber: 21 }, globalThis), children: /* @__PURE__ */ e(N, { type: "text", onValueChange: (a2) => {
    n2.value = a2;
  } }, void 0, false, { fileName: "/home/runner/work/vuekit/vuekit/nodepkg/vuekit/example/index.md~CodeBlock4a44dc15.tsx", lineNumber: 84, columnNumber: 7 }, globalThis) }, void 0);
}), N = /* @__PURE__ */ Object.assign(m, { displayName: "TextInput" }), g = /* @__PURE__ */ Object.assign(k, { displayName: "List" }), v = /* @__PURE__ */ Object.assign(h, { displayName: "IndexMdCodeBlock4A44Dc15Default" });
function b(n2) {
  let a2 = /* @__PURE__ */ Object.assign({ p: "p", div: "div", codeblock4b227777: "codeblock4b227777", pre: "pre", code: "code", span: "span", ul: "ul", li: "li", a: "a", codeblock4a44dc15: "codeblock4a44dc15" }, n2.components);
  return l(o, { children: [/* @__PURE__ */ c(a2.p, { children: "为了更好的 TypeScript 和 JSX 的支持，重新抽象了定义组件的方式" }), "\n", /* @__PURE__ */ c(a2.p, { children: "一般组件：" }), "\n", /* @__PURE__ */ l(a2.div, { "data-example": "", children: [/* @__PURE__ */ c(a2.div, { "data-example-container": "", children: /* @__PURE__ */ c(a2.codeblock4b227777, {}) }), /* @__PURE__ */ c(a2.pre, { className: "language-tsx", children: /* @__PURE__ */ l(a2.code, { className: "language-tsx", children: [/* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "import" }), " ", /* @__PURE__ */ l(a2.span, { className: "token imports", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), " component ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "from" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "import" }), " ", /* @__PURE__ */ l(a2.span, { className: "token imports", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), " ref ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "from" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"vue"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n\n", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "export" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "default" }), " ", /* @__PURE__ */ c(a2.span, { className: "token function", children: "component" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "const" }), " count ", /* @__PURE__ */ c(a2.span, { className: "token operator", children: "=" }), " ", /* @__PURE__ */ c(a2.span, { className: "token function", children: "ref" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token number", children: "1" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", /* @__PURE__ */ c(a2.span, { className: "token keyword control-flow", children: "return" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "\n    ", /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "style" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), " display", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"flex"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " gap", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"1rem"' }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n      " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "div"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "Counts: " }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "count", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "value" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "div"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n      " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "button"] }), " ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "onClick" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " count", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "value" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "++" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "Click To Count" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "button"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n    " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "div"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", /* @__PURE__ */ c(a2.p, { children: "可复用组件：" }), "\n", /* @__PURE__ */ l(a2.ul, { children: ["\n", /* @__PURE__ */ l(a2.li, { children: [/* @__PURE__ */ c(a2.code, { children: "props" }), " 和 ", /* @__PURE__ */ c(a2.code, { children: "emits" }), " 合并声明，基于 ", /* @__PURE__ */ c(a2.a, { href: "https://zod.dev/", children: "zod" })] }), "\n"] }), "\n", /* @__PURE__ */ l(a2.div, { "data-example": "", children: [/* @__PURE__ */ c(a2.div, { "data-example-container": "", children: /* @__PURE__ */ c(a2.codeblock4a44dc15, {}) }), /* @__PURE__ */ c(a2.pre, { className: "language-tsx", children: /* @__PURE__ */ l(a2.code, { className: "language-tsx", children: [/* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "import" }), " ", /* @__PURE__ */ l(a2.span, { className: "token imports", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), " component", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " t ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "from" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "import" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), " ref", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "type" }), " ", /* @__PURE__ */ c(a2.span, { className: "token class-name", children: /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "VNode" }) }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " ", /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "from" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"vue"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n\n", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "export" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "const" }), " ", /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "TextInput" }), " ", /* @__PURE__ */ c(a2.span, { className: "token operator", children: "=" }), " ", /* @__PURE__ */ c(a2.span, { className: "token function", children: "component" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// 必须声明，哪怕只是属性名称" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "//" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// 类型定义无法转为 Runtime 对象" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// 注意 default 需要在 最后，为了 内部推导" }), "\n    value", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " t", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token method function property-access", children: "string" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token method function property-access", children: "optional" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "default" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token string", children: '"1"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n    type", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " t", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token method function property-access", children: "enums" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "[" }), /* @__PURE__ */ c(a2.span, { className: "token string", children: '"text"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"number"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "]" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// on[A-Z] 前缀视为 emits" }), "\n    onValueChange", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " t", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "custom" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "<" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "v", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token builtin", children: "string" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "void" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: ">" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "props", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), " emit ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// setup" }), "\n\n    ", /* @__PURE__ */ c(a2.span, { className: "token keyword control-flow", children: "return" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "\n      ", /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "value" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "props", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "value" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "onInput" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "e", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n          ", /* @__PURE__ */ c(a2.span, { className: "token function", children: "emit" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token string", children: '"value-change"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "e", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "target" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "as" }), " ", /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "value" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "/>" })] }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n\n", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "export" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "interface" }), " ", /* @__PURE__ */ c(a2.span, { className: "token class-name", children: /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "Option" }) }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n  label", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token builtin", children: "string" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n  value", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token builtin", children: "string" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), "\n\n", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "export" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "const" }), " ", /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "List" }), " ", /* @__PURE__ */ c(a2.span, { className: "token operator", children: "=" }), " ", /* @__PURE__ */ c(a2.span, { className: "token function", children: "component" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// $ 前缀视为 slots" }), "\n    $title", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " t", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "custom" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "<" }), /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: ">" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token method function property-access", children: "optional" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// renderProp" }), "\n    $item", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " t", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "custom" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "<" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "option", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "Option" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "VNode" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: ">" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token method function property-access", children: "optional" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n\n    $", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "default" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " t", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "custom" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "<" }), /* @__PURE__ */ c(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: ">" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token method function property-access", children: "optional" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// 以此避免多插槽时 children slots object 的写法, 且无类型约束，" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token comment", children: "// {{ default: () => VNode, title: () => VNode, item: (option: Option) => VNode }}" }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), " slots ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n      ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "const" }), " options ", /* @__PURE__ */ c(a2.span, { className: "token operator", children: "=" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "[" }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n          label", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"1"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n          value", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"1"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n          label", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"2"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n          value", /* @__PURE__ */ c(a2.span, { className: "token operator", children: ":" }), " ", /* @__PURE__ */ c(a2.span, { className: "token string", children: '"2"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n      ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "]" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n\n      ", /* @__PURE__ */ c(a2.span, { className: "token keyword control-flow", children: "return" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "\n        ", /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "dl"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n          " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "default" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n          " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "slots", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "default" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "?." }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n          " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "title" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n          " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "slots", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "title" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "?." }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n          " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "item" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n          " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "options", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token method function property-access", children: "map" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "option", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " slots", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "item" }), /* @__PURE__ */ c(a2.span, { className: "token operator", children: "?." }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "option", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n        " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "dl"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), "\n      ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "," }), "\n", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n\n", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "export" }), " ", /* @__PURE__ */ c(a2.span, { className: "token keyword module", children: "default" }), " ", /* @__PURE__ */ c(a2.span, { className: "token function", children: "component" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token keyword", children: "const" }), " inputValue ", /* @__PURE__ */ c(a2.span, { className: "token operator", children: "=" }), " ", /* @__PURE__ */ c(a2.span, { className: "token function", children: "ref" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token string", children: '""' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", /* @__PURE__ */ c(a2.span, { className: "token keyword control-flow", children: "return" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "\n    ", /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), /* @__PURE__ */ c(a2.span, { className: "token class-name", children: "List" })] }), "\n      ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "$title" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "div"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "Inputted: " }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "inputValue", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "value" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "div"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "$item" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "o", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), "div"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "o", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "label" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), "div"] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), "\n    ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n      " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "<" }), /* @__PURE__ */ c(a2.span, { className: "token class-name", children: "TextInput" })] }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "type" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ c(a2.span, { className: "token string", children: '"text"' }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token attr-name", children: "onValueChange" }), /* @__PURE__ */ l(a2.span, { className: "token script language-javascript", children: [/* @__PURE__ */ c(a2.span, { className: "token script-punctuation punctuation", children: "=" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "(" }), "value", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), " ", /* @__PURE__ */ c(a2.span, { className: "token arrow operator", children: "=>" }), " ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "{" }), "\n          inputValue", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "." }), /* @__PURE__ */ c(a2.span, { className: "token property-access", children: "value" }), " ", /* @__PURE__ */ c(a2.span, { className: "token operator", children: "=" }), " value", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n        ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "/>" })] }), /* @__PURE__ */ c(a2.span, { className: "token plain-text", children: "\n    " }), /* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ l(a2.span, { className: "token tag", children: [/* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "</" }), /* @__PURE__ */ c(a2.span, { className: "token class-name", children: "List" })] }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n", /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: "}" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ")" }), /* @__PURE__ */ c(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function y() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: a2 } = n2.components || {};
  return a2 ? c(a2, /* @__PURE__ */ Object.assign({}, n2, { children: /* @__PURE__ */ c(b, n2) })) : b(n2);
}
let x = /* @__PURE__ */ s(() => () => t(y, { components: { codeblock4b227777: d, codeblock4a44dc15: v } })), w = /* @__PURE__ */ Object.assign(x, { displayName: "IndexDefault" });
export {
  w as default
};
