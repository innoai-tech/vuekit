import { C as n } from "./nodepkg-vueuikit-example.DmoYVRli.chunk.js";
import { C as e } from "./nodepkg-vueuikit-example.Bs_ysFT2.chunk.js";
import { j as a, a as s } from "./lib--nodepkg-vue-jsx-runtime.DL8fEjf_.chunk.js";
import { l as c, h as t, F as l } from "./lib--nodepkg-vuekit.C4CbSFwU.chunk.js";
function o(n2) {
  let e2 = { a: "a", code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock785f3ec7: "codeblock785f3ec7", div: "div", em: "em", h2: "h2", h3: "h3", li: "li", p: "p", pre: "pre", span: "span", strong: "strong", ul: "ul", ...n2.components };
  return s(l, { children: [s(e2.p, { children: ["设计理念沿用 ", a(e2.a, { href: "https://m3.material.io/", children: "Material 3" })] }), "\n", a(e2.p, { children: "这里仅为适配该设计理念，抽象 Design System, 方便开发：" }), "\n", s(e2.p, { children: ["所有的 Design Token 将声明为 ", a(e2.code, { children: "css var" }), " (", a(e2.a, { href: "https://developer.mozilla.org/en-US/docs/Web/CSS/--*", children: "Custom properties" }), "),\n可同时支持在 ", a(e2.code, { children: "css-in-js" }), " 和 ", a(e2.code, { children: "raw css" }), " 中使用。"] }), "\n", a(e2.h2, { children: a(e2.code, { children: "css-in-js" }) }), "\n", a(e2.p, { children: "TypeScript 的帮助下，还会提供准确的 Design Token 值. 如：" }), "\n", s(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblock4a44dc15, {}) }), a(e2.pre, { className: "language-tsx", children: s(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", s(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), a(e2.span, { className: "token punctuation", children: "," }), " alpha", a(e2.span, { className: "token punctuation", children: "," }), " styled", a(e2.span, { className: "token punctuation", children: "," }), " variant ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", s(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " t ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Button" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "styled" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  disabled", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "boolean" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n  bg", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"none"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  outline", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"none"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  border", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"none"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  px", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "16" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  h", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "40" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  rounded", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"md"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", a(e2.span, { className: "token comment", children: "// 利用 TypeScript 的推导而来，且非 color 属性无该值" }), "\n  ", a(e2.span, { className: "token comment", children: "// 实际将转换为 var(--vk-color-sys-primary)" }), "\n  ", a(e2.span, { className: "token comment", children: "// sys-* 的 color 还会随暗黑/普通主题进行切换" }), "\n  color", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.primary"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", a(e2.span, { className: "token comment", children: "// color 变种" }), "\n  ", a(e2.span, { className: "token comment", children: "// 实际将转换为 rbga(var(--vk-color-sys-primary-rgb) / 0.08)" }), "\n  bgColor", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token function", children: "variant" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"sys.primary"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token function", children: "alpha" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "0.08" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", a(e2.span, { className: "token comment", children: "// 通常情况下，组件 props 将转换成 data-<prop> 作为 attr" }), "\n  ", a(e2.span, { className: "token comment", children: "// 即： <Button disabled/>  =>  <button data-disabled=true />" }), "\n  ", a(e2.span, { className: "token comment", children: "// 同理，在自定义转换规则中，也建议如下做类似的转换，避免动态创建 CSSObject" }), "\n  _disabled", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n    color", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token function", children: "variant" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"sys.on-surface"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token function", children: "alpha" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "0.12" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n    bgColor", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token function", children: "variant" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"sys.on-surface"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token function", children: "alpha" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token number", children: "0.08" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword control-flow", children: "return" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n    ", s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), s(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " display", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"flex"' }), a(e2.span, { className: "token punctuation", children: "," }), " gap", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "8" }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Button" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "按钮" }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Button" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      " }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Button" })] }), " ", a(e2.span, { className: "token attr-name", children: "disabled" }), s(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token boolean", children: "true" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "按钮" }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Button" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", s(e2.p, { children: ["不同于其他框架中的 theme 定义，为了更准确的类型推导，需要由 DesignToken 进行创建\n详细请", a(e2.a, { href: "https://github.com/innoai-tech/vuekit/blob/main/nodepkg/vueuikit/src/theming/m3", children: "参考源码" })] }), "\n", s(e2.p, { children: ["虽然底层使用的是 ", a(e2.code, { children: "@emotion/*" }), "，但屏蔽掉了 ", a(e2.code, { children: "array" }), " 等非 CSSObject 值的使用, 初衷是为了更稳定的类型推导。\n另外样式扩展有两种方式"] }), "\n", a(e2.pre, { className: "language-tsx", children: s(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", s(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " t ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", s(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " styled", a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword", children: "const" }), " shared", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  color", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.primary"' }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token comment", children: "// ..." }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token comment", children: "// 直接通过 extends 复用样式" }), "\n", a(e2.span, { className: "token comment", children: "//" }), "\n", a(e2.span, { className: "token comment", children: "// 组件 props 定义需要重新声明" }), "\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "ButtonBase" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "styled" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "," }), " ", a(e2.span, { className: "token punctuation", children: "{" }), "\n  disabled", a(e2.span, { className: "token operator", children: ":" }), " t", a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "boolean" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "." }), a(e2.span, { className: "token method function property-access", children: "optional" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "," }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token keyword", children: "extends" }), a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token punctuation", children: "[" }), "shared", a(e2.span, { className: "token punctuation", children: "]" }), a(e2.span, { className: "token punctuation", children: "," }), "\n  ", a(e2.span, { className: "token comment", children: "// ..." }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token comment", children: "// 通过 styled 覆写样式" }), "\n", a(e2.span, { className: "token comment", children: "// 可以完全继承 BaseButton 的 props 定义" }), "\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword", children: "const" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Button" }), " ", a(e2.span, { className: "token operator", children: "=" }), " ", a(e2.span, { className: "token function", children: "styled" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token maybe-class-name", children: "ButtonBase" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "{" }), "\n  ", a(e2.span, { className: "token comment", children: "// ..." }), "\n", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) }), "\n", s(e2.p, { children: ["除 ", a(e2.code, { children: "styled" }), " 外，我们还可以使用 ", a(e2.code, { children: "Box" }), " 进行快速样式定义, 通过 ", a(e2.code, { children: "sx" }), " prop。 并且 ", a(e2.code, { children: "component" }), " prop 支持我们随时切换 tag 或者\n组件，并且其他 props 会随着不同的 component 切换对应 props 类型约束与提示。"] }), "\n", a(e2.p, { children: "同样的，通过 styled 创建的组件也有一样的特性。" }), "\n", s(e2.div, { "data-example": "", children: [a(e2.div, { "data-example-container": "", children: a(e2.codeblock785f3ec7, {}) }), a(e2.pre, { className: "language-tsx", children: s(e2.code, { className: "language-tsx", children: [a(e2.span, { className: "token keyword module", children: "import" }), " ", s(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " component ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n", a(e2.span, { className: "token keyword module", children: "import" }), " ", s(e2.span, { className: "token imports", children: [a(e2.span, { className: "token punctuation", children: "{" }), " ", a(e2.span, { className: "token maybe-class-name", children: "Box" }), " ", a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token keyword module", children: "from" }), " ", a(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), a(e2.span, { className: "token punctuation", children: ";" }), "\n\n", a(e2.span, { className: "token keyword module", children: "export" }), " ", a(e2.span, { className: "token keyword module", children: "default" }), " ", a(e2.span, { className: "token function", children: "component" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), a(e2.span, { className: "token punctuation", children: ")" }), " ", a(e2.span, { className: "token arrow operator", children: "=>" }), " ", a(e2.span, { className: "token punctuation", children: "(" }), "\n  ", s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), s(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " display", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"flex"' }), a(e2.span, { className: "token punctuation", children: "," }), " padding", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token number", children: "10" }), a(e2.span, { className: "token punctuation", children: "," }), " containerStyle", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.primary"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n    " }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "<" }), a(e2.span, { className: "token class-name", children: "Box" })] }), " ", a(e2.span, { className: "token attr-name", children: "sx" }), s(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token punctuation", children: "{" }), " containerStyle", a(e2.span, { className: "token operator", children: ":" }), " ", a(e2.span, { className: "token string", children: '"sys.surface-container"' }), " ", a(e2.span, { className: "token punctuation", children: "}" }), a(e2.span, { className: "token punctuation", children: "}" })] }), " ", a(e2.span, { className: "token attr-name", children: "component" }), s(e2.span, { className: "token script language-javascript", children: [a(e2.span, { className: "token script-punctuation punctuation", children: "=" }), a(e2.span, { className: "token punctuation", children: "{" }), a(e2.span, { className: "token string", children: '"button"' }), a(e2.span, { className: "token punctuation", children: "}" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n      Hi 111\n    " }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), a(e2.span, { className: "token plain-text", children: "\n  " }), s(e2.span, { className: "token tag", children: [s(e2.span, { className: "token tag", children: [a(e2.span, { className: "token punctuation", children: "</" }), a(e2.span, { className: "token class-name", children: "Box" })] }), a(e2.span, { className: "token punctuation", children: ">" })] }), "\n", a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ")" }), a(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(e2.h3, { children: "CSS Selector 简写规则" }), "\n", s(e2.p, { children: ["另外，为了简化 ", a(e2.code, { children: '"&:hover"' }), " ", a(e2.code, { children: "&[aria-current='page']" }), " 等选择器声明，\n提供的如下的简化规则："] }), "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: ["所有名称支持 ", a(e2.em, { children: "下划线命名" }), " 或者 ", a(e2.em, { children: "驼峰命名" }), "，最终都将转换为 ", a(e2.em, { children: "短横小写命名" }), ", ", a(e2.code, { children: "=" }), " 用 ", a(e2.code, { children: "__" }), " 替代"] }), "\n", s(e2.li, { children: [a(e2.code, { children: "_*" }), " 一般表示", a(e2.strong, { children: "状态" }), "，可用值", "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: [a(e2.code, { children: "data-*" }), " 和 ", a(e2.code, { children: "aria-*" }), ", `", "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: ["如 ", a(e2.code, { children: "_aria_current__page" }), "： 等效为 ", a(e2.code, { children: "&[aria-current='page']" }), ","] }), "\n"] }), "\n"] }), "\n", s(e2.li, { children: [a(e2.code, { children: "before" }), "，", a(e2.code, { children: "after" }), " 等", a(e2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements", children: "伪元素" }), ', 需要声明 "$" 表示为元素', "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: ["如 ", a(e2.code, { children: "_$before" }), "： 等效为 ", a(e2.code, { children: "&::before" })] }), "\n"] }), "\n"] }), "\n", s(e2.li, { children: [a(e2.code, { children: "hover" }), ", ", a(e2.code, { children: "focus" }), ", ", a(e2.code, { children: "active" }), ", ", a(e2.code, { children: "disabled" }), " 等", a(e2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes", children: "伪类" }), "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: ["如 ", a(e2.code, { children: "_hover" }), "： 等效为 ", a(e2.code, { children: "&:hover, &.hover, &[data-hover]:not([data-hover='false'])" }), ","] }), "\n"] }), "\n"] }), "\n", s(e2.li, { children: ["以及其他自定义状态", "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: ["如 ", a(e2.code, { children: "_has_icon" }), "： 等效为 ", a(e2.code, { children: "&[data-has-icon]:not([data-has-icon='false'])" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n", s(e2.li, { children: [a(e2.code, { children: "$*" }), " 或 ", a(e2.code, { children: "*$" }), "，一般指代", a(e2.strong, { children: "元素节点" }), ", 可用值为", "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: [a(e2.code, { children: "data-*" }), " 和 ", a(e2.code, { children: "aria-*" }), ", `", "\n", s(e2.ul, { children: ["\n", s(e2.li, { children: ["如 ", a(e2.code, { children: "$data_icon" }), "： 等效为 ", a(e2.code, { children: "&[data-icon]" })] }), "\n", s(e2.li, { children: ["如 ", a(e2.code, { children: "$data_popper_arrow" }), "： 等效为 ", a(e2.code, { children: "&[data-popper-arrow]" })] }), "\n", s(e2.li, { children: ["如 ", a(e2.code, { children: "data_popper_placement__right$" }), "： 等效为 ", a(e2.code, { children: "[data-popper-placement=right] &" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n"] })] });
}
function i() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n2.components || {};
  return e2 ? a(e2, { ...n2, children: a(o, { ...n2 }) }) : o(n2);
}
let r = Object.assign(c(() => () => t(i, { components: { codeblock4a44dc15: n, codeblock785f3ec7: e } })), { displayName: "IndexDefault" });
export {
  r as default
};
