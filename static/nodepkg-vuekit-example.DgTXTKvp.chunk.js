import { b as n, j as a, g as e, d as s, h as t, F as c } from "./lib--nodepkg-vue-jsx-runtime.CEFt0iM_.chunk.js";
import { e as l, c as o, o as p, b as i, s as r, f as u, g as d } from "./lib--nodepkg-vuekit.DB5BTWky.chunk.js";
import { s as m, c as h, f as k } from "./lib--nodepkg-typedef.DdnEDJY6.chunk.js";
let N = l({ value: m().optional().default("1"), onValueChange: h() }, (n2, e2) => {
  var s2;
  let { emit: t2 } = e2, c2 = p(null !== (s2 = n2.value) && void 0 !== s2 ? s2 : "");
  return i(c2, u(300), r((n3) => t2("value-change", n3))), i(c2, d((n3) => a("input", { value: n3, onInput: (n4) => {
    c2.value = n4.target.value;
  } })));
}), g = o(() => {
  let s2 = n("default");
  return () => a("div", { children: e("div", { style: { display: "flex", gap: "1rem" }, children: [a(v, { value: s2.value, onValueChange: (n2) => {
    s2.value = n2;
  } }), e("div", { children: ["Inputted: ", s2.value] })] }) });
}), v = Object.assign(N, { displayName: "TextDebounceInput" }), y = Object.assign(g, { displayName: "RxInVueMdCodeBlockd4735E3ADefault" });
function f(n2) {
  let s2 = { a: "a", code: "code", codeblockd4735e3a: "codeblockd4735e3a", div: "div", p: "p", pre: "pre", span: "span", ...n2.components };
  return e(c, { children: [e(s2.p, { children: ["和 ", a(s2.a, { href: "https://rxjs.dev/", children: "rxjs" }), " 集成"] }), "\n", e(s2.div, { "data-example": "", children: [a(s2.div, { "data-example-container": "", children: a(s2.codeblockd4735e3a, {}) }), a(s2.pre, { className: "language-tsx", children: e(s2.code, { className: "language-tsx", children: [a(s2.span, { className: "token keyword module", children: "import" }), " ", e(s2.span, { className: "token imports", children: [a(s2.span, { className: "token punctuation", children: "{" }), "\n  component", a(s2.span, { className: "token punctuation", children: "," }), "\n  component$", a(s2.span, { className: "token punctuation", children: "," }), "\n  rx", a(s2.span, { className: "token punctuation", children: "," }), "\n  observableRef", a(s2.span, { className: "token punctuation", children: "," }), "\n  subscribeUntilUnmount", a(s2.span, { className: "token punctuation", children: "," }), "\n  t", a(s2.span, { className: "token punctuation", children: "," }), "\n  render", a(s2.span, { className: "token punctuation", children: "," }), "\n", a(s2.span, { className: "token punctuation", children: "}" })] }), " ", a(s2.span, { className: "token keyword module", children: "from" }), " ", a(s2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token keyword module", children: "import" }), " ", e(s2.span, { className: "token imports", children: [a(s2.span, { className: "token punctuation", children: "{" }), " ref ", a(s2.span, { className: "token punctuation", children: "}" })] }), " ", a(s2.span, { className: "token keyword module", children: "from" }), " ", a(s2.span, { className: "token string", children: '"vue"' }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token keyword module", children: "import" }), " ", e(s2.span, { className: "token imports", children: [a(s2.span, { className: "token punctuation", children: "{" }), " debounceTime", a(s2.span, { className: "token punctuation", children: "," }), " subscribeOn ", a(s2.span, { className: "token punctuation", children: "}" })] }), " ", a(s2.span, { className: "token keyword module", children: "from" }), " ", a(s2.span, { className: "token string", children: '"rxjs"' }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n", a(s2.span, { className: "token keyword module", children: "export" }), " ", a(s2.span, { className: "token keyword", children: "const" }), " ", a(s2.span, { className: "token maybe-class-name", children: "TextDebounceInput" }), " ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token function", children: "component$" }), a(s2.span, { className: "token punctuation", children: "(" }), "\n  ", a(s2.span, { className: "token punctuation", children: "{" }), "\n    value", a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "string" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "optional" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token keyword module", children: "default" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token string", children: '"1"' }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n    onValueChange", a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "custom" }), a(s2.span, { className: "token operator", children: "<" }), a(s2.span, { className: "token punctuation", children: "(" }), "v", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token builtin", children: "string" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token keyword", children: "void" }), a(s2.span, { className: "token operator", children: ">" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n  ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n  ", a(s2.span, { className: "token punctuation", children: "(" }), "props", a(s2.span, { className: "token punctuation", children: "," }), " ", a(s2.span, { className: "token punctuation", children: "{" }), " emit ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n    ", a(s2.span, { className: "token keyword", children: "const" }), " value$ ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token function", children: "observableRef" }), a(s2.span, { className: "token punctuation", children: "(" }), "props", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), " ", a(s2.span, { className: "token operator", children: "??" }), " ", a(s2.span, { className: "token string", children: '""' }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n    ", a(s2.span, { className: "token function", children: "rx" }), a(s2.span, { className: "token punctuation", children: "(" }), "\n      value$", a(s2.span, { className: "token punctuation", children: "," }), "\n      ", a(s2.span, { className: "token function", children: "debounceTime" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token number", children: "300" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n      ", a(s2.span, { className: "token function", children: "subscribeUntilUnmount" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "(" }), "v", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token function", children: "emit" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token string", children: '"value-change"' }), a(s2.span, { className: "token punctuation", children: "," }), " v", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n    ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n    ", a(s2.span, { className: "token keyword control-flow", children: "return" }), " ", a(s2.span, { className: "token function", children: "rx" }), a(s2.span, { className: "token punctuation", children: "(" }), "\n      value$", a(s2.span, { className: "token punctuation", children: "," }), "\n      ", a(s2.span, { className: "token function", children: "render" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "(" }), "v", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "\n        ", e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n          ", a(s2.span, { className: "token attr-name", children: "value" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), "v", a(s2.span, { className: "token punctuation", children: "}" })] }), "\n          ", a(s2.span, { className: "token attr-name", children: "onInput" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "(" }), "e", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n            value$", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), " ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "e", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "target" }), " ", a(s2.span, { className: "token keyword module", children: "as" }), " ", a(s2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n          ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(s2.span, { className: "token punctuation", children: "/>" })] }), "\n      ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n    ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n  ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n", a(s2.span, { className: "token keyword module", children: "export" }), " ", a(s2.span, { className: "token keyword module", children: "default" }), " ", a(s2.span, { className: "token function", children: "component" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n  ", a(s2.span, { className: "token keyword", children: "const" }), " inputValue ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token function", children: "ref" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token string", children: '"default"' }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(s2.span, { className: "token keyword control-flow", children: "return" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "\n    ", e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n      " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", a(s2.span, { className: "token attr-name", children: "style" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "{" }), " display", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"flex"' }), a(s2.span, { className: "token punctuation", children: "," }), " gap", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"1rem"' }), " ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "}" })] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n        " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), a(s2.span, { className: "token class-name", children: "TextDebounceInput" })] }), "\n          ", a(s2.span, { className: "token attr-name", children: "value" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), "inputValue", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n          ", a(s2.span, { className: "token attr-name", children: "onValueChange" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "(" }), "value", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n            inputValue", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), " ", a(s2.span, { className: "token operator", children: "=" }), " value", a(s2.span, { className: "token punctuation", children: ";" }), "\n          ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(s2.span, { className: "token punctuation", children: "/>" })] }), a(s2.span, { className: "token plain-text", children: "\n        " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "Inputted: " }), a(s2.span, { className: "token punctuation", children: "{" }), "inputValue", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token punctuation", children: "}" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n      " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n    " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function w() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n2.components || {};
  return e2 ? a(e2, { ...n2, children: a(f, { ...n2 }) }) : f(n2);
}
let b = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(s(() => () => t(w, { components: { codeblockd4735e3a: y } })), { displayName: "RxInVueDefault" }) }, Symbol.toStringTag, { value: "Module" })), x = Object.assign(o(() => {
  let s2 = n(1);
  return () => e("div", { style: { display: "flex", gap: "1rem" }, children: [e("div", { children: ["Counts: ", s2.value] }), a("button", { onClick: () => s2.value++, children: "Click To Count" })] });
}), { displayName: "IndexMdCodeBlock4B227777Default" }), j = o({ value: m().optional().default("1"), type: k(["text", "number"]), onValueChange: h() }, (n2, e2) => {
  let { emit: s2 } = e2;
  return () => a("input", { value: n2.value, onInput: (n3) => {
    s2("value-change", n3.target.value);
  } });
}), V = o({ $title: h().optional(), $item: h().optional(), $default: h().optional() }, (n2, s2) => {
  let {} = n2, { slots: t2 } = s2;
  return () => {
    var n3, s3;
    return e("dl", { children: [a("dt", { children: "default" }), a("dd", { children: null === (n3 = t2.default) || void 0 === n3 ? void 0 : n3.call(t2) }), a("dt", { children: "title" }), a("dd", { children: null === (s3 = t2.title) || void 0 === s3 ? void 0 : s3.call(t2) }), a("dt", { children: "item" }), a("dd", { children: [{ label: "1", value: "1" }, { label: "2", value: "2" }].map((n4) => {
      var a2;
      return null === (a2 = t2.item) || void 0 === a2 ? void 0 : a2.call(t2, n4);
    }) })] });
  };
}), C = o(() => {
  let s2 = n("");
  return () => a($, { $title: e("div", { children: ["Inputted: ", s2.value] }), $item: (n2) => a("div", { children: n2.label }), children: a(I, { type: "text", onValueChange: (n2) => {
    s2.value = n2;
  } }) });
}), I = Object.assign(j, { displayName: "TextInput" }), $ = Object.assign(V, { displayName: "List" }), O = Object.assign(C, { displayName: "IndexMdCodeBlock4A44Dc15Default" });
function T(n2) {
  let s2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock4b227777: "codeblock4b227777", div: "div", li: "li", p: "p", pre: "pre", span: "span", ul: "ul", ...n2.components };
  return e(c, { children: [a(s2.p, { children: "为了更好的 TypeScript 和 JSX 的支持，重新抽象了定义组件的方式" }), "\n", a(s2.p, { children: "一般组件：" }), "\n", e(s2.div, { "data-example": "", children: [a(s2.div, { "data-example-container": "", children: a(s2.codeblock4b227777, {}) }), a(s2.pre, { className: "language-tsx", children: e(s2.code, { className: "language-tsx", children: [a(s2.span, { className: "token keyword module", children: "import" }), " ", e(s2.span, { className: "token imports", children: [a(s2.span, { className: "token punctuation", children: "{" }), " component ", a(s2.span, { className: "token punctuation", children: "}" })] }), " ", a(s2.span, { className: "token keyword module", children: "from" }), " ", a(s2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token keyword module", children: "import" }), " ", e(s2.span, { className: "token imports", children: [a(s2.span, { className: "token punctuation", children: "{" }), " ref ", a(s2.span, { className: "token punctuation", children: "}" })] }), " ", a(s2.span, { className: "token keyword module", children: "from" }), " ", a(s2.span, { className: "token string", children: '"vue"' }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n", a(s2.span, { className: "token keyword module", children: "export" }), " ", a(s2.span, { className: "token keyword module", children: "default" }), " ", a(s2.span, { className: "token function", children: "component" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n  ", a(s2.span, { className: "token keyword", children: "const" }), " count ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token function", children: "ref" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token number", children: "1" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(s2.span, { className: "token keyword control-flow", children: "return" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "\n    ", e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", a(s2.span, { className: "token attr-name", children: "style" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "{" }), " display", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"flex"' }), a(s2.span, { className: "token punctuation", children: "," }), " gap", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"1rem"' }), " ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "}" })] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n      " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "Counts: " }), a(s2.span, { className: "token punctuation", children: "{" }), "count", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token punctuation", children: "}" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n      " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "button"] }), " ", a(s2.span, { className: "token attr-name", children: "onClick" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " count", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token operator", children: "++" }), a(s2.span, { className: "token punctuation", children: "}" })] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "Click To Count" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "button"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n    " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", a(s2.p, { children: "可复用组件：" }), "\n", e(s2.ul, { children: ["\n", e(s2.li, { children: [a(s2.code, { children: "props" }), " 和 ", a(s2.code, { children: "emits" }), " 合并声明"] }), "\n"] }), "\n", e(s2.div, { "data-example": "", children: [a(s2.div, { "data-example-container": "", children: a(s2.codeblock4a44dc15, {}) }), a(s2.pre, { className: "language-tsx", children: e(s2.code, { className: "language-tsx", children: [a(s2.span, { className: "token keyword module", children: "import" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), " component", a(s2.span, { className: "token punctuation", children: "," }), " t", a(s2.span, { className: "token punctuation", children: "," }), " ", a(s2.span, { className: "token keyword", children: "type" }), " ", a(s2.span, { className: "token class-name", children: a(s2.span, { className: "token maybe-class-name", children: "VNode" }) }), a(s2.span, { className: "token punctuation", children: "," }), " ", a(s2.span, { className: "token keyword", children: "type" }), " ", a(s2.span, { className: "token class-name", children: a(s2.span, { className: "token maybe-class-name", children: "VNodeChild" }) }), " ", a(s2.span, { className: "token punctuation", children: "}" }), " ", a(s2.span, { className: "token keyword module", children: "from" }), " ", a(s2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token keyword module", children: "import" }), " ", e(s2.span, { className: "token imports", children: [a(s2.span, { className: "token punctuation", children: "{" }), " ref ", a(s2.span, { className: "token punctuation", children: "}" })] }), " ", a(s2.span, { className: "token keyword module", children: "from" }), " ", a(s2.span, { className: "token string", children: '"vue"' }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n", a(s2.span, { className: "token keyword module", children: "export" }), " ", a(s2.span, { className: "token keyword", children: "const" }), " ", a(s2.span, { className: "token maybe-class-name", children: "TextInput" }), " ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token function", children: "component" }), a(s2.span, { className: "token punctuation", children: "(" }), "\n  ", a(s2.span, { className: "token punctuation", children: "{" }), "\n    ", a(s2.span, { className: "token comment", children: "// VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）" }), "\n    ", a(s2.span, { className: "token comment", children: "// 必须声明，哪怕只是属性名称" }), "\n    ", a(s2.span, { className: "token comment", children: "//" }), "\n    ", a(s2.span, { className: "token comment", children: "// 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem" }), "\n    ", a(s2.span, { className: "token comment", children: "// 类型定义无法转为 Runtime 对象" }), "\n    ", a(s2.span, { className: "token comment", children: "// 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证" }), "\n    ", a(s2.span, { className: "token comment", children: "// 注意 default 需要在 最后，为了 内部推导" }), "\n    value", a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "string" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "optional" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token keyword module", children: "default" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token string", children: '"1"' }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n    type", a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "enums" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "[" }), a(s2.span, { className: "token string", children: '"text"' }), a(s2.span, { className: "token punctuation", children: "," }), " ", a(s2.span, { className: "token string", children: '"number"' }), a(s2.span, { className: "token punctuation", children: "]" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n\n    ", a(s2.span, { className: "token comment", children: "// on[A-Z] 前缀视为 emits" }), "\n    onValueChange", a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "custom" }), a(s2.span, { className: "token operator", children: "<" }), a(s2.span, { className: "token punctuation", children: "(" }), "v", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token builtin", children: "string" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token keyword", children: "void" }), a(s2.span, { className: "token operator", children: ">" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n  ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n  ", a(s2.span, { className: "token punctuation", children: "(" }), "props", a(s2.span, { className: "token punctuation", children: "," }), " ", a(s2.span, { className: "token punctuation", children: "{" }), " emit ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n    ", a(s2.span, { className: "token comment", children: "// setup" }), "\n\n    ", a(s2.span, { className: "token keyword control-flow", children: "return" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "\n      ", e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n        ", a(s2.span, { className: "token attr-name", children: "value" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), "props", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(s2.span, { className: "token attr-name", children: "onInput" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "(" }), "e", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n          ", a(s2.span, { className: "token function", children: "emit" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token string", children: '"value-change"' }), a(s2.span, { className: "token punctuation", children: "," }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "e", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "target" }), " ", a(s2.span, { className: "token keyword module", children: "as" }), " ", a(s2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n        ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(s2.span, { className: "token punctuation", children: "/>" })] }), "\n    ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n  ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n", a(s2.span, { className: "token keyword module", children: "export" }), " ", a(s2.span, { className: "token keyword", children: "interface" }), " ", a(s2.span, { className: "token class-name", children: a(s2.span, { className: "token maybe-class-name", children: "Option" }) }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n  label", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token builtin", children: "string" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n  value", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token builtin", children: "string" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token punctuation", children: "}" }), "\n\n", a(s2.span, { className: "token keyword module", children: "export" }), " ", a(s2.span, { className: "token keyword", children: "const" }), " ", a(s2.span, { className: "token maybe-class-name", children: "List" }), " ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token function", children: "component" }), a(s2.span, { className: "token punctuation", children: "(" }), "\n  ", a(s2.span, { className: "token punctuation", children: "{" }), "\n    ", a(s2.span, { className: "token comment", children: "// $ 前缀视为 slots" }), "\n    $title", a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "custom" }), a(s2.span, { className: "token operator", children: "<" }), a(s2.span, { className: "token maybe-class-name", children: "VNodeChild" }), a(s2.span, { className: "token operator", children: ">" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "optional" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n    ", a(s2.span, { className: "token comment", children: "// renderProp" }), "\n    $item", a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "custom" }), a(s2.span, { className: "token operator", children: "<" }), a(s2.span, { className: "token punctuation", children: "(" }), "option", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token maybe-class-name", children: "Option" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token maybe-class-name", children: "VNode" }), a(s2.span, { className: "token operator", children: ">" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "optional" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n\n    $", a(s2.span, { className: "token keyword module", children: "default" }), a(s2.span, { className: "token operator", children: ":" }), " t", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "custom" }), a(s2.span, { className: "token operator", children: "<" }), a(s2.span, { className: "token maybe-class-name", children: "VNodeChild" }), a(s2.span, { className: "token operator", children: ">" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "optional" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "," }), "\n\n    ", a(s2.span, { className: "token comment", children: "// 以此避免多插槽时 children slots object 的写法, 且无类型约束，" }), "\n    ", a(s2.span, { className: "token comment", children: "// {{ default: () => VNode, title: () => VNode, item: (option: Option) => VNode }}" }), "\n  ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n  ", a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), " ", a(s2.span, { className: "token punctuation", children: "{" }), " slots ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), "\n    ", a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n      ", a(s2.span, { className: "token keyword", children: "const" }), " options ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token punctuation", children: "[" }), "\n        ", a(s2.span, { className: "token punctuation", children: "{" }), "\n          label", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"1"' }), a(s2.span, { className: "token punctuation", children: "," }), "\n          value", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"1"' }), a(s2.span, { className: "token punctuation", children: "," }), "\n        ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n        ", a(s2.span, { className: "token punctuation", children: "{" }), "\n          label", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"2"' }), a(s2.span, { className: "token punctuation", children: "," }), "\n          value", a(s2.span, { className: "token operator", children: ":" }), " ", a(s2.span, { className: "token string", children: '"2"' }), a(s2.span, { className: "token punctuation", children: "," }), "\n        ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n      ", a(s2.span, { className: "token punctuation", children: "]" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n      ", a(s2.span, { className: "token keyword control-flow", children: "return" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "\n        ", e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "dl"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n          " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "dt"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "default" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "dt"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n          " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "dd"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token punctuation", children: "{" }), "slots", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token keyword module", children: "default" }), a(s2.span, { className: "token operator", children: "?." }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "}" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "dd"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n          " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "dt"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "title" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "dt"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n          " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "dd"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token punctuation", children: "{" }), "slots", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "title" }), a(s2.span, { className: "token operator", children: "?." }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "}" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "dd"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n          " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "dt"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "item" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "dt"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n          " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "dd"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token punctuation", children: "{" }), "options", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token method function property-access", children: "map" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "(" }), "option", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " slots", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "item" }), a(s2.span, { className: "token operator", children: "?." }), a(s2.span, { className: "token punctuation", children: "(" }), "option", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: "}" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "dd"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n        " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "dl"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), "\n      ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n    ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "," }), "\n", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n", a(s2.span, { className: "token keyword module", children: "export" }), " ", a(s2.span, { className: "token keyword module", children: "default" }), " ", a(s2.span, { className: "token function", children: "component" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n  ", a(s2.span, { className: "token keyword", children: "const" }), " inputValue ", a(s2.span, { className: "token operator", children: "=" }), " ", a(s2.span, { className: "token function", children: "ref" }), a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token string", children: '""' }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n\n  ", a(s2.span, { className: "token keyword control-flow", children: "return" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "(" }), "\n    ", e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), a(s2.span, { className: "token class-name", children: "List" })] }), "\n      ", a(s2.span, { className: "token attr-name", children: "$title" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "Inputted: " }), a(s2.span, { className: "token punctuation", children: "{" }), "inputValue", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), a(s2.span, { className: "token punctuation", children: "}" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(s2.span, { className: "token attr-name", children: "$item" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "(" }), "o", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token punctuation", children: "{" }), "o", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "label" }), a(s2.span, { className: "token punctuation", children: "}" }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), "div"] }), a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n    ", a(s2.span, { className: "token punctuation", children: ">" })] }), a(s2.span, { className: "token plain-text", children: "\n      " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "<" }), a(s2.span, { className: "token class-name", children: "TextInput" })] }), "\n        ", a(s2.span, { className: "token attr-name", children: "type" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token string", children: '"text"' }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n        ", a(s2.span, { className: "token attr-name", children: "onValueChange" }), e(s2.span, { className: "token script language-javascript", children: [a(s2.span, { className: "token script-punctuation punctuation", children: "=" }), a(s2.span, { className: "token punctuation", children: "{" }), a(s2.span, { className: "token punctuation", children: "(" }), "value", a(s2.span, { className: "token punctuation", children: ")" }), " ", a(s2.span, { className: "token arrow operator", children: "=>" }), " ", a(s2.span, { className: "token punctuation", children: "{" }), "\n          inputValue", a(s2.span, { className: "token punctuation", children: "." }), a(s2.span, { className: "token property-access", children: "value" }), " ", a(s2.span, { className: "token operator", children: "=" }), " value", a(s2.span, { className: "token punctuation", children: ";" }), "\n        ", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: "}" })] }), "\n      ", a(s2.span, { className: "token punctuation", children: "/>" })] }), a(s2.span, { className: "token plain-text", children: "\n    " }), e(s2.span, { className: "token tag", children: [e(s2.span, { className: "token tag", children: [a(s2.span, { className: "token punctuation", children: "</" }), a(s2.span, { className: "token class-name", children: "List" })] }), a(s2.span, { className: "token punctuation", children: ">" })] }), "\n  ", a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n", a(s2.span, { className: "token punctuation", children: "}" }), a(s2.span, { className: "token punctuation", children: ")" }), a(s2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function D() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n2.components || {};
  return e2 ? a(e2, { ...n2, children: a(T, { ...n2 }) }) : T(n2);
}
let _ = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(s(() => () => t(D, { components: { codeblock4b227777: x, codeblock4a44dc15: O } })), { displayName: "IndexDefault" }) }, Symbol.toStringTag, { value: "Module" }));
export {
  _ as i,
  b as r
};
