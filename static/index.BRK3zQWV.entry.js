import { c as n, l as e, w as a, R as s, r as t, m as c, n as l, p as o, q as i, v as r, x as p, y as d, h as u, F as m, z as h, d as k, A as N, B as g, g as y, s as f, C as v, D as b } from "./lib-nodepkg-vuekit.BjYYsrb4.chunk.js";
import { j as x, a as w } from "./lib-nodepkg-vue-jsx-runtime.BySDgEVk.chunk.js";
import { c as _, A as O, B as j, p as C, l as S, C as I, e as E, s as D, f as T } from "./lib-nodepkg-typedef.CSLP0jl-.chunk.js";
import { I as P, a as $, T as R, b as B, c as M, F as V, E as z, d as A, O as F, D as L, e as U, M as H, L as W } from "./lib-nodepkg-vuematerial.-55Bpxs2.chunk.js";
import { D as X, m as q, a as J, C as G, b as Y, c as Z, d as K, e as Q, f as nn } from "./webapp-vuekit-layout.BvHcHCkO.chunk.js";
import { B as ne, C as na, b as ns, G as nt, T as nc, c as nl, e as no, f as ni, g as nr, P as np, d as nd, t as nu, s as nm, v as nh, a as nk } from "./lib-nodepkg-vueuikit.DbY0DK50.chunk.js";
import { _ as nN, a as ng } from "./webapp-vuekit-page.ISBFBNWG.chunk.js";
let ny = n(() => {
  let n10 = O(e().options.routes.filter((n11) => "/" !== n11.path), (n11) => n11.path.split("/")[1]);
  return () => x(ne, { sx: { py: 16, px: 0, textTransform: "capitalize" }, children: j(n10, (n11, e2) => {
    var a2;
    let [s2, t2] = C(n11, (n12) => n12.path === `/${e2}`);
    return w(ne, { sx: { px: 8 }, children: [s2[0] ? x(B, { component: c, sx: { width: "100%", justifyContent: "flex-start" }, activeClass: "active", to: null === (a2 = s2[0]) || void 0 === a2 ? void 0 : a2.path, children: e2 }) : x(B, { sx: { width: "100%", justifyContent: "flex-start" }, children: e2 }), x(ne, { sx: { pl: 16 }, children: j(t2, (n12) => {
      var e3;
      return x(B, { component: c, activeClass: "active", to: n12.path, sx: { width: "100%", justifyContent: "flex-start" }, children: null === (e3 = S(n12.path.split("/"))) || void 0 === e3 ? void 0 : e3.replaceAll("-", " ") }, n12.name);
    }) })] }, e2);
  }) });
}), nf = n({ $default: _().optional() }, (n10, e2) => {
  let { slots: a2 } = e2, s2 = t("light");
  return () => {
    var n11;
    return w(ne, { "data-theme": s2.value, sx: { display: "flex", height: "100vh", width: "100vw", containerStyle: "sys.surface" }, children: [w(ne, { sx: { display: "flex", flexDirection: "column", width: "280px", height: "100vh", borderRightRadius: "lg", overflowY: "auto", containerStyle: "sys.surface-container-low", elevation: "0", _hover: { elevation: "2" } }, children: [x(ne, { sx: { flex: 1 }, children: x(nb, {}) }), w(ne, { sx: { p: 16, display: "flex", justifyContent: "flex-end" }, children: [x(P, { component: "a", target: "_blank", sx: { color: "sys.on-surface-variant" }, href: "//github.com/innoai-tech/vuekit", children: x($, { path: Y }) }), x(R, { title: `切换到${"light" === s2.value ? "深色模式" : "浅色模式"}`, children: x(ne, { component: P, "data-test": true, sx: { color: "sys.on-surface-variant" }, onClick: () => {
      s2.value = "light" === s2.value ? "dark" : "light";
    }, children: x($, { path: "light" === s2.value ? q : J }) }) })] })] }), x(ne, { sx: { flex: 1, overflow: "auto" }, children: x(G, { children: null === (n11 = a2.default) || void 0 === n11 ? void 0 : n11.call(a2) }) })] });
  };
}), nv = n(() => {
  let n10 = X.use(), e2 = na.use();
  return a([() => n10.value.seed, () => n10.value.rules], (e3) => {
    let [a2, s2] = e3;
    n10.next((n11) => {
      n11.theming = nl.create({ ...no, ...ni.fromColors(a2).toDesignTokens(s2) }, { varPrefix: "vk" });
    });
  }), () => {
    let a2 = n10.value.theming, t2 = a2.unstable_css(e2, { ":root": a2.rootCSSVars });
    return x(X, { value: n10, children: w(nc, { value: a2, children: [x(ns, {}), x(nt, { styles: '/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n' }), x(nx, { children: x(s, {}) })] }, t2.name) });
  };
}), nb = Object.assign(ny, { displayName: "Nav" }), nx = Object.assign(nf, { displayName: "Scaffold" }), nw = Object.assign(nv, { displayName: "App" }), n_ = [{ name: "vuematerial-textfields", path: "/vuematerial/textfields", component: () => l(() => Promise.resolve().then(() => nj), true ? void 0 : void 0), props: true }, { name: "vuematerial", path: "/vuematerial", component: () => l(() => Promise.resolve().then(() => nI), true ? void 0 : void 0), props: true }, { name: "vuematerial-icons", path: "/vuematerial/icons", component: () => l(() => Promise.resolve().then(() => n$), true ? void 0 : void 0), props: true }, { name: "vuematerial-buttons", path: "/vuematerial/buttons", component: () => l(() => Promise.resolve().then(() => nR), true ? void 0 : void 0), props: true }, { name: "vuematerial-overlays", path: "/vuematerial/overlays", component: () => l(() => Promise.resolve().then(() => nB), true ? void 0 : void 0), props: true }, { name: "vueuikit-elevation", path: "/vueuikit/elevation", component: () => l(() => Promise.resolve().then(() => nM), true ? void 0 : void 0), props: true }, { name: "vueuikit-figma-tokens", path: "/vueuikit/figma-tokens", component: () => l(() => Promise.resolve().then(() => nV), true ? void 0 : void 0), props: true }, { name: "vueuikit-color-scheme", path: "/vueuikit/color-scheme", component: () => l(() => Promise.resolve().then(() => nA), true ? void 0 : void 0), props: true }, { name: "vueuikit-color-palette", path: "/vueuikit/color-palette", component: () => l(() => Promise.resolve().then(() => nX), true ? void 0 : void 0), props: true }, { name: "vueuikit-popper", path: "/vueuikit/popper", component: () => l(() => Promise.resolve().then(() => n1), true ? void 0 : void 0), props: true }, { name: "vueuikit", path: "/vueuikit", component: () => l(() => Promise.resolve().then(() => n8), true ? void 0 : void 0), props: true }, { name: "vueuikit-typography", path: "/vueuikit/typography", component: () => l(() => Promise.resolve().then(() => n9), true ? void 0 : void 0), props: true }, { name: "vuekit-rx-in-vue", path: "/vuekit/rx-in-vue", component: () => l(() => Promise.resolve().then(() => el), true ? void 0 : void 0), props: true }, { name: "vuekit", path: "/vuekit", component: () => l(() => Promise.resolve().then(() => eN), true ? void 0 : void 0), props: true }, { name: "index", path: "/", component: Object.assign(nN, ng), props: true }];
console.log(n_);
let nO = o({ history: i(new URL(null !== (nL = null === (nF = document.querySelector("base")) || void 0 === nF ? void 0 : nF.href) && void 0 !== nL ? nL : "/").pathname), routes: n_ });
r(nw).use(nO).mount("#root");
let nj = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => {
  let n10 = { Enabled: {}, Focused: { focus: true }, Invalid: { invalid: true }, Disabled: { disabled: true } }, e2 = { TextField: M };
  return () => x(G, { children: x(ne, { sx: { display: "flex", flexDirection: "column", gap: 48 }, children: j(e2, (e3, a2) => x(ne, { sx: { display: "flex", flexDirection: "column", gap: 16 }, children: [(n11) => x(e3, { ...n11, children: x("input", { "data-input": "", type: "text", placeholder: "Type" }) }), (n11) => x(e3, { ...n11, valued: true, children: x("input", { "data-input": "", type: "text", value: "Username" }) }), (n11) => x(e3, { ...n11, $leading: x($, { path: Z }), children: x("input", { "data-input": "", type: "text" }) }), (n11) => x(e3, { ...n11, $trailing: x($, { path: K }), children: x("input", { "data-input": "", type: "text" }) })].map((e4, a3) => x(p, { children: x(ne, { sx: { display: "flex", gap: 16 }, children: j(n10, (n11) => e4({ ...n11, $label: "Name", $supporting: "Desc" })) }) }, `${a3}`)) }, a2)) }) });
}), { displayName: "TextfieldsDefault" }) }, Symbol.toStringTag, { value: "Module" }));
function nC(n10) {
  return x({ p: "p", ...n10.components }.p, { children: "这不是一个完整的组件库，只是一个示例，作为 vueuikit 的参考" });
}
function nS() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? x(e2, { ...n10, children: x(nC, { ...n10 }) }) : nC(n10);
}
let nI = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(d(() => () => u(nS, { components: {} })), { displayName: "IndexDefault" }) }, Symbol.toStringTag, { value: "Module" })), nE = Object.assign(n(() => () => x($, { path: Q })), { displayName: "IconsMdCodeBlockd4735E3ADefault" }), nD = Object.assign(n(() => () => w(ne, { sx: { display: "flex", gap: 8 }, children: [x(P, { active: true, onClick: () => console.log(1), children: x($, { path: Q }) }), w(V, { active: false, children: ["Send", x($, { path: Q, placement: "end" })] })] })), { displayName: "IconsMdCodeBlocke7F6C011Default" });
function nT(n10) {
  let e2 = { a: "a", code: "code", codeblockd4735e3a: "codeblockd4735e3a", codeblocke7f6c011: "codeblocke7f6c011", div: "div", h3: "h3", p: "p", pre: "pre", span: "span", ...n10.components };
  return w(m, { children: [w(e2.p, { children: ["直接使用沿用 ", x(e2.a, { href: "https://pictogrammers.com/library/mdi/", children: "mid" })] }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblockd4735e3a, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " component ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " mdiSend ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@mdi/js"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Icon" }), " ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuematerial"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Icon" })] }), " ", x(e2.span, { className: "token attr-name", children: "path" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "mdiSend", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token punctuation", children: "/>" })] }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", x(e2.h3, { children: "和 Button 一起使用" }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblocke7f6c011, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " component ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " mdiSend ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@mdi/js"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Icon" }), " ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuematerial"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "IconButton" }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token maybe-class-name", children: "FilledButton" }), " ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuematerial"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Box" }), " ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), " ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " display", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"flex"' }), x(e2.span, { className: "token punctuation", children: "," }), " gap", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "8" }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "IconButton" })] }), " ", x(e2.span, { className: "token attr-name", children: "active" }), " ", x(e2.span, { className: "token attr-name", children: "onClick" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token console class-name", children: "console" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "log" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token number", children: "1" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n        " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Icon" })] }), " ", x(e2.span, { className: "token attr-name", children: "path" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "mdiSend", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token punctuation", children: "/>" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "IconButton" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "FilledButton" })] }), " ", x(e2.span, { className: "token attr-name", children: "active" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token boolean", children: "false" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n        Send\n        " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Icon" })] }), " ", x(e2.span, { className: "token attr-name", children: "path" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "mdiSend", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token attr-name", children: "placement" }), w(e2.span, { className: "token attr-value", children: [x(e2.span, { className: "token punctuation attr-equals", children: "=" }), x(e2.span, { className: "token punctuation", children: '"' }), "end", x(e2.span, { className: "token punctuation", children: '"' })] }), " ", x(e2.span, { className: "token punctuation", children: "/>" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "FilledButton" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function nP() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? x(e2, { ...n10, children: x(nT, { ...n10 }) }) : nT(n10);
}
let n$ = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(d(() => () => u(nP, { components: { codeblockd4735e3a: nE, codeblocke7f6c011: nD } })), { displayName: "IconsDefault" }) }, Symbol.toStringTag, { value: "Module" })), nR = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => {
  let n10 = { Enabled: {}, Disabled: { disabled: true }, Hovered: { hover: true }, Focused: { focus: true }, Pressed: { active: true } }, e2 = { ElevatedButton: z, FilledButton: V, TonalButton: A, OutlinedButton: F, TextButton: B };
  return () => x(G, { children: x(ne, { sx: { display: "flex", flexDirection: "column", gap: 48 }, children: j(e2, (e3, a2) => x(ne, { sx: { display: "flex", flexDirection: "column", gap: 16 }, children: [(n11) => n11, (n11) => w(m, { children: [x($, { path: K, placement: "start" }), n11] }), (n11) => w(m, { children: [n11, x($, { path: Q, placement: "end" })] })].map((a3, s2) => x(p, { children: x(ne, { sx: { display: "flex", gap: 16 }, children: j(n10, (n11, s3) => x(e3, { ...n11, children: a3(s3) })) }) }, `${s2}`)) }, a2)) }) });
}), { displayName: "ButtonsDefault" }) }, Symbol.toStringTag, { value: "Module" })), nB = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => {
  let n10 = t(false), e2 = t(false), a2 = t(false);
  return () => x(G, { children: w(ne, { sx: { display: "flex", flexDirection: "column", gap: 8 }, children: [x(B, { onClick: () => {
    e2.value = true;
  }, children: "Open Dialog" }), x(L, { isOpen: e2.value, onClose: () => {
    e2.value = false;
  }, children: w(U, { sx: { minH: "40vh" }, children: [w(ne, { sx: { display: "flex", alignItems: "center", px: 16, textStyle: "sys.title-large" }, children: [x(ne, { sx: { flex: 1 }, children: "我是对话框" }), x(P, { onClick: () => {
    e2.value = false;
  }, children: x($, { path: nn }) })] }), x(B, { onClick: () => {
    a2.value = true;
  }, children: "Open Dialog In Dialog" }), x(L, { isOpen: a2.value, onClose: () => {
    a2.value = false;
  }, children: x(U, { sx: { minH: "40vh" }, children: w(ne, { sx: { display: "flex", alignItems: "center", px: 16, textStyle: "sys.title-large" }, children: [x(ne, { sx: { flex: 1 }, children: "我是对话框 2" }), x(P, { onClick: () => {
    a2.value = false;
  }, children: x($, { path: nn }) })] }) }) })] }) }), x(R, { title: "Tooltip", children: x(B, { children: "Hover me" }) }), x(R, { title: "Menu", children: x(H, { $menu: w(m, { children: [x(W, { children: "选项一" }), x(W, { onClick: () => {
    n10.value = true;
  }, children: "选项二" }), x(L, { isOpen: n10.value, onClose: () => {
    n10.value = false;
  }, children: x(U, { sx: { minH: "40vh" }, children: "我是对话框" }) }), x(H, { placement: "right-start", $menu: w(m, { children: [x(W, { children: "选项三.1" }), x(W, { children: "选项三.2" })] }), children: x(W, { children: "选项三" }) })] }), children: x(B, { children: "Menu" }) }) })] }) });
}), { displayName: "OverlaysDefault" }) }, Symbol.toStringTag, { value: "Module" })), nM = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => {
  let n10 = nc.use();
  return () => x(m, { children: Object.keys(n10.token.elevation.tokens).map((n11) => x(ne, { sx: { mt: 16, p: 16, rounded: "lg", transitionDuration: "md4", transitionTimingFunction: "standard", shadow: n11, _hover: { shadow: `${1 + parseInt(n11)}` } }, children: w("div", { children: ["Elevation ", n11] }) }, n11)) });
}), { displayName: "ElevationDefault" }) }, Symbol.toStringTag, { value: "Module" })), nV = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => {
  let n10 = nc.use();
  return () => w(ne, { sx: { display: "flex", gap: 16, flexDirection: "column" }, children: [x("div", { children: "点击下载，通过 Figma Tokens 全量导入文件" }), x("pre", { onClick: () => {
    !function(n11, e2) {
      let a2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "application/json", s2 = document.createElement("a"), t2 = new Blob([n11], { type: a2 }), c2 = URL.createObjectURL(t2);
      s2.href = c2, s2.download = e2, document.body.appendChild(s2), s2.click(), setTimeout(() => {
        document.body.removeChild(s2), window.URL.revokeObjectURL(c2);
      }, 0);
    }(JSON.stringify(n10.toFigmaTokens(), null, 2), `tokens.${(/* @__PURE__ */ new Date()).getTime()}.json`);
  }, children: x("code", { children: JSON.stringify(n10.toFigmaTokens(), null, 2) }) })] });
}), { displayName: "FigmaTokensDefault" }) }, Symbol.toStringTag, { value: "Module" })), nz = { 0: true, 10: true, 20: true, 30: true, 40: true, 50: true, 60: true, 70: true, 80: true, 90: true, 95: true, 100: true }, nA = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => () => x(m, { children: ["light", "dark"].map((n10) => w("div", { "data-theme": n10, children: [w(ne, { component: "h1", sx: { textStyle: "sys.headline-medium", pb: 8, mt: 16 }, children: [I(n10), " Scheme"] }), w(ne, { sx: { display: "flex", flexDirection: "column", gap: 16 }, children: [x(ne, { sx: { display: "flex", flexWrap: "wrap", gap: 16 }, children: ["primary", "secondary", "tertiary", "error", "warning", "success"].map((n11) => w(ne, { sx: { flex: 1, minW: 1 / 4, display: "flex", alignItems: "stretch" }, children: [x(ne, { sx: { flex: 1, display: "flex", flexDirection: "column" }, children: ["", "-container"].map((e2) => w(p, { children: [x(ne, { sx: { bgColor: `sys.${n11}${e2}`, color: `sys.on-${n11}${e2}`, p: 8, flex: 3 }, children: `${n11}${e2}` }), x(ne, { sx: { color: `sys.${n11}${e2}`, bgColor: `sys.on-${n11}${e2}`, p: 8, flex: 1 }, children: `on-${n11}${e2}` })] }, e2)) }), x(ne, { sx: { display: "flex", flexDirection: "column" }, children: j(nz, (e2, a2) => w(ne, { sx: { color: `${n11}.${parseInt(a2) > 50 ? 0 : 100}`, bgColor: `${n11}.${a2}`, w: 60, p: 8, textAlign: "right" }, children: [".", a2] })) })] }, n11)) }), w("div", { children: [x(ne, { sx: { display: "flex", "& > *": { width: 1 / 3 } }, children: ["-dim", "", "-bright"].map((n11) => x(ne, { sx: { color: "sys.on-surface", bgColor: `sys.surface${n11}`, height: 80, p: 8 }, children: `surface${n11}` })) }), x(ne, { sx: { display: "flex", "& > *": { width: 1 / 4 } }, children: ["-lowest", "-low", "", "-high", "-highest"].map((n11) => x(ne, { sx: { color: "sys.on-surface", bgColor: `sys.surface-container${n11}`, height: 80, p: 8 }, children: `surface-container${n11}` })) }), x(ne, { sx: { display: "flex", "& > *": { width: 1 / 4 } }, children: ["on-surface", "on-surface-variant", "outline", "outline-variant"].map((n11) => x(ne, { sx: { color: n11.includes("outline-variant") ? "sys.inverse-surface" : "sys.inverse-on-surface", bgColor: `sys.${n11}`, height: 80, p: 8 }, children: n11 })) }), x(ne, { sx: { display: "flex" }, children: j(nz, (n11, e2) => w(ne, { sx: { color: `neutral.${parseInt(e2) > 50 ? 0 : 100}`, bgColor: `neutral.${e2}`, flex: 1, p: 8, textAlign: "right" }, children: [".", e2] })) })] })] })] }, n10)) })), { displayName: "ColorSchemeDefault" }) }, Symbol.toStringTag, { value: "Module" }));
var nF, nL, nU = function() {
  var n10 = document.getSelection();
  if (!n10.rangeCount)
    return function() {
    };
  for (var e2 = document.activeElement, a2 = [], s2 = 0; s2 < n10.rangeCount; s2++)
    a2.push(n10.getRangeAt(s2));
  switch (e2.tagName.toUpperCase()) {
    case "INPUT":
    case "TEXTAREA":
      e2.blur();
      break;
    default:
      e2 = null;
  }
  return n10.removeAllRanges(), function() {
    "Caret" === n10.type && n10.removeAllRanges(), n10.rangeCount || a2.forEach(function(e3) {
      n10.addRange(e3);
    }), e2 && e2.focus();
  };
}, nH = { "text/plain": "Text", "text/html": "Url", default: "Text" };
let nW = h(function(n10, e2) {
  var a2, s2, t2, c2, l2, o2, i2, r2, p2 = false;
  e2 || (e2 = {}), t2 = e2.debug || false;
  try {
    if (l2 = nU(), o2 = document.createRange(), i2 = document.getSelection(), (r2 = document.createElement("span")).textContent = n10, r2.ariaHidden = "true", r2.style.all = "unset", r2.style.position = "fixed", r2.style.top = 0, r2.style.clip = "rect(0, 0, 0, 0)", r2.style.whiteSpace = "pre", r2.style.webkitUserSelect = "text", r2.style.MozUserSelect = "text", r2.style.msUserSelect = "text", r2.style.userSelect = "text", r2.addEventListener("copy", function(a3) {
      if (a3.stopPropagation(), e2.format) {
        if (a3.preventDefault(), void 0 === a3.clipboardData) {
          t2 && console.warn("unable to use e.clipboardData"), t2 && console.warn("trying IE specific stuff"), window.clipboardData.clearData();
          var s3 = nH[e2.format] || nH.default;
          window.clipboardData.setData(s3, n10);
        } else
          a3.clipboardData.clearData(), a3.clipboardData.setData(e2.format, n10);
      }
      e2.onCopy && (a3.preventDefault(), e2.onCopy(a3.clipboardData));
    }), document.body.appendChild(r2), o2.selectNodeContents(r2), i2.addRange(o2), !document.execCommand("copy"))
      throw Error("copy command was unsuccessful");
    p2 = true;
  } catch (l3) {
    t2 && console.error("unable to copy using execCommand: ", l3), t2 && console.warn("trying IE specific stuff");
    try {
      window.clipboardData.setData(e2.format || "text", n10), e2.onCopy && e2.onCopy(window.clipboardData), p2 = true;
    } catch (l4) {
      t2 && console.error("unable to copy using clipboardData: ", l4), t2 && console.error("falling back to prompt"), a2 = "message" in e2 ? e2.message : "Copy to clipboard: #{key}, Enter", s2 = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C", c2 = a2.replace(/#{\s*key\s*}/g, s2), window.prompt(c2, n10);
    }
  } finally {
    i2 && ("function" == typeof i2.removeRange ? i2.removeRange(o2) : i2.removeAllRanges()), r2 && document.body.removeChild(r2), l2();
  }
  return p2;
}), nX = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => {
  let n10 = X.use(), e2 = k();
  return () => {
    let a2 = ni.fromColors(n10.value.seed);
    return w(ne, { ref: e2, sx: { display: "flex", flexDirection: "column", gap: 24 }, children: [w(ne, { sx: { display: "flex", gap: 56 }, children: [x(ne, { sx: { display: "flex", flexDirection: "column" }, children: j(n10.value.seed, (e3, a3) => w(ne, { sx: { flex: 1, display: "flex", alignItems: "center", gap: 16 }, children: [x(ne, { sx: { flex: 1 }, children: a3 }), x("input", { type: "color", value: e3, onChange: (e4) => {
      n10.next((n11) => {
        n11.seed[a3] = e4.target.value;
      });
    } })] })) }), x(ne, { sx: { display: "flex", flexWrap: "wrap", gap: 16 }, children: j(n10.value.rules, (e3, s2) => {
      let [t2, c2, l2] = e3;
      return w(ne, { sx: { display: "flex", alignItems: "center", width: "30%" }, children: [x(ne, { sx: { flex: 1 }, children: s2 }), w(ne, { sx: { flex: 1, display: "flex", gap: 4, "& input": { width: "40%", border: "1px solid", borderColor: "sys.outline" } }, children: [x("input", { type: "number", value: c2, max: 100, min: 0, style: { backgroundColor: ni.toHEX(a2.seeds[t2].tone(c2)), color: c2 > 50 ? "black" : "white" }, "data-color": ni.toHEX(a2.seeds[t2].tone(c2)), "data-theme": "dark", onChange: (e4) => {
        try {
          let a3 = parseInt(e4.target.value);
          n10.next((n11) => {
            n11.rules[s2] = [t2, a3, l2];
          });
        } catch (n11) {
        }
      } }), x("input", { type: "number", max: 100, min: 0, value: l2, style: { backgroundColor: ni.toHEX(a2.seeds[t2].tone(l2)), color: l2 > 50 ? "black" : "white" }, "data-color": ni.toHEX(a2.seeds[t2].tone(l2)), "data-theme": "light", onChange: (e4) => {
        try {
          let a3 = parseInt(e4.target.value);
          n10.next((n11) => {
            n11.rules[s2] = [t2, c2, a3];
          });
        } catch (n11) {
        }
      } })] })] });
    }) })] }), x(ne, { sx: { display: "flex", gap: 16, "& > *": { flex: 1 } }, children: x("pre", { onClick: () => nW(JSON.stringify(n10.value)), children: x("code", { children: JSON.stringify(n10.value, null, 2) }) }) })] });
  };
}), { displayName: "ColorPaletteDefault" }) }, Symbol.toStringTag, { value: "Module" })), nq = Object.assign(n(() => {
  let n10 = t(false), e2 = nr((n11) => {
    let { state: e3 } = n11;
    e3.styles.popper.width = `${e3.rects.reference.width}px`;
  }, { name: "sameWidth", phase: "beforeWrite", requires: ["computeStyles"] });
  return () => x(np, { isOpen: n10.value, onClickOutside: () => n10.value = false, placement: "bottom-start", modifiers: [e2], $content: w(ne, { sx: { containerStyle: "sys.on-surface" }, children: ["Popper ", `${n10.value}`, "!"] }), children: x(ne, { sx: { p: 4 }, component: "button", onClick: () => n10.value = !n10.value, children: "Click Trigger Popper" }) });
}), { displayName: "PopperMdCodeBlockd4735E3ADefault" }), nJ = Object.assign(n(() => {
  let n10 = t(false);
  return () => x(np, { isOpen: n10.value, $content: x(ne, { sx: { containerStyle: "sys.on-surface" }, children: "Popper Content!" }), children: x(ne, { component: "button", sx: { p: 4 }, onMouseover: () => n10.value = true, onMouseout: () => n10.value = false, children: "Popper Trigger" }) });
}), { displayName: "PopperMdCodeBlocke7F6C011Default" }), nG = nd({ from: { opacity: 0 }, to: { opacity: 1 }, duration: nu.duration.md1, easing: nu.easing.standard.accelerate }, { from: { opacity: 1 }, to: { opacity: 0 }, duration: nu.duration.sm4, easing: nu.easing.standard.decelerate }), nY = n(() => {
  let n10 = t(true);
  return () => x(np, { isOpen: n10.value, $transition: (n11) => {
    let { content: e2 } = n11;
    return x(nZ, { children: e2 });
  }, $content: w(ne, { sx: { containerStyle: "sys.on-surface", shadow: "2", py: 2, px: 4, rounded: "sm" }, children: ["Popper ", `${n10.value}`, "!"] }), children: x(ne, { sx: { p: 4 }, component: "button", onMouseover: () => n10.value = true, onMouseout: () => n10.value = false, children: "Animated Popper" }) });
}), nZ = Object.assign(nG, { displayName: "FadeInOutTransition" }), nK = Object.assign(nY, { displayName: "PopperMdCodeBlock4A44Dc15Default" });
function nQ(n10) {
  let e2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblockd4735e3a: "codeblockd4735e3a", codeblocke7f6c011: "codeblocke7f6c011", div: "div", h2: "h2", pre: "pre", span: "span", ...n10.components };
  return w(m, { children: [x(e2.h2, { children: "Normal Popper" }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblockd4735e3a, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " component ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Box" }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token maybe-class-name", children: "Popper" }), x(e2.span, { className: "token punctuation", children: "," }), " createPopperModifier ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ref ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"vue"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword", children: "const" }), " isOpen ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "ref" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token boolean", children: "false" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", x(e2.span, { className: "token keyword", children: "const" }), " modifier ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "createPopperModifier" }), x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "{" }), " state ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n      state", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "styles" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "popper" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "width" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", w(e2.span, { className: "token template-string", children: [x(e2.span, { className: "token template-punctuation string", children: "`" }), w(e2.span, { className: "token interpolation", children: [x(e2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "state", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "rects" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "reference" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "width" }), x(e2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), x(e2.span, { className: "token string", children: "px" }), x(e2.span, { className: "token template-punctuation string", children: "`" })] }), x(e2.span, { className: "token punctuation", children: ";" }), "\n    ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: "{" }), "\n      name", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sameWidth"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n      phase", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"beforeWrite"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n      requires", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token punctuation", children: "[" }), x(e2.span, { className: "token string", children: '"computeStyles"' }), x(e2.span, { className: "token punctuation", children: "]" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "isOpen" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "onClickOutside" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token boolean", children: "false" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "placement" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token string", children: '"bottom-start"' }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "modifiers" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "[" }), "modifier", x(e2.span, { className: "token punctuation", children: "]" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "$content" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "\n        ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), " ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " containerStyle", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sys.on-surface"' }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          Popper " }), x(e2.span, { className: "token punctuation", children: "{" }), w(e2.span, { className: "token template-string", children: [x(e2.span, { className: "token template-punctuation string", children: "`" }), w(e2.span, { className: "token interpolation", children: [x(e2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), x(e2.span, { className: "token template-punctuation string", children: "`" })] }), x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token plain-text", children: "!\n        " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " p", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "4" }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "component" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token string", children: '"button"' }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "onClick" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token operator", children: "!" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n        Click Trigger Popper\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Popper" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", x(e2.h2, { children: "Hovered Popper" }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblocke7f6c011, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ref ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"vue"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " component ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Box" }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token maybe-class-name", children: "Popper" }), " ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword", children: "const" }), " isOpen ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "ref" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token boolean", children: "false" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "isOpen" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "$content" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "\n        ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), " ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " containerStyle", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sys.on-surface"' }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "Popper Content!" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "component" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token string", children: '"button"' }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " p", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "4" }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "onMouseover" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token boolean", children: "true" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "onMouseout" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token boolean", children: "false" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n        Popper Trigger\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Popper" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", x(e2.h2, { children: "Animated" }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblock4a44dc15, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ref ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"vue"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " component ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token maybe-class-name", children: "Box" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  defineTransition", x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token maybe-class-name", children: "Popper" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  transition", x(e2.span, { className: "token punctuation", children: "," }), "\n  triangle", x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "const" }), " ", x(e2.span, { className: "token maybe-class-name", children: "FadeInOutTransition" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "defineTransition" }), x(e2.span, { className: "token punctuation", children: "(" }), "\n  ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    ", x(e2.span, { className: "token keyword module", children: "from" }), x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "0" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    to", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "1" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    duration", x(e2.span, { className: "token operator", children: ":" }), " transition", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "duration" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "md1" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    easing", x(e2.span, { className: "token operator", children: ":" }), " transition", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "easing" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "standard" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "accelerate" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    ", x(e2.span, { className: "token keyword module", children: "from" }), x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "1" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    to", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n      opacity", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "0" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    duration", x(e2.span, { className: "token operator", children: ":" }), " transition", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "duration" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "sm4" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    easing", x(e2.span, { className: "token operator", children: ":" }), " transition", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "easing" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "standard" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "decelerate" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword", children: "const" }), " isOpen ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "ref" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token boolean", children: "true" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Popper" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "isOpen" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "$transition" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "{" }), " content ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n        ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "FadeInOutTransition" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token punctuation", children: "{" }), "content", x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "FadeInOutTransition" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "$content" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "\n        ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), "\n          ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), "\n            containerStyle", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sys.on-surface"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n            shadow", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"2"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n            py", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "2" }), x(e2.span, { className: "token punctuation", children: "," }), "\n            px", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "4" }), x(e2.span, { className: "token punctuation", children: "," }), "\n            rounded", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sm"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n          ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          Popper " }), x(e2.span, { className: "token punctuation", children: "{" }), w(e2.span, { className: "token template-string", children: [x(e2.span, { className: "token template-punctuation string", children: "`" }), w(e2.span, { className: "token interpolation", children: [x(e2.span, { className: "token interpolation-punctuation punctuation", children: "${" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token interpolation-punctuation punctuation", children: "}" })] }), x(e2.span, { className: "token template-punctuation string", children: "`" })] }), x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token plain-text", children: "!\n        " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " p", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "4" }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "component" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token string", children: '"button"' }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "onMouseover" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token boolean", children: "true" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "onMouseout" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "isOpen", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token boolean", children: "false" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n        Animated Popper\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Popper" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function n0() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? x(e2, { ...n10, children: x(nQ, { ...n10 }) }) : nQ(n10);
}
let n1 = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(d(() => () => u(n0, { components: { codeblockd4735e3a: nq, codeblocke7f6c011: nJ, codeblock4a44dc15: nK } })), { displayName: "PopperDefault" }) }, Symbol.toStringTag, { value: "Module" })), n4 = nm("button", { disabled: E().optional() })({ bg: "none", outline: "none", border: "none", px: 16, h: 40, rounded: "md", color: "sys.primary", bgColor: nh("sys.primary", nk(0.08)), _disabled: { color: nh("sys.on-surface", nk(0.12)), bgColor: nh("sys.on-surface", nk(0.08)) } }), n2 = () => w(ne, { sx: { display: "flex", gap: 8 }, children: [x(n7, { children: "按钮" }), x(n7, { disabled: true, children: "按钮" })] }), n7 = Object.assign(n4, { displayName: "Button" }), n3 = Object.assign(n(() => () => x(ne, { sx: { display: "flex", padding: 10, containerStyle: "sys.primary" }, children: x(ne, { sx: { containerStyle: "sys.surface-container" }, component: "button", children: "Hi 111" }) })), { displayName: "IndexMdCodeBlock785F3Ec7Default" });
function n5(n10) {
  let e2 = { a: "a", code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock785f3ec7: "codeblock785f3ec7", div: "div", em: "em", h2: "h2", h3: "h3", li: "li", p: "p", pre: "pre", span: "span", strong: "strong", ul: "ul", ...n10.components };
  return w(m, { children: [w(e2.p, { children: ["设计理念沿用 ", x(e2.a, { href: "https://m3.material.io/", children: "Material 3" })] }), "\n", x(e2.p, { children: "这里仅为适配该设计理念，抽象 Design System, 方便开发：" }), "\n", w(e2.p, { children: ["所有的 Design Token 将声明为 ", x(e2.code, { children: "css var" }), " (", x(e2.a, { href: "https://developer.mozilla.org/en-US/docs/Web/CSS/--*", children: "Custom properties" }), "),\n可同时支持在 ", x(e2.code, { children: "css-in-js" }), " 和 ", x(e2.code, { children: "raw css" }), " 中使用。"] }), "\n", x(e2.h2, { children: x(e2.code, { children: "css-in-js" }) }), "\n", x(e2.p, { children: "TypeScript 的帮助下，还会提供准确的 Design Token 值. 如：" }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblock4a44dc15, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Box" }), x(e2.span, { className: "token punctuation", children: "," }), " alpha", x(e2.span, { className: "token punctuation", children: "," }), " styled", x(e2.span, { className: "token punctuation", children: "," }), " variant ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " t ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "const" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Button" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "styled" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"button"' }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  disabled", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "boolean" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "optional" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "{" }), "\n  bg", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"none"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n  outline", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"none"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n  border", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"none"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n  px", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "16" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  h", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "40" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  rounded", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"md"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", x(e2.span, { className: "token comment", children: "// 利用 TypeScript 的推导而来，且非 color 属性无该值" }), "\n  ", x(e2.span, { className: "token comment", children: "// 实际将转换为 var(--vk-color-sys-primary)" }), "\n  ", x(e2.span, { className: "token comment", children: "// sys-* 的 color 还会随暗黑/普通主题进行切换" }), "\n  color", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sys.primary"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", x(e2.span, { className: "token comment", children: "// color 变种" }), "\n  ", x(e2.span, { className: "token comment", children: "// 实际将转换为 rbga(var(--vk-color-sys-primary-rgb) / 0.08)" }), "\n  bgColor", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token function", children: "variant" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"sys.primary"' }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token function", children: "alpha" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token number", children: "0.08" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n\n  ", x(e2.span, { className: "token comment", children: "// 通常情况下，组件 props 将转换成 data-<prop> 作为 attr" }), "\n  ", x(e2.span, { className: "token comment", children: "// 即： <Button disabled/>  =>  <button data-disabled=true />" }), "\n  ", x(e2.span, { className: "token comment", children: "// 同理，在自定义转换规则中，也建议如下做类似的转换，避免动态创建 CSSObject" }), "\n  _disabled", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    color", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token function", children: "variant" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"sys.on-surface"' }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token function", children: "alpha" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token number", children: "0.12" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    bgColor", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token function", children: "variant" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"sys.on-surface"' }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token function", children: "alpha" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token number", children: "0.08" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), " ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " display", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"flex"' }), x(e2.span, { className: "token punctuation", children: "," }), " gap", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "8" }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Button" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "按钮" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Button" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Button" })] }), " ", x(e2.span, { className: "token attr-name", children: "disabled" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token boolean", children: "true" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "按钮" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Button" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", w(e2.p, { children: ["不同于其他框架中的 theme 定义，为了更准确的类型推导，需要由 DesignToken 进行创建\n详细请", x(e2.a, { href: "https://github.com/innoai-tech/vuekit/blob/main/nodepkg/vueuikit/src/theming/m3", children: "参考源码" })] }), "\n", w(e2.p, { children: ["虽然底层使用的是 ", x(e2.code, { children: "@emotion/*" }), "，但屏蔽掉了 ", x(e2.code, { children: "array" }), " 等非 CSSObject 值的使用, 初衷是为了更稳定的类型推导。\n另外样式扩展有两种方式"] }), "\n", x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " t ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " styled", x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword", children: "const" }), " shared", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token maybe-class-name", children: "SystemStyleObject" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  color", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sys.primary"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token comment", children: "// ..." }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token comment", children: "// 直接通过 extends 复用样式" }), "\n", x(e2.span, { className: "token comment", children: "//" }), "\n", x(e2.span, { className: "token comment", children: "// 组件 props 定义需要重新声明" }), "\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "const" }), " ", x(e2.span, { className: "token maybe-class-name", children: "ButtonBase" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "styled" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"button"' }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  disabled", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "boolean" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "optional" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword", children: "extends" }), x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token punctuation", children: "[" }), "shared", x(e2.span, { className: "token punctuation", children: "]" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token comment", children: "// ..." }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token comment", children: "// 通过 styled 覆写样式" }), "\n", x(e2.span, { className: "token comment", children: "// 可以完全继承 BaseButton 的 props 定义" }), "\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "const" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Button" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "styled" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token maybe-class-name", children: "ButtonBase" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token comment", children: "// ..." }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) }), "\n", w(e2.p, { children: ["除 ", x(e2.code, { children: "styled" }), " 外，我们还可以使用 ", x(e2.code, { children: "Box" }), " 进行快速样式定义, 通过 ", x(e2.code, { children: "sx" }), " prop。 并且 ", x(e2.code, { children: "component" }), " prop 支持我们随时切换 tag 或者\n组件，并且其他 props 会随着不同的 component 切换对应 props 类型约束与提示。"] }), "\n", x(e2.p, { children: "同样的，通过 styled 创建的组件也有一样的特性。" }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblock785f3ec7, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " component ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Box" }), " ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vueuikit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n  ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), " ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " display", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"flex"' }), x(e2.span, { className: "token punctuation", children: "," }), " padding", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token number", children: "10" }), x(e2.span, { className: "token punctuation", children: "," }), " containerStyle", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sys.primary"' }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "Box" })] }), " ", x(e2.span, { className: "token attr-name", children: "sx" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " containerStyle", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"sys.surface-container"' }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token attr-name", children: "component" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token string", children: '"button"' }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      Hi 111\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n  " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "Box" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", x(e2.h3, { children: "CSS Selector 简写规则" }), "\n", w(e2.p, { children: ["另外，为了简化 ", x(e2.code, { children: '"&:hover"' }), " ", x(e2.code, { children: "&[aria-current='page']" }), " 等选择器声明，\n提供的如下的简化规则："] }), "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: ["所有名称支持 ", x(e2.em, { children: "下划线命名" }), " 或者 ", x(e2.em, { children: "驼峰命名" }), "，最终都将转换为 ", x(e2.em, { children: "短横小写命名" }), ", ", x(e2.code, { children: "=" }), " 用 ", x(e2.code, { children: "__" }), " 替代"] }), "\n", w(e2.li, { children: [x(e2.code, { children: "_*" }), " 一般表示", x(e2.strong, { children: "状态" }), "，可用值", "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: [x(e2.code, { children: "data-*" }), " 和 ", x(e2.code, { children: "aria-*" }), ", `", "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: ["如 ", x(e2.code, { children: "_aria_current__page" }), "： 等效为 ", x(e2.code, { children: "&[aria-current='page']" }), ","] }), "\n"] }), "\n"] }), "\n", w(e2.li, { children: [x(e2.code, { children: "before" }), "，", x(e2.code, { children: "after" }), " 等", x(e2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements", children: "伪元素" }), ', 需要声明 "$" 表示为元素', "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: ["如 ", x(e2.code, { children: "_$before" }), "： 等效为 ", x(e2.code, { children: "&::before" })] }), "\n"] }), "\n"] }), "\n", w(e2.li, { children: [x(e2.code, { children: "hover" }), ", ", x(e2.code, { children: "focus" }), ", ", x(e2.code, { children: "active" }), ", ", x(e2.code, { children: "disabled" }), " 等", x(e2.a, { href: "https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes", children: "伪类" }), "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: ["如 ", x(e2.code, { children: "_hover" }), "： 等效为 ", x(e2.code, { children: "&:hover, &.hover, &[data-hover]:not([data-hover='false'])" }), ","] }), "\n"] }), "\n"] }), "\n", w(e2.li, { children: ["以及其他自定义状态", "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: ["如 ", x(e2.code, { children: "_has_icon" }), "： 等效为 ", x(e2.code, { children: "&[data-has-icon]:not([data-has-icon='false'])" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n", w(e2.li, { children: [x(e2.code, { children: "$*" }), " 或 ", x(e2.code, { children: "*$" }), "，一般指代", x(e2.strong, { children: "元素节点" }), ", 可用值为", "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: [x(e2.code, { children: "data-*" }), " 和 ", x(e2.code, { children: "aria-*" }), ", `", "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: ["如 ", x(e2.code, { children: "$data_icon" }), "： 等效为 ", x(e2.code, { children: "&[data-icon]" })] }), "\n", w(e2.li, { children: ["如 ", x(e2.code, { children: "$data_popper_arrow" }), "： 等效为 ", x(e2.code, { children: "&[data-popper-arrow]" })] }), "\n", w(e2.li, { children: ["如 ", x(e2.code, { children: "data_popper_placement__right$" }), "： 等效为 ", x(e2.code, { children: "[data-popper-placement=right] &" })] }), "\n"] }), "\n"] }), "\n"] }), "\n"] }), "\n"] })] });
}
function n6() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? x(e2, { ...n10, children: x(n5, { ...n10 }) }) : n5(n10);
}
let n8 = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(d(() => () => u(n6, { components: { codeblock4a44dc15: n2, codeblock785f3ec7: n3 } })), { displayName: "IndexDefault" }) }, Symbol.toStringTag, { value: "Module" })), n9 = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(n(() => {
  let n10 = nc.use();
  return () => x(m, { children: x(ne, { sx: { height: "40vh", display: "flex", flexDirection: "column", flexWrap: "wrap", justifyContent: "space-between", gap: 8 }, children: n10.token.textStyle.tokens.map((n11) => w(ne, { sx: { flex: 1, rounded: "md", textStyle: n11, p: 16, border: "2px solid", borderColor: "sys.outline-variant", bgColor: "sys.surface-container", color: "sys.primary", minW: "10vw", whiteSpace: "nowrap", display: "flex", flexDirection: "column", justifyContent: "space-between" }, children: [x(ne, { sx: { textStyle: "sys.label-small" }, children: n11 }), x(ne, { sx: { flex: 1 } }), x(ne, { sx: { py: 16 }, children: "中文测试" })] }, n11)) }) });
}), { displayName: "TypographyDefault" }) }, Symbol.toStringTag, { value: "Module" })), en = N({ value: D().optional().default("1"), onValueChange: _() }, (n10, e2) => {
  var a2;
  let { emit: s2 } = e2, t2 = g(null !== (a2 = n10.value) && void 0 !== a2 ? a2 : "");
  return y(t2, v(300), f((n11) => s2("value-change", n11))), y(t2, b((n11) => x("input", { value: n11, onInput: (n12) => {
    t2.value = n12.target.value;
  } })));
}), ee = n(() => {
  let n10 = t("default");
  return () => x("div", { children: w("div", { style: { display: "flex", gap: "1rem" }, children: [x(ea, { value: n10.value, onValueChange: (e2) => {
    n10.value = e2;
  } }), w("div", { children: ["Inputted: ", n10.value] })] }) });
}), ea = Object.assign(en, { displayName: "TextDebounceInput" }), es = Object.assign(ee, { displayName: "RxInVueMdCodeBlockd4735E3ADefault" });
function et(n10) {
  let e2 = { a: "a", code: "code", codeblockd4735e3a: "codeblockd4735e3a", div: "div", p: "p", pre: "pre", span: "span", ...n10.components };
  return w(m, { children: [w(e2.p, { children: ["和 ", x(e2.a, { href: "https://rxjs.dev/", children: "rxjs" }), " 集成"] }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblockd4735e3a, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), "\n  component", x(e2.span, { className: "token punctuation", children: "," }), "\n  component$", x(e2.span, { className: "token punctuation", children: "," }), "\n  rx", x(e2.span, { className: "token punctuation", children: "," }), "\n  observableRef", x(e2.span, { className: "token punctuation", children: "," }), "\n  subscribeUntilUnmount", x(e2.span, { className: "token punctuation", children: "," }), "\n  t", x(e2.span, { className: "token punctuation", children: "," }), "\n  render", x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ref ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"vue"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " debounceTime", x(e2.span, { className: "token punctuation", children: "," }), " subscribeOn ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"rxjs"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "const" }), " ", x(e2.span, { className: "token maybe-class-name", children: "TextDebounceInput" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "component$" }), x(e2.span, { className: "token punctuation", children: "(" }), "\n  ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    value", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "string" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "optional" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token keyword module", children: "default" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"1"' }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    onValueChange", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "custom" }), x(e2.span, { className: "token operator", children: "<" }), x(e2.span, { className: "token punctuation", children: "(" }), "v", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token builtin", children: "string" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token keyword", children: "void" }), x(e2.span, { className: "token operator", children: ">" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "(" }), "props", x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token punctuation", children: "{" }), " emit ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    ", x(e2.span, { className: "token keyword", children: "const" }), " value$ ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "observableRef" }), x(e2.span, { className: "token punctuation", children: "(" }), "props", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "??" }), " ", x(e2.span, { className: "token string", children: '""' }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n    ", x(e2.span, { className: "token function", children: "rx" }), x(e2.span, { className: "token punctuation", children: "(" }), "\n      value$", x(e2.span, { className: "token punctuation", children: "," }), "\n      ", x(e2.span, { className: "token function", children: "debounceTime" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token number", children: "300" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n      ", x(e2.span, { className: "token function", children: "subscribeUntilUnmount" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), "v", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token function", children: "emit" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"value-change"' }), x(e2.span, { className: "token punctuation", children: "," }), " v", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n    ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token function", children: "rx" }), x(e2.span, { className: "token punctuation", children: "(" }), "\n      value$", x(e2.span, { className: "token punctuation", children: "," }), "\n      ", x(e2.span, { className: "token function", children: "render" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), "v", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n        ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n          ", x(e2.span, { className: "token attr-name", children: "value" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "v", x(e2.span, { className: "token punctuation", children: "}" })] }), "\n          ", x(e2.span, { className: "token attr-name", children: "onInput" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), "e", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n            value$", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "e", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "target" }), " ", x(e2.span, { className: "token keyword module", children: "as" }), " ", x(e2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n          ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token punctuation", children: "/>" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword", children: "const" }), " inputValue ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "ref" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"default"' }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", x(e2.span, { className: "token attr-name", children: "style" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " display", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"flex"' }), x(e2.span, { className: "token punctuation", children: "," }), " gap", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"1rem"' }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n        " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "TextDebounceInput" })] }), "\n          ", x(e2.span, { className: "token attr-name", children: "value" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "inputValue", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n          ", x(e2.span, { className: "token attr-name", children: "onValueChange" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), "value", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n            inputValue", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " value", x(e2.span, { className: "token punctuation", children: ";" }), "\n          ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token punctuation", children: "/>" })] }), x(e2.span, { className: "token plain-text", children: "\n        " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "Inputted: " }), x(e2.span, { className: "token punctuation", children: "{" }), "inputValue", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function ec() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? x(e2, { ...n10, children: x(et, { ...n10 }) }) : et(n10);
}
let el = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(d(() => () => u(ec, { components: { codeblockd4735e3a: es } })), { displayName: "RxInVueDefault" }) }, Symbol.toStringTag, { value: "Module" })), eo = Object.assign(n(() => {
  let n10 = t(1);
  return () => w("div", { style: { display: "flex", gap: "1rem" }, children: [w("div", { children: ["Counts: ", n10.value] }), x("button", { onClick: () => n10.value++, children: "Click To Count" })] });
}), { displayName: "IndexMdCodeBlock4B227777Default" }), ei = n({ value: D().optional().default("1"), type: T(["text", "number"]), onValueChange: _() }, (n10, e2) => {
  let { emit: a2 } = e2;
  return () => x("input", { value: n10.value, onInput: (n11) => {
    a2("value-change", n11.target.value);
  } });
}), er = n({ $title: _().optional(), $item: _().optional(), $default: _().optional() }, (n10, e2) => {
  let {} = n10, { slots: a2 } = e2;
  return () => {
    var n11, e3;
    return w("dl", { children: [x("dt", { children: "default" }), x("dd", { children: null === (n11 = a2.default) || void 0 === n11 ? void 0 : n11.call(a2) }), x("dt", { children: "title" }), x("dd", { children: null === (e3 = a2.title) || void 0 === e3 ? void 0 : e3.call(a2) }), x("dt", { children: "item" }), x("dd", { children: [{ label: "1", value: "1" }, { label: "2", value: "2" }].map((n12) => {
      var e4;
      return null === (e4 = a2.item) || void 0 === e4 ? void 0 : e4.call(a2, n12);
    }) })] });
  };
}), ep = n(() => {
  let n10 = t("");
  return () => x(eu, { $title: w("div", { children: ["Inputted: ", n10.value] }), $item: (n11) => x("div", { children: n11.label }), children: x(ed, { type: "text", onValueChange: (e2) => {
    n10.value = e2;
  } }) });
}), ed = Object.assign(ei, { displayName: "TextInput" }), eu = Object.assign(er, { displayName: "List" }), em = Object.assign(ep, { displayName: "IndexMdCodeBlock4A44Dc15Default" });
function eh(n10) {
  let e2 = { code: "code", codeblock4a44dc15: "codeblock4a44dc15", codeblock4b227777: "codeblock4b227777", div: "div", li: "li", p: "p", pre: "pre", span: "span", ul: "ul", ...n10.components };
  return w(m, { children: [x(e2.p, { children: "为了更好的 TypeScript 和 JSX 的支持，重新抽象了定义组件的方式" }), "\n", x(e2.p, { children: "一般组件：" }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblock4b227777, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " component ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ref ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"vue"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword", children: "const" }), " count ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "ref" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token number", children: "1" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", x(e2.span, { className: "token attr-name", children: "style" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "{" }), " display", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"flex"' }), x(e2.span, { className: "token punctuation", children: "," }), " gap", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"1rem"' }), " ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "Counts: " }), x(e2.span, { className: "token punctuation", children: "{" }), "count", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "button"] }), " ", x(e2.span, { className: "token attr-name", children: "onClick" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " count", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token operator", children: "++" }), x(e2.span, { className: "token punctuation", children: "}" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "Click To Count" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "button"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", x(e2.p, { children: "可复用组件：" }), "\n", w(e2.ul, { children: ["\n", w(e2.li, { children: [x(e2.code, { children: "props" }), " 和 ", x(e2.code, { children: "emits" }), " 合并声明"] }), "\n"] }), "\n", w(e2.div, { "data-example": "", children: [x(e2.div, { "data-example-container": "", children: x(e2.codeblock4a44dc15, {}) }), x(e2.pre, { className: "language-tsx", children: w(e2.code, { className: "language-tsx", children: [x(e2.span, { className: "token keyword module", children: "import" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), " component", x(e2.span, { className: "token punctuation", children: "," }), " t", x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token keyword", children: "type" }), " ", x(e2.span, { className: "token class-name", children: x(e2.span, { className: "token maybe-class-name", children: "VNode" }) }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token keyword", children: "type" }), " ", x(e2.span, { className: "token class-name", children: x(e2.span, { className: "token maybe-class-name", children: "VNodeChild" }) }), " ", x(e2.span, { className: "token punctuation", children: "}" }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token keyword module", children: "import" }), " ", w(e2.span, { className: "token imports", children: [x(e2.span, { className: "token punctuation", children: "{" }), " ref ", x(e2.span, { className: "token punctuation", children: "}" })] }), " ", x(e2.span, { className: "token keyword module", children: "from" }), " ", x(e2.span, { className: "token string", children: '"vue"' }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "const" }), " ", x(e2.span, { className: "token maybe-class-name", children: "TextInput" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), "\n  ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    ", x(e2.span, { className: "token comment", children: "// VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）" }), "\n    ", x(e2.span, { className: "token comment", children: "// 必须声明，哪怕只是属性名称" }), "\n    ", x(e2.span, { className: "token comment", children: "//" }), "\n    ", x(e2.span, { className: "token comment", children: "// 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem" }), "\n    ", x(e2.span, { className: "token comment", children: "// 类型定义无法转为 Runtime 对象" }), "\n    ", x(e2.span, { className: "token comment", children: "// 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证" }), "\n    ", x(e2.span, { className: "token comment", children: "// 注意 default 需要在 最后，为了 内部推导" }), "\n    value", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "string" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "optional" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token keyword module", children: "default" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"1"' }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    type", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "enums" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "[" }), x(e2.span, { className: "token string", children: '"text"' }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token string", children: '"number"' }), x(e2.span, { className: "token punctuation", children: "]" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n\n    ", x(e2.span, { className: "token comment", children: "// on[A-Z] 前缀视为 emits" }), "\n    onValueChange", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "custom" }), x(e2.span, { className: "token operator", children: "<" }), x(e2.span, { className: "token punctuation", children: "(" }), "v", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token builtin", children: "string" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token keyword", children: "void" }), x(e2.span, { className: "token operator", children: ">" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "(" }), "props", x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token punctuation", children: "{" }), " emit ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    ", x(e2.span, { className: "token comment", children: "// setup" }), "\n\n    ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n      ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n        ", x(e2.span, { className: "token attr-name", children: "value" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), "props", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "onInput" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), "e", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n          ", x(e2.span, { className: "token function", children: "emit" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '"value-change"' }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "e", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "target" }), " ", x(e2.span, { className: "token keyword module", children: "as" }), " ", x(e2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n        ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: "/>" })] }), "\n    ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "interface" }), " ", x(e2.span, { className: "token class-name", children: x(e2.span, { className: "token maybe-class-name", children: "Option" }) }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  label", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token builtin", children: "string" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n  value", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token builtin", children: "string" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword", children: "const" }), " ", x(e2.span, { className: "token maybe-class-name", children: "List" }), " ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), "\n  ", x(e2.span, { className: "token punctuation", children: "{" }), "\n    ", x(e2.span, { className: "token comment", children: "// $ 前缀视为 slots" }), "\n    $title", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "custom" }), x(e2.span, { className: "token operator", children: "<" }), x(e2.span, { className: "token maybe-class-name", children: "VNodeChild" }), x(e2.span, { className: "token operator", children: ">" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "optional" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n    ", x(e2.span, { className: "token comment", children: "// renderProp" }), "\n    $item", x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "custom" }), x(e2.span, { className: "token operator", children: "<" }), x(e2.span, { className: "token punctuation", children: "(" }), "option", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token maybe-class-name", children: "Option" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token maybe-class-name", children: "VNode" }), x(e2.span, { className: "token operator", children: ">" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "optional" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n\n    $", x(e2.span, { className: "token keyword module", children: "default" }), x(e2.span, { className: "token operator", children: ":" }), " t", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "custom" }), x(e2.span, { className: "token operator", children: "<" }), x(e2.span, { className: "token maybe-class-name", children: "VNodeChild" }), x(e2.span, { className: "token operator", children: ">" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "optional" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "," }), "\n\n    ", x(e2.span, { className: "token comment", children: "// 以此避免多插槽时 children slots object 的写法, 且无类型约束，" }), "\n    ", x(e2.span, { className: "token comment", children: "// {{ default: () => VNode, title: () => VNode, item: (option: Option) => VNode }}" }), "\n  ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n  ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), " ", x(e2.span, { className: "token punctuation", children: "{" }), " slots ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), "\n    ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n      ", x(e2.span, { className: "token keyword", children: "const" }), " options ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token punctuation", children: "[" }), "\n        ", x(e2.span, { className: "token punctuation", children: "{" }), "\n          label", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"1"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n          value", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"1"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n        ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n        ", x(e2.span, { className: "token punctuation", children: "{" }), "\n          label", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"2"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n          value", x(e2.span, { className: "token operator", children: ":" }), " ", x(e2.span, { className: "token string", children: '"2"' }), x(e2.span, { className: "token punctuation", children: "," }), "\n        ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n      ", x(e2.span, { className: "token punctuation", children: "]" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n      ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n        ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "dl"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "dt"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "default" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "dt"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "dd"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token punctuation", children: "{" }), "slots", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token keyword module", children: "default" }), x(e2.span, { className: "token operator", children: "?." }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "dd"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "dt"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "title" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "dt"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "dd"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token punctuation", children: "{" }), "slots", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "title" }), x(e2.span, { className: "token operator", children: "?." }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "dd"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "dt"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "item" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "dt"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n          " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "dd"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token punctuation", children: "{" }), "options", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token method function property-access", children: "map" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), "option", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " slots", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "item" }), x(e2.span, { className: "token operator", children: "?." }), x(e2.span, { className: "token punctuation", children: "(" }), "option", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "dd"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n        " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "dl"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n    ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "," }), "\n", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n", x(e2.span, { className: "token keyword module", children: "export" }), " ", x(e2.span, { className: "token keyword module", children: "default" }), " ", x(e2.span, { className: "token function", children: "component" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n  ", x(e2.span, { className: "token keyword", children: "const" }), " inputValue ", x(e2.span, { className: "token operator", children: "=" }), " ", x(e2.span, { className: "token function", children: "ref" }), x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token string", children: '""' }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n\n  ", x(e2.span, { className: "token keyword control-flow", children: "return" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "(" }), "\n    ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "List" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "$title" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "Inputted: " }), x(e2.span, { className: "token punctuation", children: "{" }), "inputValue", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token attr-name", children: "$item" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), "o", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token punctuation", children: "{" }), "o", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "label" }), x(e2.span, { className: "token punctuation", children: "}" }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), "div"] }), x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n    ", x(e2.span, { className: "token punctuation", children: ">" })] }), x(e2.span, { className: "token plain-text", children: "\n      " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "<" }), x(e2.span, { className: "token class-name", children: "TextInput" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "type" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token string", children: '"text"' }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n        ", x(e2.span, { className: "token attr-name", children: "onValueChange" }), w(e2.span, { className: "token script language-javascript", children: [x(e2.span, { className: "token script-punctuation punctuation", children: "=" }), x(e2.span, { className: "token punctuation", children: "{" }), x(e2.span, { className: "token punctuation", children: "(" }), "value", x(e2.span, { className: "token punctuation", children: ")" }), " ", x(e2.span, { className: "token arrow operator", children: "=>" }), " ", x(e2.span, { className: "token punctuation", children: "{" }), "\n          inputValue", x(e2.span, { className: "token punctuation", children: "." }), x(e2.span, { className: "token property-access", children: "value" }), " ", x(e2.span, { className: "token operator", children: "=" }), " value", x(e2.span, { className: "token punctuation", children: ";" }), "\n        ", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: "}" })] }), "\n      ", x(e2.span, { className: "token punctuation", children: "/>" })] }), x(e2.span, { className: "token plain-text", children: "\n    " }), w(e2.span, { className: "token tag", children: [w(e2.span, { className: "token tag", children: [x(e2.span, { className: "token punctuation", children: "</" }), x(e2.span, { className: "token class-name", children: "List" })] }), x(e2.span, { className: "token punctuation", children: ">" })] }), "\n  ", x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n", x(e2.span, { className: "token punctuation", children: "}" }), x(e2.span, { className: "token punctuation", children: ")" }), x(e2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function ek() {
  let n10 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e2 } = n10.components || {};
  return e2 ? x(e2, { ...n10, children: x(eh, { ...n10 }) }) : eh(n10);
}
let eN = Object.freeze(Object.defineProperty({ __proto__: null, default: Object.assign(d(() => () => u(ek, { components: { codeblock4b227777: eo, codeblock4a44dc15: em } })), { displayName: "IndexDefault" }) }, Symbol.toStringTag, { value: "Module" }));
