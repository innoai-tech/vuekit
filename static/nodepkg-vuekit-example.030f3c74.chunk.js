import { c as n, r as a, b as e, j as s, x as t, y as c, F as l } from "./lib-nodepkg-vuekit.fdbc1ce2.chunk.js";
import { s as o, f as p, c as i } from "./lib-nodepkg-typedef.6b41fceb.chunk.js";
let r = n(() => {
  let n2 = a(1);
  return () => e("div", { style: { display: "flex", gap: "1rem" }, children: [e("div", { children: ["Counts: ", n2.value] }), s("button", { onClick: () => n2.value++, children: "Click To Count" })] });
}), d = Object.assign(r, { displayName: "IndexMdCodeBlock4B227777Default" }), u = n({ value: o().optional().default("1"), type: p(["text", "number"]), onValueChange: i() }, (n2, a2) => {
  let { emit: e2 } = a2;
  return () => s("input", { value: n2.value, onInput: (n3) => {
    e2("value-change", n3.target.value);
  } });
}), m = n({ $title: i().optional(), $item: i().optional(), $default: i().optional() }, (n2, a2) => {
  let {} = n2, { slots: t2 } = a2;
  return () => {
    var n3, a3;
    return e("dl", { children: [s("dt", { children: "default" }), s("dd", { children: null === (n3 = t2.default) || void 0 === n3 ? void 0 : n3.call(t2) }), s("dt", { children: "title" }), s("dd", { children: null === (a3 = t2.title) || void 0 === a3 ? void 0 : a3.call(t2) }), s("dt", { children: "item" }), s("dd", { children: [{ label: "1", value: "1" }, { label: "2", value: "2" }].map((n4) => {
      var a4;
      return null === (a4 = t2.item) || void 0 === a4 ? void 0 : a4.call(t2, n4);
    }) })] });
  };
}), h = n(() => {
  let n2 = a("");
  return () => s(N, { $title: e("div", { children: ["Inputted: ", n2.value] }), $item: (n3) => s("div", { children: n3.label }), children: s(k, { type: "text", onValueChange: (a2) => {
    n2.value = a2;
  } }) });
}), k = Object.assign(u, { displayName: "TextInput" }), N = Object.assign(m, { displayName: "List" }), g = Object.assign(h, { displayName: "IndexMdCodeBlock4A44Dc15Default" });
function y(n2) {
  let a2 = Object.assign({ p: "p", div: "div", codeblock4b227777: "codeblock4b227777", pre: "pre", code: "code", span: "span", ul: "ul", li: "li", a: "a", codeblock4a44dc15: "codeblock4a44dc15" }, n2.components);
  return e(l, { children: [s(a2.p, { children: "为了更好的 TypeScript 和 JSX 的支持，重新抽象了定义组件的方式" }), "\n", s(a2.p, { children: "一般组件：" }), "\n", e(a2.div, { "data-example": "", children: [s(a2.div, { "data-example-container": "", children: s(a2.codeblock4b227777, {}) }), s(a2.pre, { className: "language-tsx", children: e(a2.code, { className: "language-tsx", children: [s(a2.span, { className: "token keyword module", children: "import" }), " ", e(a2.span, { className: "token imports", children: [s(a2.span, { className: "token punctuation", children: "{" }), " component ", s(a2.span, { className: "token punctuation", children: "}" })] }), " ", s(a2.span, { className: "token keyword module", children: "from" }), " ", s(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token keyword module", children: "import" }), " ", e(a2.span, { className: "token imports", children: [s(a2.span, { className: "token punctuation", children: "{" }), " ref ", s(a2.span, { className: "token punctuation", children: "}" })] }), " ", s(a2.span, { className: "token keyword module", children: "from" }), " ", s(a2.span, { className: "token string", children: '"vue"' }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n", s(a2.span, { className: "token keyword module", children: "export" }), " ", s(a2.span, { className: "token keyword module", children: "default" }), " ", s(a2.span, { className: "token function", children: "component" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n  ", s(a2.span, { className: "token keyword", children: "const" }), " count ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token function", children: "ref" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token number", children: "1" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", s(a2.span, { className: "token keyword control-flow", children: "return" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "\n    ", e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "div"] }), " ", s(a2.span, { className: "token attr-name", children: "style" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "{" }), " display", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"flex"' }), s(a2.span, { className: "token punctuation", children: "," }), " gap", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"1rem"' }), " ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "}" })] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n      " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "Counts: " }), s(a2.span, { className: "token punctuation", children: "{" }), "count", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n      " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "button"] }), " ", s(a2.span, { className: "token attr-name", children: "onClick" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " count", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token operator", children: "++" }), s(a2.span, { className: "token punctuation", children: "}" })] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "Click To Count" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "button"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n    " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] }), "\n", s(a2.p, { children: "可复用组件：" }), "\n", e(a2.ul, { children: ["\n", e(a2.li, { children: [s(a2.code, { children: "props" }), " 和 ", s(a2.code, { children: "emits" }), " 合并声明，基于 ", s(a2.a, { href: "https://zod.dev/", children: "zod" })] }), "\n"] }), "\n", e(a2.div, { "data-example": "", children: [s(a2.div, { "data-example-container": "", children: s(a2.codeblock4a44dc15, {}) }), s(a2.pre, { className: "language-tsx", children: e(a2.code, { className: "language-tsx", children: [s(a2.span, { className: "token keyword module", children: "import" }), " ", e(a2.span, { className: "token imports", children: [s(a2.span, { className: "token punctuation", children: "{" }), " component", s(a2.span, { className: "token punctuation", children: "," }), " t ", s(a2.span, { className: "token punctuation", children: "}" })] }), " ", s(a2.span, { className: "token keyword module", children: "from" }), " ", s(a2.span, { className: "token string", children: '"@innoai-tech/vuekit"' }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token keyword module", children: "import" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), " ref", s(a2.span, { className: "token punctuation", children: "," }), " ", s(a2.span, { className: "token keyword", children: "type" }), " ", s(a2.span, { className: "token class-name", children: s(a2.span, { className: "token maybe-class-name", children: "VNode" }) }), s(a2.span, { className: "token punctuation", children: "," }), " ", s(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), " ", s(a2.span, { className: "token punctuation", children: "}" }), " ", s(a2.span, { className: "token keyword module", children: "from" }), " ", s(a2.span, { className: "token string", children: '"vue"' }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n", s(a2.span, { className: "token keyword module", children: "export" }), " ", s(a2.span, { className: "token keyword", children: "const" }), " ", s(a2.span, { className: "token maybe-class-name", children: "TextInput" }), " ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token function", children: "component" }), s(a2.span, { className: "token punctuation", children: "(" }), "\n  ", s(a2.span, { className: "token punctuation", children: "{" }), "\n    ", s(a2.span, { className: "token comment", children: "// VUE 的注册机制（Proxy 定义基准，以及从 attrs 中提取 props 的 emits 的依据）" }), "\n    ", s(a2.span, { className: "token comment", children: "// 必须声明，哪怕只是属性名称" }), "\n    ", s(a2.span, { className: "token comment", children: "//" }), "\n    ", s(a2.span, { className: "token comment", children: "// 又由于 TypeString 的老问题  https://www.typescriptneedstypes.com/#the-problem" }), "\n    ", s(a2.span, { className: "token comment", children: "// 类型定义无法转为 Runtime 对象" }), "\n    ", s(a2.span, { className: "token comment", children: "// 因此这里通过 superstruct 定义类型后 来进行反向推导 （同时作为 Runtime 验证" }), "\n    ", s(a2.span, { className: "token comment", children: "// 注意 default 需要在 最后，为了 内部推导" }), "\n    value", s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "string" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "optional" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token keyword module", children: "default" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token string", children: '"1"' }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "," }), "\n    type", s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "enums" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "[" }), s(a2.span, { className: "token string", children: '"text"' }), s(a2.span, { className: "token punctuation", children: "," }), " ", s(a2.span, { className: "token string", children: '"number"' }), s(a2.span, { className: "token punctuation", children: "]" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "," }), "\n\n    ", s(a2.span, { className: "token comment", children: "// on[A-Z] 前缀视为 emits" }), "\n    onValueChange", s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "custom" }), s(a2.span, { className: "token operator", children: "<" }), s(a2.span, { className: "token punctuation", children: "(" }), "v", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token builtin", children: "string" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token keyword", children: "void" }), s(a2.span, { className: "token operator", children: ">" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), "\n  ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "," }), "\n  ", s(a2.span, { className: "token punctuation", children: "(" }), "props", s(a2.span, { className: "token punctuation", children: "," }), " ", s(a2.span, { className: "token punctuation", children: "{" }), " emit ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n    ", s(a2.span, { className: "token comment", children: "// setup" }), "\n\n    ", s(a2.span, { className: "token keyword control-flow", children: "return" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "\n      ", e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "input"] }), "\n        ", s(a2.span, { className: "token attr-name", children: "value" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), "props", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", s(a2.span, { className: "token attr-name", children: "onInput" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "(" }), "e", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n          ", s(a2.span, { className: "token function", children: "emit" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token string", children: '"value-change"' }), s(a2.span, { className: "token punctuation", children: "," }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "e", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "target" }), " ", s(a2.span, { className: "token keyword module", children: "as" }), " ", s(a2.span, { className: "token maybe-class-name", children: "HTMLInputElement" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n        ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", s(a2.span, { className: "token punctuation", children: "/>" })] }), "\n    ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n  ", s(a2.span, { className: "token punctuation", children: "}" }), "\n", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n", s(a2.span, { className: "token keyword module", children: "export" }), " ", s(a2.span, { className: "token keyword", children: "interface" }), " ", s(a2.span, { className: "token class-name", children: s(a2.span, { className: "token maybe-class-name", children: "Option" }) }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n  label", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token builtin", children: "string" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n  value", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token builtin", children: "string" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token punctuation", children: "}" }), "\n\n", s(a2.span, { className: "token keyword module", children: "export" }), " ", s(a2.span, { className: "token keyword", children: "const" }), " ", s(a2.span, { className: "token maybe-class-name", children: "List" }), " ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token function", children: "component" }), s(a2.span, { className: "token punctuation", children: "(" }), "\n  ", s(a2.span, { className: "token punctuation", children: "{" }), "\n    ", s(a2.span, { className: "token comment", children: "// $ 前缀视为 slots" }), "\n    $title", s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "custom" }), s(a2.span, { className: "token operator", children: "<" }), s(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), s(a2.span, { className: "token operator", children: ">" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "optional" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "," }), "\n    ", s(a2.span, { className: "token comment", children: "// renderProp" }), "\n    $item", s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "custom" }), s(a2.span, { className: "token operator", children: "<" }), s(a2.span, { className: "token punctuation", children: "(" }), "option", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token maybe-class-name", children: "Option" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token maybe-class-name", children: "VNode" }), s(a2.span, { className: "token operator", children: ">" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "optional" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "," }), "\n\n    $", s(a2.span, { className: "token keyword module", children: "default" }), s(a2.span, { className: "token operator", children: ":" }), " t", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "custom" }), s(a2.span, { className: "token operator", children: "<" }), s(a2.span, { className: "token maybe-class-name", children: "VNodeChild" }), s(a2.span, { className: "token operator", children: ">" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "optional" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), "\n\n    ", s(a2.span, { className: "token comment", children: "// 以此避免多插槽时 children slots object 的写法, 且无类型约束，" }), "\n    ", s(a2.span, { className: "token comment", children: "// {{ default: () => VNode, title: () => VNode, item: (option: Option) => VNode }}" }), "\n  ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "," }), "\n  ", s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "," }), " ", s(a2.span, { className: "token punctuation", children: "{" }), " slots ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), "\n    ", s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n      ", s(a2.span, { className: "token keyword", children: "const" }), " options ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token punctuation", children: "[" }), "\n        ", s(a2.span, { className: "token punctuation", children: "{" }), "\n          label", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"1"' }), s(a2.span, { className: "token punctuation", children: "," }), "\n          value", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"1"' }), "\n        ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "," }), "\n        ", s(a2.span, { className: "token punctuation", children: "{" }), "\n          label", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"2"' }), s(a2.span, { className: "token punctuation", children: "," }), "\n          value", s(a2.span, { className: "token operator", children: ":" }), " ", s(a2.span, { className: "token string", children: '"2"' }), "\n        ", s(a2.span, { className: "token punctuation", children: "}" }), "\n      ", s(a2.span, { className: "token punctuation", children: "]" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n      ", s(a2.span, { className: "token keyword control-flow", children: "return" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "\n        ", e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "dl"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n          " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "default" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n          " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token punctuation", children: "{" }), "slots", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token keyword module", children: "default" }), s(a2.span, { className: "token operator", children: "?." }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n          " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "title" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n          " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token punctuation", children: "{" }), "slots", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "title" }), s(a2.span, { className: "token operator", children: "?." }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n          " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "dt"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "item" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "dt"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n          " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "dd"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token punctuation", children: "{" }), "options", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token method function property-access", children: "map" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "(" }), "option", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " slots", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "item" }), s(a2.span, { className: "token operator", children: "?." }), s(a2.span, { className: "token punctuation", children: "(" }), "option", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "dd"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n        " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "dl"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), "\n      ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n    ", s(a2.span, { className: "token punctuation", children: "}" }), "\n", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n", s(a2.span, { className: "token keyword module", children: "export" }), " ", s(a2.span, { className: "token keyword module", children: "default" }), " ", s(a2.span, { className: "token function", children: "component" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n  ", s(a2.span, { className: "token keyword", children: "const" }), " inputValue ", s(a2.span, { className: "token operator", children: "=" }), " ", s(a2.span, { className: "token function", children: "ref" }), s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token string", children: '""' }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n\n  ", s(a2.span, { className: "token keyword control-flow", children: "return" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "(" }), "\n    ", e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), s(a2.span, { className: "token class-name", children: "List" })] }), "\n      ", s(a2.span, { className: "token attr-name", children: "$title" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "Inputted: " }), s(a2.span, { className: "token punctuation", children: "{" }), "inputValue", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), s(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", s(a2.span, { className: "token attr-name", children: "$item" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "(" }), "o", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token punctuation", children: "{" }), "o", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "label" }), s(a2.span, { className: "token punctuation", children: "}" }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), "div"] }), s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n    ", s(a2.span, { className: "token punctuation", children: ">" })] }), s(a2.span, { className: "token plain-text", children: "\n      " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "<" }), s(a2.span, { className: "token class-name", children: "TextInput" })] }), "\n        ", s(a2.span, { className: "token attr-name", children: "type" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token string", children: '"text"' }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n        ", s(a2.span, { className: "token attr-name", children: "onValueChange" }), e(a2.span, { className: "token script language-javascript", children: [s(a2.span, { className: "token script-punctuation punctuation", children: "=" }), s(a2.span, { className: "token punctuation", children: "{" }), s(a2.span, { className: "token punctuation", children: "(" }), "value", s(a2.span, { className: "token punctuation", children: ")" }), " ", s(a2.span, { className: "token arrow operator", children: "=>" }), " ", s(a2.span, { className: "token punctuation", children: "{" }), "\n          inputValue", s(a2.span, { className: "token punctuation", children: "." }), s(a2.span, { className: "token property-access", children: "value" }), " ", s(a2.span, { className: "token operator", children: "=" }), " value", s(a2.span, { className: "token punctuation", children: ";" }), "\n        ", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: "}" })] }), "\n      ", s(a2.span, { className: "token punctuation", children: "/>" })] }), s(a2.span, { className: "token plain-text", children: "\n    " }), e(a2.span, { className: "token tag", children: [e(a2.span, { className: "token tag", children: [s(a2.span, { className: "token punctuation", children: "</" }), s(a2.span, { className: "token class-name", children: "List" })] }), s(a2.span, { className: "token punctuation", children: ">" })] }), "\n  ", s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n", s(a2.span, { className: "token punctuation", children: "}" }), s(a2.span, { className: "token punctuation", children: ")" }), s(a2.span, { className: "token punctuation", children: ";" }), "\n"] }) })] })] });
}
function v() {
  let n2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: a2 } = n2.components || {};
  return a2 ? s(a2, Object.assign({}, n2, { children: s(y, n2) })) : y(n2);
}
let w = t(() => () => c(v, { components: { codeblock4b227777: d, codeblock4a44dc15: g } })), f = Object.assign(w, { displayName: "IndexDefault" });
export {
  f as default
};
